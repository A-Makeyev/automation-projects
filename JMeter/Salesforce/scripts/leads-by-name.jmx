<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="filename">C:/LoadTest/Salesforce/alpha360/data/customer_names.txt</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="variableNames">term,</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="half_hour" elementType="Argument">
            <stringProp name="Argument.name">half_hour</stringProp>
            <stringProp name="Argument.value">1800</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list">
          <elementProp name="" elementType="Authorization">
            <stringProp name="Authorization.url">http://alpha--qaall.lightning.force.com:443/cometd/40.0</stringProp>
            <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
            <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
            <stringProp name="Authorization.domain"></stringProp>
            <stringProp name="Authorization.realm"></stringProp>
            <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
          </elementProp>
        </collectionProp>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="TestPlan.comments">https://alpha--qaall.lightning.force.com &lt;&gt; qausr01@yes.co.il.qaall &lt;&gt; Yesqa1247 &lt;&gt; קורין טניאני </stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${half_hour}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01. Login Screen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01.01. /welcome" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_QCQQ" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_QCQQ</stringProp>
              <stringProp name="RegexExtractor.regex">name=&quot;QCQQ&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01.02 /login-messages/promos.html-232" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">c.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Short Sleep" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="02. Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02.01 Login Details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="un" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">un</stringProp>
                  <stringProp name="Argument.value">qausr01@yes.co.il.qaall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="width" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">width</stringProp>
                  <stringProp name="Argument.value">1924</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="height" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">height</stringProp>
                  <stringProp name="Argument.value">1008</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasRememberUn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasRememberUn</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="useSecure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">useSecure</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="local" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">local</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <stringProp name="Argument.value">standard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="qs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qs</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_token</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_callback</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serverid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">serverid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="QCQQ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">QCQQ</stringProp>
                  <stringProp name="Argument.value">${_QCQQ}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">qausr01@yes.co.il.qaall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ExtraLog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ExtraLog</stringProp>
                  <stringProp name="Argument.value">%5B%7B%22width%22:1924%7D,%7B%22height%22:1008%7D,%7B%22language%22:%22en-US%22%7D,%7B%22offset%22:-2%7D,%7B%22scripts%22:%5B%7B%22size%22:249,%22summary%22:%22if%20(self%20==%20top)%20%7Bdocument.documentElement.style.v%22%7D,%7B%22size%22:573,%22summary%22:%22var%20SFDCSessionVars=%7B%5C%22server%5C%22:%5C%22https:%5C%5C/%5C%5C/test.sale%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/SfdcSessionBase208.js%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/LoginHint208.js%22%7D,%7B%22size%22:26,%22summary%22:%22LoginHint.hideLoginForm();%22%7D,%7B%22size%22:36,%22summary%22:%22LoginHint.getSavedIdentities(false);%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/baselogin4.js%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/LoginMarketingSurveyResponse.js%22%7D,%7B%22size%22:451,%22summary%22:%22function%20handleLogin()%7Bdocument.login.un.value=doc%22%7D%5D%7D,%7B%22scriptCount%22:9%7D,%7B%22iframes%22:%5B%22https://c.salesforce.com/login-messages/promos.html%22,%22https://test.salesforce.com/login/sessionserver212.html%22%5D%7D,%7B%22iframeCount%22:2%7D,%7B%22referrer%22:%22NO_REFERRER%22%7D%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pw</stringProp>
                  <stringProp name="Argument.value">Yesqa1247</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rememberUn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rememberUn</stringProp>
                  <stringProp name="Argument.value">on</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/frontdoor.jsp-246" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQP.p_YUx8fZAlp4scoV9SD6MZEGySkTyjVbef3bBS0S36xeQTv10a9.qWalPWkuJ6SHjQFHaOBr9AjfwOV9_IpJgFWSn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="apv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apv</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="allp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">allp</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/frontdoor.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/myDomainDoor-247" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--c.documentforce.com/secur/contentDoor?startURL=${scheme}%3A%2F%2Falpha--qaall.my.salesforce.com%2Fone%2Fone.app&amp;sid=00D3M0000008my9%21AR0AQI6TiLRH0mBRNM06Roj53JPf0WMNm1G3KjMXScpJI3x3ISioI5fI04XAZvh3TMxmdmxVi95JFeHdvMxArSRVvNTQ09hm&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNTQ1MzE4NDYxMCwiZXhwIjowfQ%3D%3D..dTs9DSfh3IpDIdl-.h3qB7zBI2YewN8P3SAOPfA%3D%3D.0amtMpl7gBDDk798YmZo7Q%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cs127.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/myDomainDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/contentDoor-248" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.my.salesforce.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQI6TiLRH0mBRNM06Roj53JPf0WMNm1G3KjMXScpJI3x3ISioI5fI04XAZvh3TMxmdmxVi95JFeHdvMxArSRVvNTQ09hm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="skipRedirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skipRedirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lm</stringProp>
                  <stringProp name="Argument.value">eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNTQ1MzE4NDYxMCwiZXhwIjowfQ==..dTs9DSfh3IpDIdl-.h3qB7zBI2YewN8P3SAOPfA==.0amtMpl7gBDDk798YmZo7Q==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.documentforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/contentDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02.02 /one/one.app-251" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/secur/contentDoor?startURL=${scheme}%3A%2F%2Falpha--qaall.my.salesforce.com%2Fone%2Fone.app&amp;sid=00D3M0000008my9%21AR0AQI6TiLRH0mBRNM06Roj53JPf0WMNm1G3KjMXScpJI3x3ISioI5fI04XAZvh3TMxmdmxVi95JFeHdvMxArSRVvNTQ09hm&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNTQ1MzE4NDYxMCwiZXhwIjowfQ%3D%3D..dTs9DSfh3IpDIdl-.h3qB7zBI2YewN8P3SAOPfA%3D%3D.0amtMpl7gBDDk798YmZo7Q%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_token</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">children</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-252" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-253" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02.03 /visualforce/recsession-255" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQHqJ3oKvpUK2T5kTSMnik25m6BvH9ICHNlvIkUdTm1iKoKLFI5noPj.nKm8oa8b66aIRGrngtoRR4_Xn7htTdrBUcRML</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-256" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?preloadActions-257" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;app&quot;:&quot;one:one&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.one.controller.OneController/ACTION$getCurrentApp&quot;,&quot;params&quot;:{&quot;appContextIdOrName&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;id&quot;:&quot;0;p&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?preloadActions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_appDefinition" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_appDefinition</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appDefinition&quot;:{&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_appDefinition</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Short Sleep" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="03. Home Screen - Customers" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
          <stringProp name="TestPlan.comments">channalName ~&gt; client id</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1-262" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;273;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexiPageDeveloperName&quot;:&quot;Alpha_360_UtilityBar&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">372600000082e655bc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=2&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1-264" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;334;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=2&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4153000000e804e5d5</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-global-components-one-consoleLayoutContainer.ConsoleLayout.getConsoleState=2&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1-263" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;116;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.consoleLayoutContainer.ConsoleLayoutController/ACTION$getConsoleState&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;category&quot;:&quot;Base&quot;,&quot;appId&quot;:&quot;06m3M0000000COoQAM&quot;}},{&quot;id&quot;:&quot;117;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.consoleLayoutContainer.ConsoleLayoutController/ACTION$getConsoleState&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;category&quot;:&quot;mostRecentlyUsed&quot;,&quot;appId&quot;:&quot;06m3M0000000COoQAM&quot;}},{&quot;id&quot;:&quot;199;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:false}},{&quot;id&quot;:&quot;217;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.favorites.FavoritesController/ACTION$getFavorites&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;236;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.empApi.EmpApiController/ACTION$getEmpConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;240;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getInitializationValues&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;250;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.header.HeaderController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-global-components-one-consoleLayoutContainer.ConsoleLayout.getConsoleState=2&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4145000000f677a281</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_sessionKey</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_sessionKey" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_sessionKey</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionKey&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=3&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-266" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;337;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;0053M000000W0unQAC.undefined.null.null.null.Name,Id.VIEW.false.null.null.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=3&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">4520000000088fd71a</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-265" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="console" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">console</stringProp>
                  <stringProp name="Argument.value">history</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="flexipage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">flexipage</stringProp>
                  <stringProp name="Argument.value">componentDecorator</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">apiBridgeConfig,copyToClipboard,copyToClipboardButton,popOutManager,popOutManagerAura,popOutManagerInit,sforceConsoleEvent,treeGridRecordActionEvent,treeGridRenderingDoneEvent,treeGridTriggerCell,urlUtils,virtualTreeGrid</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="forceCommunity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forceCommunity</stringProp>
                  <stringProp name="Argument.value">switchToFlow</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="interop" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">interop</stringProp>
                  <stringProp name="Argument.value">card</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="laf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">laf</stringProp>
                  <stringProp name="Argument.value">windowMessageLib,windowMessengerAura,windowMessengerEvent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lbpm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lbpm</stringProp>
                  <stringProp name="Argument.value">recordActionLibrary,recordActionManager</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lightning" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lightning</stringProp>
                  <stringProp name="Argument.value">SVGLibrary,conversationAgentSend,conversationChatEnded,conversationCustomEvent,conversationNewMessage,conversationToolkitAPI,eventEmitterLibrary,interactingStateLibrary,messageChannel,messageContextConsumer,messageService,omniChannelLoginSuccess,omniChannelLogout,omniChannelStatusChanged,omniChannelWorkAccepted,omniChannelWorkAssigned,omniChannelWorkClosed,omniChannelWorkDeclined,omniChannelWorkloadChanged,omniToolkitAPI,platformResourceLoader,rateLimitLibrary,select,utilityBarAPI,validityLibrary</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="omni" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">omni</stringProp>
                  <stringProp name="Argument.value">componentLibrary,toggleLoading</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="one" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">one</stringProp>
                  <stringProp name="Argument.value">utilityBarItem</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="opencti" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">opencti</stringProp>
                  <stringProp name="Argument.value">addCaller,apiHandlerInitializationCompleted,callControlsContainer,callingEnabled,dialPad,embeddedTelephonyCallStatusChanged,embeddedTelephonyConnector,embeddedTelephonyMessage,embeddedTelephonyService,embeddedTelephonyTab,embeddedTelephonyVendorConnector,externalTransfer,getSoftPhoneReference,inputPhoneNumber,phoneCallControls,phoneCallEntry,phoneCallExtension,serverDataLib,serverDataLibInit,softPhone,softphoneIframeInitializationCompleted,waitForApiHandlerInitialization</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="runtime_service_liveagent" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_service_liveagent</stringProp>
                  <stringProp name="Argument.value">chatApi,chatLib,chatMessenger,conversationToolkitAPI,eAgentMessage,eChasitorAgentChatEnded,eChasitorChatEnded,eChasitorClientTyping,eChasitorClientTypingApp,eChasitorNewMessage,eChasitorSneakPeek,eChasitorSneakPeekApp,eChatAccepted,eChatEvent,eClientIdleUpdate,eConferenceAccepted,eConferenceFailed,eConferenceLeft,eConferenceRejected,eConferenceRequested,eConversationEvent,eCoreConfigFetched,eCriticalWaitState,eCriticalWaitStateApp,eDeliveryReceipt,eEndUserNewMessage,eFileTransferCanceled,eFileTransferCanceledAgent,eFileTransferCanceledChasitor,eFileTransferCompleted,eFileTransferErrorOnInitiation,eFileTransferFailure,eFileTransferSuccess,eFindOrCreateResults,eFlagLower,eInitFileTransfer,ePeerInformationResponse,eSetAgentInput,eSupervisorWhisperMessage,eTransferAccepted,eTransferAcceptedApp,eTransferRejected,toolkitMessenger</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="runtime_service_livemessage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">runtime_service_livemessage</stringProp>
                  <stringProp name="Argument.value">chatHover</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="runtime_service_omnichannel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_service_omnichannel</stringProp>
                  <stringProp name="Argument.value">abstractPushedRequest,currentWork,currentWorkList,currentWorkTransfer,dataTypeLib,eMessageDismissed,ePresenceReady,eWorkRendered,eWorkSetFocus,eWorkTabOpened,eWorkTransferInitiated,eWorkTransferSelected,message,omniWidget,pushedEntityRequest,scrtLib,status,toolkit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="runtime_service_predictions" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">runtime_service_predictions</stringProp>
                  <stringProp name="Argument.value">dockedComposerManager,einsteinArticleSuggestionEvent,einsteinSuggestedResponseUrlObserver,predictionsLib</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scrt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scrt</stringProp>
                  <stringProp name="Argument.value">scrtConnector,scrtEventHandler,scrtIntegrationService,utils</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="support" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">support</stringProp>
                  <stringProp name="Argument.value">baseInteractionLib</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">1672192036</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=4&amp;ui-force-components-controllers-lists-listViewManager.ListViewManager.getMetadataInitialLoad=1-267" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;496;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewManager.ListViewManagerController/ACTION$getMetadataInitialLoad&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Account&quot;,&quot;listViewIdOrName&quot;:&quot;Recent&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:true,&quot;isSearch&quot;:false}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=4&amp;ui-force-components-controllers-lists-listViewManager.ListViewManager.getMetadataInitialLoad=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">519200000039624591</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-268" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://force:listViewManagerSplitViewList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=5&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1-269" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;508;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;records&quot;:{&quot;0053M000000W0unQAC&quot;:{}},&quot;refreshCached&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=5&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">5335000000289bb136</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-270" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:utilityBarContent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=6&amp;ui-force-components-controllers-lists-listViewDataManager.ListViewDataManager.getItems=1&amp;ui-force-components-virtualRecordList.VirtualRecordList.getRecordLayoutComponent=1-272" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;544;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.virtualRecordList.VirtualRecordListController/ACTION$getRecordLayoutComponent&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;inContextOfComponent&quot;:&quot;force:listViewManagerSplitViewList&quot;,&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Account&quot;,&quot;listViewIdOrName&quot;:&quot;Recent&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:true,&quot;isSearch&quot;:false},&quot;layoutType&quot;:&quot;SEARCH&quot;}},{&quot;id&quot;:&quot;547;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewDataManager.ListViewDataManagerController/ACTION$getItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;filterName&quot;:&quot;Recent&quot;,&quot;entityName&quot;:&quot;Account&quot;,&quot;pageSize&quot;:50,&quot;layoutType&quot;:&quot;SEARCH&quot;,&quot;sortBy&quot;:null,&quot;getCount&quot;:false,&quot;enableRowActions&quot;:false,&quot;offset&quot;:0},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=6&amp;ui-force-components-controllers-lists-listViewDataManager.ListViewDataManager.getItems=1&amp;ui-force-components-virtualRecordList.VirtualRecordList.getRecordLayoutComponent=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">5738000000452e1702</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=7&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1-273" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;566;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;recordId&quot;:null,&quot;context&quot;:&quot;MRU_LIST&quot;,&quot;entityApiName&quot;:&quot;Account&quot;,&quot;record&quot;:null,&quot;listNameOrId&quot;:&quot;Recent&quot;,&quot;size&quot;:0,&quot;maxWidth&quot;:-1,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;actionsRequestId&quot;:0}]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=7&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">585900000061be432c</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=8&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-274" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;595;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[],&quot;entityNames&quot;:[&quot;Account&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=8&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">58610000001f9d28a1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=9&amp;ui-liveagent-components-aura-controller.ChatConfig.getChatConfiguration=1&amp;ui-liveagent-components-aura-controller.Status.getStatuses=1-275" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;790;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.ChatConfigController/ACTION$getChatConfiguration&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;799;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.StatusController/ACTION$getStatuses&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=9&amp;ui-liveagent-components-aura-controller.ChatConfig.getChatConfiguration=1&amp;ui-liveagent-components-aura-controller.Status.getStatuses=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7104000000a3b3fa8d</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=10&amp;ui-liveagent-components-aura-controller.OmniWidget.getDeclineReasons=1&amp;ui-liveagent-components-aura-controller.OmniWidget.getSCRTInfo=1&amp;ui-liveagent-components-aura-controller.OmniWidget.isDeclineReasonEnabled=1-276" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;853;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getSCRTInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;854;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$isDeclineReasonEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;855;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getDeclineReasons&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=10&amp;ui-liveagent-components-aura-controller.OmniWidget.getDeclineReasons=1&amp;ui-liveagent-components-aura-controller.OmniWidget.getSCRTInfo=1&amp;ui-liveagent-components-aura-controller.OmniWidget.isDeclineReasonEnabled=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">72150000000249c795</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chat/rest/console-277" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">version</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="chatUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">chatUrl</stringProp>
                  <stringProp name="Argument.value">${scheme}://d.la1-c1cs-lo2.salesforceliveagent.com/chat</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="contentUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">contentUrl</stringProp>
                  <stringProp name="Argument.value">${scheme}://c.la1-c1cs-lo2.salesforceliveagent.com/content</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">d.la1-c1cs-lo2.salesforceliveagent.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/chat/rest/console</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_nc_external/system/security/session/SessionTimeServlet-278" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="buster" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buster</stringProp>
                  <stringProp name="Argument.value">1605453194247</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_nc_external/system/security/session/SessionTimeServlet</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=11&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1-279" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;932;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.defenseHook.DefenseHookController/ACTION$getDefenseHook&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;945;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.onboardingManager.OnboardingManagerController/ACTION$getPayload&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;contextualData&quot;:{&quot;appDefinition&quot;:{&quot;id&quot;:&quot;06m3M0000000COoQAM&quot;,&quot;developerName&quot;:&quot;Alpha_360&quot;},&quot;pageReference&quot;:null,&quot;testModeEnabled&quot;:false,&quot;testModeShowSeen&quot;:false,&quot;authoringMode&quot;:false,&quot;pendingPromptId&quot;:null}}},{&quot;id&quot;:&quot;946;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.identity.components.sessiontimeoutwarn.SessionTimeoutWarnController/ACTION$getSessionTimeoutConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;949;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.unsupportedContainer.UnsupportedContainerController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;950;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.support.components.crossFrameApiManager.CrossFrameApiManagerController/ACTION$getIsLightningOpenCtiUser&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;951;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.rtc.components.aura.components.RtcDiscoveryBannerController/ACTION$getConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;956;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;973;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;974;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;currentLastActivity&quot;:&quot;1970-01-01T00:00:00.000Z&quot;}},{&quot;id&quot;:&quot;979;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=11&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">796500000084fe7dba</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-283" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;1&quot;,&quot;version&quot;:&quot;1.0&quot;,&quot;minimumVersion&quot;:&quot;1.0&quot;,&quot;channel&quot;:&quot;/meta/handshake&quot;,&quot;supportedConnectionTypes&quot;:[&quot;long-polling&quot;,&quot;callback-polling&quot;],&quot;advice&quot;:{&quot;timeout&quot;:110000},&quot;ext&quot;:{&quot;empJs&quot;:true,&quot;channelName&quot;:&quot;/s/notifications/notification&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_clientId</stringProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_clientId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_clientId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;clientId&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-291" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;2&quot;,&quot;channel&quot;:&quot;/meta/subscribe&quot;,&quot;subscription&quot;:&quot;/s/notifications/notification&quot;,&quot;clientId&quot;:&quot;${_clientId}&quot;,&quot;ext&quot;:{&quot;replay&quot;:{&quot;/s/notifications/notification&quot;:-1}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-292" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;4&quot;,&quot;channel&quot;:&quot;/meta/connect&quot;,&quot;connectionType&quot;:&quot;long-polling&quot;,&quot;advice&quot;:{&quot;timeout&quot;:0},&quot;clientId&quot;:&quot;y5rqbyesp135swqzlvg4ws5vqp&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-297" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;3&quot;,&quot;channel&quot;:&quot;/meta/subscribe&quot;,&quot;subscription&quot;:&quot;/s/notifications/readstate&quot;,&quot;clientId&quot;:&quot;${_clientId}&quot;,&quot;ext&quot;:{&quot;replay&quot;:{&quot;/s/notifications/readstate&quot;:-1}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=15&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1-284" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;982;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getPermissions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=15&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7971000000a62c3b65</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=14&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1-281" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;981;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;customAppId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=14&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7970000000d2879e86</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-288" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:onePreloads</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=12&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-282" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;931;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:2928,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:564,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:2931,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:3833,\&quot;duration\&quot;:45,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3878,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-didInit\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleLayoutContainer-didInit\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer\&quot;,\&quot;context\&quot;:{\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;customAppId\&quot;:\&quot;06m3M0000000COoQAM\&quot;,\&quot;customAppDevName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;}},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:0,\&quot;duration\&quot;:4140,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:2908,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:0,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:6,\&quot;startTime\&quot;:2908,\&quot;fetchStart\&quot;:2908,\&quot;requestStart\&quot;:2908,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:1,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:504937,\&quot;decodedBodySize\&quot;:504937,\&quot;serverTime\&quot;:51,\&quot;defs\&quot;:[\&quot;markup://force:closeRecord\&quot;,\&quot;markup://force:scopedActionModal\&quot;,\&quot;markup://force:scopedModal\&quot;,\&quot;markup://lightning:tabClosed\&quot;,\&quot;markup://lightning:tabCreated\&quot;,\&quot;markup://lightning:tabRefreshed\&quot;,\&quot;markup://lightning:tabReplaced\&quot;,\&quot;markup://lightning:unsavedChanges\&quot;,\&quot;markup://one:addWorkspaceTab\&quot;],\&quot;xhrDelay\&quot;:49},\&quot;duration\&quot;:55}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:892,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:891},{\&quot;name\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0},{\&quot;name\&quot;:\&quot;ui:label\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1}]}]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;bootstrap\&quot;,\&quot;eventSource\&quot;:\&quot;lightning\&quot;,\&quot;attributes\&quot;:{\&quot;cache\&quot;:{\&quot;appCache\&quot;:false,\&quot;gvps\&quot;:false,\&quot;lightningLayout\&quot;:true},\&quot;execBootstrapJs\&quot;:2053,\&quot;execInlineJs\&quot;:2053,\&quot;appCssLoading\&quot;:null,\&quot;visibilityStateStart\&quot;:\&quot;visible\&quot;,\&quot;execAuraJs\&quot;:2266,\&quot;runInitAsync\&quot;:2361,\&quot;runAfterContextCreated\&quot;:2415,\&quot;runAfterInitDefsReady\&quot;:2416,\&quot;runAfterBootstrapReady\&quot;:2418,\&quot;AuraFrameworkEPT\&quot;:2418,\&quot;appCreationStart\&quot;:2467,\&quot;appCreationEnd\&quot;:2848,\&quot;appRenderingStart\&quot;:2848,\&quot;appRenderingEnd\&quot;:2868,\&quot;bootstrapEPT\&quot;:2868,\&quot;cdnEnabled\&quot;:true,\&quot;mode\&quot;:\&quot;PROD\&quot;,\&quot;pageStartTime\&quot;:1605453186309,\&quot;timing\&quot;:{\&quot;navigationStart\&quot;:1605453186309,\&quot;fetchStart\&quot;:1605453187676,\&quot;readyStart\&quot;:1367,\&quot;dnsStart\&quot;:1605453187678,\&quot;dnsEnd\&quot;:1605453187678,\&quot;lookupDomainTime\&quot;:0,\&quot;connectStart\&quot;:1605453187678,\&quot;connectEnd\&quot;:1605453187678,\&quot;connectTime\&quot;:0,\&quot;requestStart\&quot;:1605453187686,\&quot;responseStart\&quot;:1605453187687,\&quot;responseEnd\&quot;:1605453188349,\&quot;requestTime\&quot;:663,\&quot;domLoading\&quot;:1605453188318,\&quot;domInteractive\&quot;:1605453188664,\&quot;initDomTreeTime\&quot;:315,\&quot;contentLoadStart\&quot;:1605453188664,\&quot;contentLoadEnd\&quot;:1605453188665,\&quot;domComplete\&quot;:1605453188667,\&quot;domReadyTime\&quot;:3,\&quot;loadEventStart\&quot;:1605453188667,\&quot;loadEventEnd\&quot;:1605453188667,\&quot;loadEventTime\&quot;:0,\&quot;loadTime\&quot;:991,\&quot;unloadEventStart\&quot;:0,\&quot;unloadEventEnd\&quot;:0,\&quot;unloadEventTime\&quot;:0,\&quot;appCacheTime\&quot;:2,\&quot;redirectTime\&quot;:0},\&quot;type\&quot;:\&quot;WARM\&quot;,\&quot;allRequests\&quot;:[{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/one/one.app\&quot;,\&quot;initiatorType\&quot;:\&quot;navigation\&quot;,\&quot;duration\&quot;:1378,\&quot;startTime\&quot;:0,\&quot;fetchStart\&quot;:1367,\&quot;requestStart\&quot;:1378,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;redirect\&quot;:1365,\&quot;ttfb\&quot;:1378,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:279201,\&quot;encodedBodySize\&quot;:274736,\&quot;decodedBodySize\&quot;:274736,\&quot;serverTime\&quot;:148},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/l/%7B%22mode%22%3A%22PROD%22%2C%22app%22%3A%22one%3Aone%22%2C%22fwuid%22%3A%22dDIdorNC3N22LalQ5i3slQ%22%2C%22loaded%22%3A%7B%22APPLICATION%40markup%3A%2F%2Fone%3Aone%22%3A%22Ebr4Jil7Vde_KOs5ojXMVQ%22%7D%2C%22mlr%22%3A1%2C%22pathPrefix%22%3A%22%22%2C%22dns%22%3A%22c%22%2C%22ls%22%3A1%7D/resources.js?pv=1605438359000968534465&amp;rv=1605438227000\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:23,\&quot;startTime\&quot;:2041,\&quot;fetchStart\&quot;:2041,\&quot;requestStart\&quot;:2041,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:4,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:33616,\&quot;decodedBodySize\&quot;:33616},{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:98,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:30,\&quot;transfer\&quot;:68,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:5478373,\&quot;decodedBodySize\&quot;:5478373},{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:100,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:38,\&quot;transfer\&quot;:62,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6109969,\&quot;decodedBodySize\&quot;:6109969},{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:79,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:22,\&quot;transfer\&quot;:57,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:216275,\&quot;decodedBodySize\&quot;:216275,\&quot;serverTime\&quot;:7},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;duration\&quot;:572,\&quot;startTime\&quot;:2067,\&quot;fetchStart\&quot;:2067,\&quot;requestStart\&quot;:2074,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:565,\&quot;transferSize\&quot;:113997,\&quot;encodedBodySize\&quot;:112945,\&quot;decodedBodySize\&quot;:112945,\&quot;serverTime\&quot;:210},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/projRes/ui-global-components/webtemplate/splash_screen_winter21_yeti.png\&quot;,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;duration\&quot;:43,\&quot;startTime\&quot;:2092,\&quot;fetchStart\&quot;:2092,\&quot;requestStart\&quot;:2092,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:38,\&quot;transfer\&quot;:5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:58301,\&quot;decodedBodySize\&quot;:58301},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/_slds/fonts/v2.3.0/SalesforceSans-Regular.woff2\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:43,\&quot;startTime\&quot;:2093,\&quot;fetchStart\&quot;:2093,\&quot;requestStart\&quot;:2093,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:38,\&quot;transfer\&quot;:5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:27132,\&quot;decodedBodySize\&quot;:27132},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/img/one/apple-touch-icon-ipad.png\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:548,\&quot;startTime\&quot;:2104,\&quot;fetchStart\&quot;:2104,\&quot;requestStart\&quot;:2104,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:548,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1676,\&quot;decodedBodySize\&quot;:1676},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/favicon.ico\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:546,\&quot;startTime\&quot;:2106,\&quot;fetchStart\&quot;:2106,\&quot;requestStart\&quot;:2106,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:546,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:5430,\&quot;decodedBodySize\&quot;:5430},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/ui-analytics-reporting/EclairNG.js\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:0,\&quot;startTime\&quot;:2359,\&quot;fetchStart\&quot;:2359,\&quot;requestStart\&quot;:2359,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:0,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:824706,\&quot;decodedBodySize\&quot;:824706},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/canvas/CanvasRendering.js\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:0,\&quot;startTime\&quot;:2360,\&quot;fetchStart\&quot;:2360,\&quot;requestStart\&quot;:2360,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:0,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:40274,\&quot;decodedBodySize\&quot;:40274}],\&quot;requestAppCoreJs\&quot;:{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:98,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:30,\&quot;transfer\&quot;:68,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:5478373,\&quot;decodedBodySize\&quot;:5478373},\&quot;requestAppJs\&quot;:{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:100,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:38,\&quot;transfer\&quot;:62,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6109969,\&quot;decodedBodySize\&quot;:6109969},\&quot;requestAuraJs\&quot;:{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:79,\&quot;startTime\&quot;:2042,\&quot;fetchStart\&quot;:2042,\&quot;requestStart\&quot;:2042,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:22,\&quot;transfer\&quot;:57,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:216275,\&quot;decodedBodySize\&quot;:216275,\&quot;serverTime\&quot;:7},\&quot;requestLightningLayout\&quot;:{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;duration\&quot;:572,\&quot;startTime\&quot;:2067,\&quot;fetchStart\&quot;:2067,\&quot;requestStart\&quot;:2074,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:565,\&quot;transferSize\&quot;:113997,\&quot;encodedBodySize\&quot;:112945,\&quot;decodedBodySize\&quot;:112945,\&quot;serverTime\&quot;:210},\&quot;lightningLayoutCreationStart\&quot;:2981,\&quot;lightningLayoutCreationEnd\&quot;:3879,\&quot;lightningLayoutRenderingStart\&quot;:3883,\&quot;lightningLayoutRenderingEnd\&quot;:4136,\&quot;visibilityStateEnd\&quot;:\&quot;visible\&quot;,\&quot;lightningEPT\&quot;:4140,\&quot;referer\&quot;:\&quot;Other\&quot;,\&quot;appRootRequestId\&quot;:\&quot;35ce0fb06d22ee3f\&quot;,\&quot;navbarCPUTime\&quot;:0,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;viewportHeight\&quot;:838,\&quot;viewportWidth\&quot;:1924,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4164,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90000000000000000053M000000W0un50.0:serviceComponent://ui.global.components.one.one.controller.OneController/ACTION$getCurrentApp:PARAMS_REMOVED\&quot;,\&quot;elapsed\&quot;:1219,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:4203,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://one:fp0M03M00000006DQSAY__pageWithoutSobject__1604320206000\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4208,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90000000000000000053M000000W0un50.0:globalValueProviders\&quot;,\&quot;elapsed\&quot;:1251,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4208,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1777,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4210,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1776,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4210,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1469,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4212,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1775,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4143,\&quot;duration\&quot;:72,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;loadClientLibrary\&quot;,\&quot;attributes\&quot;:{\&quot;library\&quot;:\&quot;canvasrendering\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4221,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4222,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4223,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4224,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4224,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90000000000000000053M000000W0un50.0:_uri_defs_enabled\&quot;,\&quot;elapsed\&quot;:1266,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4503,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:4624,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consolePersistenceManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-retrieve-consoleState\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consolePersistenceManager-retrieve\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;appId\&quot;:\&quot;06m3M0000000COoQAM\&quot;,\&quot;responseState\&quot;:\&quot;SUCCESS\&quot;,\&quot;category\&quot;:\&quot;Base\&quot;,\&quot;numWorkspaces\&quot;:0,\&quot;viewMode\&quot;:\&quot;split\&quot;,\&quot;leftContent\&quot;:\&quot;Account\&quot;}},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:4627,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consolePersistenceManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-retrieve-consoleState\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consolePersistenceManager-retrieve\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;appId\&quot;:\&quot;06m3M0000000COoQAM\&quot;,\&quot;responseState\&quot;:\&quot;SUCCESS\&quot;,\&quot;category\&quot;:\&quot;mostRecentlyUsed\&quot;}},\&quot;sequence\&quot;:3,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:4953,\&quot;duration\&quot;:1079,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:1,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:4954,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://aura:component\&quot;,\&quot;markup://ui:virtualList\&quot;,\&quot;markup://ui:virtualDataGrid\&quot;,\&quot;markup://ui:virtualDataTable\&quot;,\&quot;markup://aura:application\&quot;,\&quot;markup://force:slds\&quot;,\&quot;markup://force:sldsDynamic\&quot;,\&quot;markup://one:one\&quot;,\&quot;markup://force:themeCssVarLoader\&quot;,\&quot;markup://aura:expression\&quot;,\&quot;markup://aura:html\&quot;,\&quot;markup://aura:text\&quot;,\&quot;markup://force:fingerprint\&quot;,\&quot;markup://force:defenseHook\&quot;,\&quot;markup://one:auraSystemErrorHandler\&quot;,\&quot;markup://one:auraCustomerErrorHandler\&quot;,\&quot;markup://force:downloadHandler\&quot;,\&quot;markup://force:hostConfig\&quot;,\&quot;markup://force:switchToNetworkHandler\&quot;,\&quot;markup://instrumentation:beacon\&quot;,\&quot;markup://laf:platformRouter\&quot;,\&quot;markup://laf:baseRouter\&quot;,\&quot;markup://laf:sObjectRouter\&quot;,\&quot;markup://force:setupRouter\&quot;,\&quot;markup://objectManager:objectManagerRouter\&quot;,\&quot;markup://force:personalSettingsPageRouter\&quot;,\&quot;markup://forceChatter:router\&quot;,\&quot;markup://laf:directCmpReferenceRouter\&quot;,\&quot;markup://laf:navigationServiceAPI\&quot;,\&quot;markup://laf:appContextService\&quot;,\&quot;markup://one:utils\&quot;,\&quot;markup://force:style\&quot;,\&quot;markup://force:access\&quot;,\&quot;markup://laf:appLayoutHost\&quot;,\&quot;markup://force:alohaUrlService\&quot;,\&quot;markup://force:quickActionHandler\&quot;,\&quot;markup://laf:layoutContainer\&quot;,\&quot;markup://laf:platformPageResolver\&quot;,\&quot;markup://force:adsBridge\&quot;,\&quot;markup://aura:if\&quot;,\&quot;markup://runtime_all_walkthroughs:player\&quot;,\&quot;markup://one:onboardingManagerWrapper\&quot;,\&quot;markup://lightning:navigation\&quot;,\&quot;markup://ui:image\&quot;,\&quot;markup://force:icon\&quot;,\&quot;markup://lightning:icon\&quot;,\&quot;markup://ui:datePickerManager\&quot;,\&quot;markup://support:outputPhoneManager\&quot;,\&quot;markup://force:outputPhone\&quot;,\&quot;markup://emailStream:connectEmailWrapper\&quot;,\&quot;markup://emailStream:connectEmail\&quot;,\&quot;markup://one:sessionManager\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWarn\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWatcher\&quot;,\&quot;markup://voice:getVendorLine\&quot;,\&quot;markup://one:establishVFSessionComponent\&quot;,\&quot;markup://one:consoleLayoutContainer2\&quot;,\&quot;markup://force:pageInfo\&quot;,\&quot;markup://laf:navEventManager\&quot;,\&quot;markup://laf:urlProcessor\&quot;,\&quot;markup://force:recordActionEventManager\&quot;,\&quot;markup://one:layoutContainerLib\&quot;,\&quot;markup://one:recordActionsLib\&quot;,\&quot;markup://force:dirtyStateManager\&quot;,\&quot;markup://one:consolePersistenceManager\&quot;,\&quot;markup://one:consoleAppCustomizationDefault\&quot;,\&quot;markup://laf:baseLayoutContainer\&quot;,\&quot;markup://support:crossFrameApiManager\&quot;,\&quot;markup://one:keyboardShortcutListener\&quot;,\&quot;markup://one:helpAndTrainingKeyboardShortcuts\&quot;,\&quot;markup://one:actionsManager\&quot;,\&quot;markup://force:targetInteractionHandler\&quot;,\&quot;markup://runtime_rtc:rtcDiscoveryBanner\&quot;,\&quot;markup://forceChatter:editManager\&quot;,\&quot;markup://forceContent:contentHubAuthenticationBanner\&quot;,\&quot;markup://force:quickActionManager\&quot;,\&quot;markup://one:panelService\&quot;,\&quot;markup://force:inlineSpinner\&quot;,\&quot;markup://force:loadingLaser\&quot;,\&quot;markup://force:localRecordChangeObserver\&quot;,\&quot;markup://forceChatter:feedEventsProcessor\&quot;,\&quot;markup://forceChatter:s1FeedsProxy\&quot;,\&quot;markup://one:iframeMessageManager\&quot;,\&quot;markup://lightning:messageDispatcher\&quot;,\&quot;markup://one:apiHandler\&quot;,\&quot;markup://force:userAssistancePlatform\&quot;,\&quot;markup://force:componentSpinner\&quot;,\&quot;markup://force:dotsSpinner\&quot;,\&quot;markup://one:header\&quot;,\&quot;markup://forceSearch:desktopHeaderManager\&quot;,\&quot;markup://forceSearch:base\&quot;,\&quot;markup://forceSearch:baseSearch\&quot;,\&quot;markup://forceSearch:desktopHeader\&quot;,\&quot;markup://forceSearch:groupContainer\&quot;,\&quot;markup://forceSearch:inputEntitySelector\&quot;,\&quot;markup://ui:dataProvider\&quot;,\&quot;markup://forceSearch:inputEntitySelectorDataProvider\&quot;,\&quot;markup://lightning:groupedCombobox\&quot;,\&quot;markup://forceSearch:baseSearchInput\&quot;,\&quot;markup://forceSearch:input\&quot;,\&quot;markup://forceSearch:inputDesktop\&quot;,\&quot;markup://forceSearch:optionDataProvider\&quot;,\&quot;markup://forceSearch:inputDataProvider\&quot;,\&quot;markup://forceSearch:inputDesktopDataProvider\&quot;,\&quot;markup://forceSearch:actionDataProvider\&quot;,\&quot;markup://forceSearch:mruDataProvider\&quot;,\&quot;markup://forceSearch:typeAheadDataProvider\&quot;,\&quot;markup://ui:resizeObserver\&quot;,\&quot;markup://forceSearch:inputDesktopPillWrapper\&quot;,\&quot;markup://ui:input\&quot;,\&quot;markup://ui:autocomplete\&quot;,\&quot;markup://forceSearch:searchInputListHeader\&quot;,\&quot;markup://forceSearch:inputDesktopListFooter\&quot;,\&quot;markup://ui:inputTextForAutocomplete\&quot;,\&quot;markup://forceSearch:searchGDP\&quot;,\&quot;markup://forceSearch:searchGDPCache\&quot;,\&quot;markup://forceSearch:searchGDPCacheActivity\&quot;,\&quot;markup://forceSearch:searchGDPCacheMrus\&quot;,\&quot;markup://forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;markup://forceSearch:searchGDPCacheResultsFilters\&quot;,\&quot;markup://forceSearch:searchGDPCacheScopes\&quot;,\&quot;markup://search_lightning:store\&quot;,\&quot;markup://forceSearch:experimentContextInitializer\&quot;,\&quot;markup://one:globalNav\&quot;,\&quot;markup://one:consoleNav\&quot;,\&quot;markup://one:appNavMenu\&quot;,\&quot;markup://lightning:buttonIcon\&quot;,\&quot;markup://lightning:tooltipLibrary\&quot;,\&quot;markup://lightning:primitiveIcon\&quot;,\&quot;markup://one:consoleTabContainer\&quot;,\&quot;markup://aura:iteration\&quot;,\&quot;markup://ui:popup\&quot;,\&quot;markup://ui:menu\&quot;,\&quot;markup://ui:interactive\&quot;,\&quot;markup://ui:popupTrigger\&quot;,\&quot;markup://ui:menuTriggerLink\&quot;,\&quot;markup://ui:popupTarget\&quot;,\&quot;markup://ui:menuList\&quot;,\&quot;markup://one:consoleLi\&quot;,\&quot;markup://salesforceIdentity:appLauncherManager\&quot;,\&quot;markup://salesforceIdentity:appLauncherHeader\&quot;,\&quot;markup://force:headerButton\&quot;,\&quot;markup://ui:button\&quot;,\&quot;markup://ui:tooltip\&quot;,\&quot;markup://force:skipLink\&quot;,\&quot;markup://force:onboardingManagerLib\&quot;,\&quot;markup://one:systemMessage\&quot;,\&quot;markup://one:ept\&quot;,\&quot;markup://auraStorage:fuelGauge\&quot;,\&quot;markup://one:favorites\&quot;,\&quot;markup://one:globalCreate\&quot;,\&quot;markup://one:globalCreateIcon\&quot;,\&quot;markup://one:helpAndTrainingExperience\&quot;,\&quot;markup://force:headerMenuTrigger\&quot;,\&quot;markup://setup:gear\&quot;,\&quot;markup://uns:notifications\&quot;,\&quot;markup://force:empApi\&quot;,\&quot;markup://one:userProfileCardTrigger\&quot;,\&quot;markup://force:record\&quot;,\&quot;markup://one:userProfileCardData\&quot;,\&quot;markup://one:leftContentWrapper\&quot;,\&quot;markup://laf:pageHost\&quot;,\&quot;markup://laf:pageCapability\&quot;,\&quot;markup://laf:windowUpdate\&quot;,\&quot;markup://one:workspaceCollection\&quot;,\&quot;markup://flexipage:page\&quot;,\&quot;markup://one:addressableModalManager\&quot;,\&quot;markup://lightning:workspaceAPI\&quot;,\&quot;markup://one:consoleEventBroker\&quot;,\&quot;markup://one:consoleTabScrollManager\&quot;,\&quot;markup://forceContent:filesManager\&quot;,\&quot;markup://forceContent:modalPreviewManager\&quot;,\&quot;markup://ui:containerManager\&quot;,\&quot;markup://ui:panelManager2\&quot;,\&quot;markup://one:panelManager\&quot;,\&quot;markup://force:modalSpinner\&quot;,\&quot;markup://notes:editPanelManager\&quot;,\&quot;markup://force:draggableResizablePanelManager\&quot;,\&quot;markup://ui:asyncComponentManager\&quot;,\&quot;markup://instrumentation:uiManager\&quot;,\&quot;markup://force:massErrorsManager\&quot;,\&quot;markup://force:hoverPrototypeManager\&quot;,\&quot;markup://force:hoverPrototype\&quot;,\&quot;markup://force:appMessageManager\&quot;,\&quot;markup://one:celebrationManager\&quot;,\&quot;markup://force:toastManager\&quot;,\&quot;markup://force:visualMessageQueue\&quot;,\&quot;markup://force:logoutHandler\&quot;,\&quot;markup://one:consolePersistenceForceLogoutPlugin\&quot;,\&quot;markup://ui:label\&quot;,\&quot;markup://force:recordGlobalValueProvider\&quot;,\&quot;markup://uns:notificationsCounter\&quot;,\&quot;markup://isotope:headerButton\&quot;,\&quot;markup://lightning:spinner\&quot;,\&quot;markup://isotope:error\&quot;,\&quot;markup://isotope:subscriptionModal\&quot;,\&quot;markup://isotope:serviceAPI\&quot;],\&quot;pageCounter\&quot;:1,\&quot;phase\&quot;:\&quot;navFromPage\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;unknown\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;context\&quot;:\&quot;unknown\&quot;,\&quot;attributes\&quot;:{\&quot;tryToSetPageLater\&quot;:true}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:3874,\&quot;duration\&quot;:1075,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:4153,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:2,\&quot;requestLength\&quot;:1036,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;334;a\&quot;],\&quot;requestId\&quot;:\&quot;4153000000e804e5d5\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:37054,\&quot;xhrDuration\&quot;:382,\&quot;xhrStall\&quot;:18,\&quot;startTime\&quot;:4154,\&quot;fetchStart\&quot;:4154,\&quot;requestStart\&quot;:4172,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:25,\&quot;transfer\&quot;:357,\&quot;transferSize\&quot;:38105,\&quot;serverTime\&quot;:36,\&quot;xhrDelay\&quot;:9},\&quot;duration\&quot;:391},{\&quot;ts\&quot;:4219,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;auraXHRId\&quot;:1,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:8192,\&quot;xhrDuration\&quot;:469,\&quot;xhrStall\&quot;:8,\&quot;startTime\&quot;:4148,\&quot;fetchStart\&quot;:4148,\&quot;requestStart\&quot;:4156,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:8,\&quot;transfer\&quot;:461,\&quot;transferSize\&quot;:9368,\&quot;serverTime\&quot;:105,\&quot;xhrDelay\&quot;:-68},\&quot;duration\&quot;:401}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:4151,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;334;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:hostConfig\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:35,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:19,\&quot;duration\&quot;:417},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;116;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:31,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:5,\&quot;duration\&quot;:481},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;117;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:9,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:483},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;199;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:14,\&quot;duration\&quot;:497},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;217;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:498},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;236;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:499},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;240;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:500},{\&quot;ts\&quot;:4145,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;250;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:23,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:105,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:142,\&quot;duration\&quot;:642}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:136,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;uns:notificationsCounter\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:11},{\&quot;name\&quot;:\&quot;isotope:headerButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:19},{\&quot;name\&quot;:\&quot;lightning:buttonIcon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6},{\&quot;name\&quot;:\&quot;force:headerButton\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:60},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:38}]}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}},\&quot;attributes\&quot;:{\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:true,\&quot;eptDeviationReason\&quot;:\&quot;PageNotLoaded\&quot;,\&quot;backgroundTime\&quot;:0,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;bootstrapType\&quot;:\&quot;WARM\&quot;,\&quot;defaultCmp\&quot;:[],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:5228,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-load-workspaces\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleLayoutContainer-loadWorkspacesFromPersistence\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;numWorkspacesToLoad\&quot;:0,\&quot;numSubtabsToLoad\&quot;:0,\&quot;viewMode\&quot;:\&quot;split\&quot;,\&quot;previousViewMode\&quot;:\&quot;split\&quot;,\&quot;selectedList.type\&quot;:\&quot;standard__objectPage\&quot;,\&quot;selectedList.attributes.objectApiName\&quot;:\&quot;Account\&quot;,\&quot;selectedList.attributes.actionName\&quot;:\&quot;list\&quot;,\&quot;selectedList.componentDefRef.componentDef\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;selectedList.componentDefRef.attributes.scope\&quot;:\&quot;Account\&quot;,\&quot;selectedList.componentDefRef.attributes.filterName\&quot;:\&quot;Recent\&quot;,\&quot;selectedList.componentDefRef.attributes.isCompactView\&quot;:true,\&quot;selectedList.componentDefRef.attributes.refreshInBackground\&quot;:true,\&quot;selectedList.componentDefRef.attributes.retURL\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/lightning/o/Account/list?filterName=Recent\&quot;,\&quot;selectedList.state.filterName\&quot;:\&quot;Recent\&quot;}},\&quot;sequence\&quot;:5,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:5281,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;force:record\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0053M000000W0unQAC\&quot;,\&quot;recordType\&quot;:\&quot;User\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:6,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:5333,\&quot;duration\&quot;:639,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5359,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M03M00000006DQSAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction508;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5972,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:5335,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;508;a\&quot;],\&quot;requestId\&quot;:\&quot;5335000000289bb136\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1546,\&quot;xhrDuration\&quot;:379,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:5336,\&quot;fetchStart\&quot;:5336,\&quot;requestStart\&quot;:5340,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:374,\&quot;transferSize\&quot;:2597,\&quot;serverTime\&quot;:24,\&quot;xhrDelay\&quot;:245},\&quot;duration\&quot;:624}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:150,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:fp0M03M00000006DQSAY__pageWithoutSobject__1604320206000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:49},{\&quot;name\&quot;:\&quot;one:utilityBarItem\&quot;,\&quot;createCount\&quot;:3,\&quot;createTimeTotal\&quot;:10},{\&quot;name\&quot;:\&quot;force:breadCrumbItem\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:11},{\&quot;name\&quot;:\&quot;force:listViewManagerSplitViewList\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:60},{\&quot;name\&quot;:\&quot;lightning:buttonMenu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:12}]}]},\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-socialPhotoBatchAction\&quot;,\&quot;attributes\&quot;:{\&quot;keyPrefixes\&quot;:[\&quot;005\&quot;],\&quot;transactionId\&quot;:\&quot;508;a\&quot;,\&quot;numProcessedIds\&quot;:1,\&quot;usageInfo\&quot;:{\&quot;sAction\&quot;:\&quot;resolvePhotos\&quot;,\&quot;gusTeamId\&quot;:\&quot;a00B0000003ZxZGIA0\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:6302,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-696e4e79597a684d43713669736235676d34313847673d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:5855,\&quot;duration\&quot;:1030,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:5855,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():24\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1029},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction508;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5972,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:5859,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;566;a\&quot;],\&quot;requestId\&quot;:\&quot;585900000061be432c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:384,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:5861,\&quot;fetchStart\&quot;:5861,\&quot;requestStart\&quot;:5878,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:366,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:43,\&quot;xhrDelay\&quot;:435},\&quot;duration\&quot;:819},{\&quot;ts\&quot;:5861,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;595;a\&quot;],\&quot;requestId\&quot;:\&quot;58610000001f9d28a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1803,\&quot;xhrDuration\&quot;:400,\&quot;xhrStall\&quot;:32,\&quot;startTime\&quot;:5862,\&quot;fetchStart\&quot;:5862,\&quot;requestStart\&quot;:5894,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:368,\&quot;transferSize\&quot;:2866,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:616},\&quot;duration\&quot;:1016}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:5859,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;566;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:43,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:819}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:461,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;console:history\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:133},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:104},{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:99},{\&quot;name\&quot;:\&quot;one:utilityBarPanel\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:50},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:29}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:6887,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:10,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453192164,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:1,\&quot;actionId\&quot;:\&quot;595;a\&quot;,\&quot;fetchedScopeMaps\&quot;:1,\&quot;tSending\&quot;:1605453193194,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453193195,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1031,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;entityNames:Account\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453193195,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:5854,\&quot;duration\&quot;:1398,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:5855,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():24\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1029},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction508;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5972,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:5859,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;566;a\&quot;],\&quot;requestId\&quot;:\&quot;585900000061be432c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:384,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:5861,\&quot;fetchStart\&quot;:5861,\&quot;requestStart\&quot;:5878,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:366,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:43,\&quot;xhrDelay\&quot;:435},\&quot;duration\&quot;:819},{\&quot;ts\&quot;:5861,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;595;a\&quot;],\&quot;requestId\&quot;:\&quot;58610000001f9d28a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1803,\&quot;xhrDuration\&quot;:400,\&quot;xhrStall\&quot;:32,\&quot;startTime\&quot;:5862,\&quot;fetchStart\&quot;:5862,\&quot;requestStart\&quot;:5894,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:368,\&quot;transferSize\&quot;:2866,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:616},\&quot;duration\&quot;:1016}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:5859,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;566;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:43,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:819},{\&quot;ts\&quot;:5855,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;595;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:3,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:42,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:9,\&quot;duration\&quot;:1032}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:650,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;console:history\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:133},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:104},{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:99},{\&quot;name\&quot;:\&quot;one:utilityBarPanel\&quot;,\&quot;createCount\&quot;:3,\&quot;createTimeTotal\&quot;:94},{\&quot;name\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:119}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:7254,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:10,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453192164,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:1,\&quot;actionId\&quot;:\&quot;595;a\&quot;,\&quot;fetchedScopeMaps\&quot;:1,\&quot;tSending\&quot;:1605453193194,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453193562,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1398,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;0:entityNames:Account\&quot;],\&quot;etSendDataWait\&quot;:368,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453193562,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:7363,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;0013M000005x6dFQAQ\&quot;,\&quot;0013M000006LZK6QAO\&quot;,\&quot;0013M000006LIzdQAG\&quot;,\&quot;0013M000006ILIzQAO\&quot;,\&quot;0013M000006ML4XQAW\&quot;,\&quot;0013M000005yICfQAM\&quot;,\&quot;0013M000005xmQdQAI\&quot;,\&quot;0013M000005xiL5QAI\&quot;,\&quot;0013M000005yEjzQAE\&quot;,\&quot;0013M000006JhLnQAK\&quot;],\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:7,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:7726,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;]}},\&quot;sequence\&quot;:8,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:4955,\&quot;duration\&quot;:2771,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:4986,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:205},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;force:listViewPicker.init\&quot;,\&quot;ts\&quot;:5073,\&quot;context\&quot;:{\&quot;listViewId\&quot;:\&quot;Recent\&quot;},\&quot;owner\&quot;:\&quot;force:listViewPicker\&quot;,\&quot;duration\&quot;:818},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:MRU_LIST-Account\&quot;,\&quot;ts\&quot;:5812,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;MRU_LIST\&quot;,\&quot;entityApiName\&quot;:\&quot;Account\&quot;,\&quot;recordId\&quot;:null,\&quot;listNameOrId\&quot;:\&quot;Recent\&quot;,\&quot;actionsNumber\&quot;:2,\&quot;standardActions\&quot;:[\&quot;New\&quot;,\&quot;Import\&quot;],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:2},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:867},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;listViewDataManager:handleLoadByOffset\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:7364,\&quot;context\&quot;:{\&quot;recordIdsLength\&quot;:10,\&quot;totalItems\&quot;:10,\&quot;entityName\&quot;:\&quot;Account\&quot;,\&quot;filterName\&quot;:\&quot;Recent\&quot;,\&quot;layoutType\&quot;:\&quot;SEARCH\&quot;,\&quot;isLoadMore\&quot;:true,\&quot;isSearched\&quot;:false,\&quot;isFiltered\&quot;:false},\&quot;owner\&quot;:\&quot;force:listViewDataManager\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.7447\&quot;,\&quot;ts\&quot;:7447,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1175:0\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-696e4e79597a684d43713669736235676d34313847673d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5359,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M03M00000006DQSAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:5855,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():24\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1029},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction508;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:5972,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:5192,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1228,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;496;a\&quot;],\&quot;requestId\&quot;:\&quot;519200000039624591\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2022,\&quot;xhrDuration\&quot;:445,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:5192,\&quot;fetchStart\&quot;:5192,\&quot;requestStart\&quot;:5197,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:440,\&quot;transferSize\&quot;:3158,\&quot;serverTime\&quot;:125,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:448},{\&quot;ts\&quot;:5312,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:2,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:348,\&quot;startTime\&quot;:5314,\&quot;fetchStart\&quot;:5659,\&quot;requestStart\&quot;:5659,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:345,\&quot;ttfb\&quot;:348,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:36312,\&quot;decodedBodySize\&quot;:36312,\&quot;serverTime\&quot;:38,\&quot;defs\&quot;:[\&quot;markup://force:listViewManagerSplitViewList\&quot;],\&quot;xhrDelay\&quot;:10},\&quot;duration\&quot;:358},{\&quot;ts\&quot;:5335,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;508;a\&quot;],\&quot;requestId\&quot;:\&quot;5335000000289bb136\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1546,\&quot;xhrDuration\&quot;:379,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:5336,\&quot;fetchStart\&quot;:5336,\&quot;requestStart\&quot;:5340,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:374,\&quot;transferSize\&quot;:2597,\&quot;serverTime\&quot;:24,\&quot;xhrDelay\&quot;:245},\&quot;duration\&quot;:624},{\&quot;ts\&quot;:5459,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:3,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:533,\&quot;startTime\&quot;:5461,\&quot;fetchStart\&quot;:5978,\&quot;requestStart\&quot;:5978,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:517,\&quot;ttfb\&quot;:533,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1937,\&quot;decodedBodySize\&quot;:1937,\&quot;serverTime\&quot;:9,\&quot;defs\&quot;:[\&quot;markup://one:utilityBarContent\&quot;],\&quot;xhrDelay\&quot;:5},\&quot;duration\&quot;:538},{\&quot;ts\&quot;:5738,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:6,\&quot;requestLength\&quot;:1828,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;544;a\&quot;,\&quot;547;a\&quot;],\&quot;requestId\&quot;:\&quot;5738000000452e1702\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:32707,\&quot;xhrDuration\&quot;:429,\&quot;xhrStall\&quot;:14,\&quot;startTime\&quot;:5739,\&quot;fetchStart\&quot;:5739,\&quot;requestStart\&quot;:5753,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:415,\&quot;transferSize\&quot;:34267,\&quot;serverTime\&quot;:98,\&quot;xhrDelay\&quot;:99},\&quot;duration\&quot;:528},{\&quot;ts\&quot;:5859,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;566;a\&quot;],\&quot;requestId\&quot;:\&quot;585900000061be432c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:384,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:5861,\&quot;fetchStart\&quot;:5861,\&quot;requestStart\&quot;:5878,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:366,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:43,\&quot;xhrDelay\&quot;:435},\&quot;duration\&quot;:819},{\&quot;ts\&quot;:5861,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;595;a\&quot;],\&quot;requestId\&quot;:\&quot;58610000001f9d28a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1803,\&quot;xhrDuration\&quot;:400,\&quot;xhrStall\&quot;:32,\&quot;startTime\&quot;:5862,\&quot;fetchStart\&quot;:5862,\&quot;requestStart\&quot;:5894,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:32,\&quot;transfer\&quot;:368,\&quot;transferSize\&quot;:2866,\&quot;serverTime\&quot;:42,\&quot;xhrDelay\&quot;:616},\&quot;duration\&quot;:1016},{\&quot;ts\&quot;:7242,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:31,\&quot;startTime\&quot;:7242,\&quot;fetchStart\&quot;:7242,\&quot;requestStart\&quot;:7242,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:31,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:42521,\&quot;decodedBodySize\&quot;:42521,\&quot;serverTime\&quot;:16,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:38},\&quot;duration\&quot;:69},{\&quot;ts\&quot;:7104,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1267,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;790;a\&quot;,\&quot;799;a\&quot;],\&quot;requestId\&quot;:\&quot;7104000000a3b3fa8d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1657,\&quot;xhrDuration\&quot;:389,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:7105,\&quot;fetchStart\&quot;:7105,\&quot;requestStart\&quot;:7108,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:386,\&quot;transferSize\&quot;:2715,\&quot;serverTime\&quot;:53,\&quot;xhrDelay\&quot;:150},\&quot;duration\&quot;:539},{\&quot;ts\&quot;:7215,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1490,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;853;a\&quot;,\&quot;854;a\&quot;,\&quot;855;a\&quot;],\&quot;requestId\&quot;:\&quot;72150000000249c795\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2103,\&quot;xhrDuration\&quot;:397,\&quot;xhrStall\&quot;:3,\&quot;startTime\&quot;:7217,\&quot;fetchStart\&quot;:7217,\&quot;requestStart\&quot;:7220,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:3,\&quot;transfer\&quot;:394,\&quot;transferSize\&quot;:3154,\&quot;serverTime\&quot;:73,\&quot;xhrDelay\&quot;:44},\&quot;duration\&quot;:441}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:5190,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;496;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManager.ListViewManagerController/ACTION$getMetadataInitialLoad\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:105,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:125,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:461},{\&quot;ts\&quot;:5334,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;508;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:24,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:12,\&quot;duration\&quot;:639},{\&quot;ts\&quot;:5732,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;544;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:virtualRecordList\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.virtualRecordList.VirtualRecordListController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:6,\&quot;serverTime\&quot;:{\&quot;total\&quot;:34,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:97,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:573},{\&quot;ts\&quot;:5734,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;547;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewDataManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewDataManager.ListViewDataManagerController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:39,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:97,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:571},{\&quot;ts\&quot;:5813,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;566;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;one:actionsManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:46,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:43,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:865},{\&quot;ts\&quot;:5855,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;595;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:3,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:42,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:9,\&quot;duration\&quot;:1032},{\&quot;ts\&quot;:6952,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;790;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_liveagent:chatMessenger\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.ChatConfigController/ACTION$getChatConfiguration\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:152,\&quot;serverTime\&quot;:{\&quot;total\&quot;:20,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:53,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:694},{\&quot;ts\&quot;:6993,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;799;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:status\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.StatusController/ACTION$getStatuses\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:111,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:53,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:653},{\&quot;ts\&quot;:7201,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;853;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getSCRTInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:14,\&quot;serverTime\&quot;:{\&quot;total\&quot;:26,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:73,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:4,\&quot;duration\&quot;:461},{\&quot;ts\&quot;:7201,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;854;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$isDeclineReasonEnabled\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:14,\&quot;serverTime\&quot;:{\&quot;total\&quot;:18,\&quot;db\&quot;:7,\&quot;xhrServerTime\&quot;:73,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:462},{\&quot;ts\&quot;:7201,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;855;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getDeclineReasons\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:14,\&quot;serverTime\&quot;:{\&quot;total\&quot;:5,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:73,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:462}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:1071,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:205},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:104},{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:99},{\&quot;name\&quot;:\&quot;console:history\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:133},{\&quot;name\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:119}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:7731,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:11,\&quot;storeBroadcast\&quot;:1}}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:2767,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}},\&quot;attributes\&quot;:{\&quot;darkModeEnabled\&quot;:false,\&quot;numTotalLoadedTabs\&quot;:0,\&quot;numTotalWorkspaces\&quot;:0,\&quot;numTotalSubtabs\&quot;:0,\&quot;listViewIdOrName\&quot;:\&quot;Recent\&quot;,\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:true,\&quot;eptDeviationReason\&quot;:\&quot;PreviousPageNotLoaded\&quot;,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:2767,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:3,\&quot;misses\&quot;:0},\&quot;AuraRecordStore_bulkRecordRequestauraIf\&quot;:{\&quot;hits\&quot;:10,\&quot;misses\&quot;:0},\&quot;AuraStorage_runtimeServiceOmniChannelStorage\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;total\&quot;:{\&quot;hits\&quot;:13,\&quot;misses\&quot;:2}},\&quot;complexity\&quot;:{\&quot;ADS_records\&quot;:10,\&quot;ADS_fields\&quot;:100},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:7897,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:consoleObjectHome\&quot;,\&quot;markup://force:listViewManager\&quot;,\&quot;markup://force:listViewManagerDisplayViewConfiguration\&quot;,\&quot;markup://force:listViewManagerDisplayDependencyConfiguration\&quot;,\&quot;markup://force:listViewManagerDisplayDependencyItem\&quot;,\&quot;markup://force:listViewManagerStateManager\&quot;,\&quot;markup://force:listViewManagerHeader\&quot;,\&quot;markup://aura:renderIf\&quot;,\&quot;markup://force:breadCrumbs\&quot;,\&quot;markup://force:listViewPicker\&quot;,\&quot;markup://ui:outputText\&quot;,\&quot;markup://force:listViewManagerPinButton\&quot;,\&quot;markup://force:placeholder\&quot;,\&quot;markup://force:actionsContainer\&quot;,\&quot;markup://aura:unescapedHtml\&quot;,\&quot;markup://force:listViewManagerStatusInfo\&quot;,\&quot;markup://force:listViewSettingsMenu\&quot;,\&quot;markup://force:listViewManagerButtonBar\&quot;,\&quot;markup://force:listViewManagerDisplaySwitcher\&quot;,\&quot;markup://lightning:buttonMenu\&quot;,\&quot;markup://lightning:positionLibrary\&quot;,\&quot;markup://force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;markup://force:listViewManagerSecondaryDisplayManager\&quot;,\&quot;markup://force:socialPhoto\&quot;,\&quot;markup://force:socialPhotoController\&quot;,\&quot;markup://one:fp0M03M00000006DQSAY__pageWithoutSobject__1604320206000\&quot;,\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://one:utilityBar\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;,\&quot;markup://flexipage:componentDecorator\&quot;,\&quot;markup://one:utilityBarItem\&quot;,\&quot;markup://one:dockingPanelManager\&quot;,\&quot;markup://force:panelApi\&quot;,\&quot;markup://one:utilityBarContainer\&quot;,\&quot;markup://one:utilPanelManager\&quot;,\&quot;markup://force:dockingPanelOverflow\&quot;,\&quot;markup://force:listViewManagerSplitViewList\&quot;,\&quot;markup://force:dataManager\&quot;,\&quot;markup://force:listViewDataManagerAdapter\&quot;,\&quot;markup://force:listViewDataManager\&quot;,\&quot;markup://force:recordCollection\&quot;,\&quot;markup://force:listViewManagerGridColumnHeaderConfiguration\&quot;,\&quot;markup://force:virtualRecordList\&quot;,\&quot;markup://force:listViewManagerSearchBar\&quot;,\&quot;markup://force:highlightsIcon\&quot;,\&quot;markup://force:breadCrumbItem\&quot;,\&quot;markup://force:entityIcon\&quot;,\&quot;markup://one:utilityBarContent\&quot;,\&quot;markup://force:popOutManagerAura\&quot;,\&quot;markup://force:popOutManager\&quot;,\&quot;markup://laf:windowMessengerAura\&quot;,\&quot;markup://opencti:softPhone\&quot;,\&quot;markup://lightning:utilityBarAPI\&quot;,\&quot;markup://one:utilityBarPanel\&quot;,\&quot;markup://console:history\&quot;,\&quot;markup://laf:windowMessageLib\&quot;,\&quot;markup://force:virtualTreeGrid\&quot;,\&quot;markup://ui:dataGridColumn\&quot;,\&quot;markup://force:treeGridTriggerCell\&quot;,\&quot;markup://lightning:deprecatedIcon\&quot;,\&quot;markup://lightning:deprecatedPrimitiveIcon\&quot;,\&quot;markup://force:outputURL\&quot;,\&quot;markup://ui:outputURL\&quot;,\&quot;markup://force:copyToClipboardButton\&quot;,\&quot;markup://one:workspaceAPILoader\&quot;,\&quot;markup://one:utilityBarAPILoader\&quot;,\&quot;markup://one:actionsRibbon\&quot;,\&quot;markup://one:actionsDropDown\&quot;,\&quot;markup://force:action\&quot;,\&quot;markup://force:actionLink\&quot;,\&quot;markup://force:actionEventLink\&quot;,\&quot;markup://force:actionsDropDownMenuList\&quot;,\&quot;markup://ui:menuItem\&quot;,\&quot;markup://ui:actionMenuItem\&quot;,\&quot;markup://runtime_service_omnichannel:omniWidget\&quot;,\&quot;markup://scrt:scrtConnector\&quot;,\&quot;markup://lightning:messageChannel\&quot;,\&quot;markup://lightning:messageServiceInternal\&quot;,\&quot;markup://force:salesforceScopedModuleResolver\&quot;,\&quot;markup://force:messageServiceUtils\&quot;,\&quot;markup://lightning:messageContextConsumer\&quot;,\&quot;markup://runtime_service_liveagent:chatMessenger\&quot;,\&quot;markup://runtime_service_liveagent:toolkitMessenger\&quot;,\&quot;markup://runtime_service_predictions:einsteinSuggestedResponseUrlObserver\&quot;,\&quot;markup://runtime_service_predictions:dockedComposerManager\&quot;,\&quot;markup://runtime_service_omnichannel:status\&quot;,\&quot;markup://runtime_service_omnichannel:message\&quot;,\&quot;markup://ui:tabset\&quot;,\&quot;markup://ui:tab\&quot;,\&quot;markup://runtime_service_omnichannel:currentWorkList\&quot;,\&quot;markup://ui:tabBar\&quot;,\&quot;markup://ui:tabItem\&quot;,\&quot;markup://ui:scroller\&quot;,\&quot;markup://force:listLoadingTemplate\&quot;,\&quot;markup://force:recordLayout\&quot;,\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-696e4e79597a684d43713669736235676d34313847673d3d.c\&quot;,\&quot;markup://force:splitViewListRecord\&quot;,\&quot;markup://force:splitViewListRecordItem\&quot;,\&quot;markup://lst:recordHomePreloads\&quot;],\&quot;pageCounter\&quot;:2,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:9,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453194208,\&quot;value\&quot;:[0,128]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453194208,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453194208,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453192607,\&quot;value\&quot;:[1,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453192605,\&quot;value\&quot;:[0,1,1,1,1,1,1,1,2,0,1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453194036,\&quot;value\&quot;:[220183,55115]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453194036,\&quot;value\&quot;:[6751,10535]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453192607,\&quot;value\&quot;:[1,12]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=12&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">7967000000a8e234d9</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=13&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-280" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;966;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[&quot;FILTER&quot;,&quot;SMART_SCOPE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=13&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">797000000035d29b91</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-290" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://opencti:openCtiApiHandler</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=16&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1-289" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;983;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getEntitySupport&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=16&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">8441000000045336fa</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chat/rest/cdm-293" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">version</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirect</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">d.la1-c1cs-lo2.salesforceliveagent.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/chat/rest/cdm</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://d.la1-c1cs-lo2.salesforceliveagent.com/chat/rest/console?version=50&amp;chatUrl=${scheme}%3A%2F%2Fd.la1-c1cs-lo2.salesforceliveagent.com%2Fchat&amp;contentUrl=${scheme}%3A%2F%2Fc.la1-c1cs-lo2.salesforceliveagent.com%2Fcontent</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-295" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://opencti:openCtiApiHandler</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">Uf0VFsev4pU3XJ005sZQPg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_/ContentDomainCSPNoAuth?type=lightning-298" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;csp-report&quot;:{&quot;blocked-uri&quot;:&quot;inline&quot;,&quot;column-number&quot;:289,&quot;document-uri&quot;:&quot;${scheme}://alpha--qaall.lightning.force.com/one/one.app&quot;,&quot;line-number&quot;:3,&quot;original-policy&quot;:&quot;default-src &apos;self&apos;; script-src &apos;self&apos; &apos;nonce-15e5dcc9194dd0574371e741823acad4&apos; chrome-extension: &apos;unsafe-inline&apos; &apos;unsafe-eval&apos; ${scheme}://*.canary.lwc.dev ${scheme}://*.visualforce.com ${scheme}://ssl.gstatic.com/accessibility/ ${scheme}://static.lightning.force.com; object-src &apos;self&apos; ${scheme}://alpha--qaall--c.documentforce.com; style-src &apos;self&apos; blob: chrome-extension: &apos;unsafe-inline&apos; ${scheme}://agenthostvdi.yesdbs.co.il:8399 ${scheme}://*.visualforce.com ${scheme}://alpha--qaall--c.documentforce.com; img-src &apos;self&apos; http: ${scheme}: data: blob: ${scheme}://agenthostvdi.yesdbs.co.il:8399 ${scheme}://*.visualforce.com; media-src &apos;self&apos; ${scheme}://agenthostvdi.yesdbs.co.il:8399 ${scheme}://*.visualforce.com ${scheme}://alpha--qaall--c.documentforce.com blob:; frame-ancestors &apos;self&apos;; frame-src ${scheme}: mailto: ${scheme}://agenthostvdi.yesdbs.co.il:8399 ${scheme}://*.visualforce.com; font-src &apos;self&apos; ${scheme}: data: ${scheme}://agenthostvdi.yesdbs.co.il:8399 ${scheme}://*.visualforce.com; connect-src &apos;self&apos; ${scheme}://api.bluetail.salesforce.com ${scheme}://staging.bluetail.salesforce.com ${scheme}://preprod.bluetail.salesforce.com ${scheme}://agenthostvdi.yesdbs.co.il:8399 blob: ${scheme}://*.visualforce.com ${scheme}://alpha--qaall--c.documentforce.com ${scheme}://cs127.salesforce.com; report-uri ${scheme}://csp-report.force.com/_/ContentDomainCSPNoAuth?type=lightning&quot;,&quot;referrer&quot;:&quot;${scheme}://alpha--qaall--c.documentforce.com/&quot;,&quot;source-file&quot;:&quot;${scheme}://static.lightning.force.com/cs127/auraFW/javascript/dDIdorNC3N22LalQ5i3slQ/aura_prod.js%20line%20239%20%3E%20eval&quot;,&quot;violated-directive&quot;:&quot;script-src&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">csp-report.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_/ContentDomainCSPNoAuth?type=lightning</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/csp-report</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=17&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1-299" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1024;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getActionOverrides&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;ALP360_Company__c&quot;,&quot;ALP360_Search_Field__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;AddOnDefinition&quot;,&quot;Additional_Communication_Channel__c&quot;,&quot;Address&quot;,&quot;AgentTraining&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AllergyIntolerance&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AttachedContentNote&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Banker&quot;,&quot;BasicDataRecord&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;BillingDistributionMethod&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingTreatment&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareSpecialty&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseMilestone&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;City__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;CloudServiceProvider&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;Connector_Settings__c&quot;,&quot;Consumer_Auditing__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Auditing__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;Custom_Log__c&quot;,&quot;CustomerProperty&quot;,&quot;Dashboard&quot;,&quot;DataConnectorS3&quot;,&quot;DataImportDefinition&quot;,&quot;DataSrcEnt&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;DistributorAuthorization&quot;,&quot;DocumentChecklistItem&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnghouseCustomer__c&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Enrollment__c&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvSettings__c&quot;,&quot;EnvironmentHubMember&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;FeedItem&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FlowDefinitionView&quot;,&quot;Folder&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;Global_By_Pass__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;In_App_Checklist_Settings__c&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InsightsApplication&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsuranceProfile&quot;,&quot;Interaction_Event__c&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceLine&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Lead&quot;,&quot;Lead_Capacity__c&quot;,&quot;Lead_Interaction__c&quot;,&quot;Lead_Routing__c&quot;,&quot;Lead_Settings__c&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyBenefit&quot;,&quot;LoyaltyBenefitType&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;Macro&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;Medication&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;NamespaceRegistry&quot;,&quot;Note&quot;,&quot;ObjectTerritory2Association&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Order&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderSummary&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTreatment&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;Polygon&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductTransfer&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Categories__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteLineItem&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;Related_Lead__c&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;SchedulingConstraint&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;SkillRequirement&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;StandardPermissionSet&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Topic&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;TrnCourse&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;WarrantyTerm&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;lightningbuddy__Action_User_Preference__c&quot;,&quot;lightningbuddy__Actions__c&quot;,&quot;lightningbuddy__Carousel_Image__c&quot;,&quot;lightningbuddy__Record_Criteria__c&quot;,&quot;lightningbuddy__Toaster_Alert_Param__c&quot;,&quot;lightningbuddy__Welcome_Mat_Tile__c&quot;,&quot;trailheadapp__Badge__c&quot;,&quot;trailheadapp__Debug_Log__c&quot;,&quot;trailheadapp__Trail__c&quot;,&quot;trailheadapp__Trailhead_User_Data__c&quot;,&quot;trailheadapp__Trailmix_Assignment__c&quot;,&quot;trailheadapp__Trailmix__c&quot;,&quot;trailheadapp__User_Badge__c&quot;,&quot;trailheadapp__User_Trailmix__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotion__c&quot;,&quot;vlocity_cmt__AccountBalance__c&quot;,&quot;vlocity_cmt__AccountDiscountItem__c&quot;,&quot;vlocity_cmt__AccountDiscountPricing__c&quot;,&quot;vlocity_cmt__AccountDiscount__c&quot;,&quot;vlocity_cmt__AccountHold__c&quot;,&quot;vlocity_cmt__AccountOffer__c&quot;,&quot;vlocity_cmt__AccountPriceAdjustment__c&quot;,&quot;vlocity_cmt__ActivityContentDocument__c&quot;,&quot;vlocity_cmt__ActivityTemplate__c&quot;,&quot;vlocity_cmt__AdminTabLayout__c&quot;,&quot;vlocity_cmt__ApplicationPartyRelationship__c&quot;,&quot;vlocity_cmt__ApplicationTemplate__c&quot;,&quot;vlocity_cmt__Application__c&quot;,&quot;vlocity_cmt__AssessmentAnswer__c&quot;,&quot;vlocity_cmt__AssessmentQuestion__c&quot;,&quot;vlocity_cmt__Assessment__c&quot;,&quot;vlocity_cmt__AssetPricingAdjustment__c&quot;,&quot;vlocity_cmt__AssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignmentExport__c&quot;,&quot;vlocity_cmt__AttributeAssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignment__c&quot;,&quot;vlocity_cmt__AttributeBinding__c&quot;,&quot;vlocity_cmt__AttributeCategory__c&quot;,&quot;vlocity_cmt__Attribute__c&quot;,&quot;vlocity_cmt__BillingDataTrim__c&quot;,&quot;vlocity_cmt__BusinessSiteOffering__c&quot;,&quot;vlocity_cmt__BusinessSite__c&quot;,&quot;vlocity_cmt__CachedAPIChangeEntry__c&quot;,&quot;vlocity_cmt__CachedAPIChange__c&quot;,&quot;vlocity_cmt__CachedAPIMigrate__c&quot;,&quot;vlocity_cmt__CachedAPIResponseOffers__c&quot;,&quot;vlocity_cmt__CachedAPIResponse__c&quot;,&quot;vlocity_cmt__CachedFilterableAttribute__c&quot;,&quot;vlocity_cmt__CachedKeyMapping__c&quot;,&quot;vlocity_cmt__CachedPriceBookEntryAttributeValue__c&quot;,&quot;vlocity_cmt__CachedProduct2Translation__c&quot;,&quot;vlocity_cmt__CachedPromotionTranslation__c&quot;,&quot;vlocity_cmt__CalculationMatrixColumn__c&quot;,&quot;vlocity_cmt__CalculationMatrixDimension__c&quot;,&quot;vlocity_cmt__CalculationMatrixRow__c&quot;,&quot;vlocity_cmt__CalculationMatrixVersion__c&quot;,&quot;vlocity_cmt__CalculationMatrix__c&quot;,&quot;vlocity_cmt__CalculationProcedureStep__c&quot;,&quot;vlocity_cmt__CalculationProcedureVariable__c&quot;,&quot;vlocity_cmt__CalculationProcedureVersion__c&quot;,&quot;vlocity_cmt__CalculationProcedure__c&quot;,&quot;vlocity_cmt__CallbackURI__c&quot;,&quot;vlocity_cmt__CampaignContentDocument__c&quot;,&quot;vlocity_cmt__CampaignMemberActionLog__c&quot;,&quot;vlocity_cmt__CardFrameworkConfiguration__c&quot;,&quot;vlocity_cmt__CartItem__c&quot;,&quot;vlocity_cmt__Cart__c&quot;,&quot;vlocity_cmt__CatalogProductRelationship__c&quot;,&quot;vlocity_cmt__CatalogRelationship__c&quot;,&quot;vlocity_cmt__Catalog__c&quot;,&quot;vlocity_cmt__ChargeMeasurement__c&quot;,&quot;vlocity_cmt__CompiledAttributeOverride__c&quot;,&quot;vlocity_cmt__ConsoleActionLog__c&quot;,&quot;vlocity_cmt__ContextAction__c&quot;,&quot;vlocity_cmt__ContextDimension__c&quot;,&quot;vlocity_cmt__ContextMappingArgument__c&quot;,&quot;vlocity_cmt__ContextMapping__c&quot;,&quot;vlocity_cmt__ContextRule__c&quot;,&quot;vlocity_cmt__ContextRuleset__c&quot;,&quot;vlocity_cmt__ContextScope__c&quot;,&quot;vlocity_cmt__ContractDocumentAccessControl__c&quot;,&quot;vlocity_cmt__ContractDocumentCollection__c&quot;,&quot;vlocity_cmt__ContractEnvelope__c&quot;,&quot;vlocity_cmt__ContractLineItem__c&quot;,&quot;vlocity_cmt__ContractManagementConfigurationSetup__c&quot;,&quot;vlocity_cmt__ContractRecipient__c&quot;,&quot;vlocity_cmt__ContractSection__c&quot;,&quot;vlocity_cmt__ContractTerm__c&quot;,&quot;vlocity_cmt__ContractTypeSetting__c&quot;,&quot;vlocity_cmt__ContractTypeTerm__c&quot;,&quot;vlocity_cmt__ContractType__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountItem__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountPricing__c&quot;,&quot;vlocity_cmt__ContractVersionDiscount__c&quot;,&quot;vlocity_cmt__ContractVersion__c&quot;,&quot;vlocity_cmt__CpqConfigurationSetup__c&quot;,&quot;vlocity_cmt__CustomClassImplementation__c&quot;,&quot;vlocity_cmt__CustomFieldMap__c&quot;,&quot;vlocity_cmt__CustomFilterFormula__c&quot;,&quot;vlocity_cmt__CustomFilter__c&quot;,&quot;vlocity_cmt__CustomObjectMap__c&quot;,&quot;vlocity_cmt__CustomerInteractionTopic__c&quot;,&quot;vlocity_cmt__CustomerInteraction__c&quot;,&quot;vlocity_cmt__DRBatchQueue__c&quot;,&quot;vlocity_cmt__DRBulkData__c&quot;,&quot;vlocity_cmt__DRBundle__c&quot;,&quot;vlocity_cmt__DREncryption__c&quot;,&quot;vlocity_cmt__DRMapItem__c&quot;,&quot;vlocity_cmt__DRWorker__c&quot;,&quot;vlocity_cmt__Datastore__c&quot;,&quot;vlocity_cmt__DecompositionRelationship__c&quot;,&quot;vlocity_cmt__DocuSignAnchorTabSetting__c&quot;,&quot;vlocity_cmt__DocuSignCalloutConfigurationSetup__c&quot;,&quot;vlocity_cmt__DocuSignEnvelopeObjectSetting__c&quot;,&quot;vlocity_cmt__DocumentClause__c&quot;,&quot;vlocity_cmt__DocumentSection__c&quot;,&quot;vlocity_cmt__DocumentTemplateElement__c&quot;,&quot;vlocity_cmt__DocumentTemplateSectionCondition__c&quot;,&quot;vlocity_cmt__DocumentTemplateSection__c&quot;,&quot;vlocity_cmt__DocumentTemplate__c&quot;,&quot;vlocity_cmt__DocumentToken__c&quot;,&quot;vlocity_cmt__Document__c&quot;,&quot;vlocity_cmt__Dunning__c&quot;,&quot;vlocity_cmt__Element__c&quot;,&quot;vlocity_cmt__EntityFilterConditionArgument__c&quot;,&quot;vlocity_cmt__EntityFilterCondition__c&quot;,&quot;vlocity_cmt__EntityFilterMember__c&quot;,&quot;vlocity_cmt__EntityFilter__c&quot;,&quot;vlocity_cmt__ErrorCodeNamespace__c&quot;,&quot;vlocity_cmt__ErrorCode__c&quot;,&quot;vlocity_cmt__Error_Code_Namespace__c&quot;,&quot;vlocity_cmt__Error_Code__c&quot;,&quot;vlocity_cmt__EventDuringInteraction__c&quot;,&quot;vlocity_cmt__EventMessage__c&quot;,&quot;vlocity_cmt__ExpandedInteractionLog__c&quot;,&quot;vlocity_cmt__FieldSettings__c&quot;,&quot;vlocity_cmt__FieldsConfiguration__c&quot;,&quot;vlocity_cmt__FieldsLookupConfiguration__c&quot;,&quot;vlocity_cmt__FlowStepFields__c&quot;,&quot;vlocity_cmt__FulfilmentRequestDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineSourceRootOrderItem__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLine__c&quot;,&quot;vlocity_cmt__FulfilmentRequest__c&quot;,&quot;vlocity_cmt__GeneralSettings__c&quot;,&quot;vlocity_cmt__GlobalAutoNumberSetting__c&quot;,&quot;vlocity_cmt__GraphCloneSpecial__c&quot;,&quot;vlocity_cmt__GraphClone__c&quot;,&quot;vlocity_cmt__HouseholdAddressMatch__c&quot;,&quot;vlocity_cmt__Household__c&quot;,&quot;vlocity_cmt__InboundRESTInterface__c&quot;,&quot;vlocity_cmt__IntegrationRetryPolicy__c&quot;,&quot;vlocity_cmt__InteractionLauncherConfiguration__c&quot;,&quot;vlocity_cmt__InterfaceImplementationDetail__c&quot;,&quot;vlocity_cmt__InterfaceImplementation__c&quot;,&quot;vlocity_cmt__Interface_BillingInfo__c&quot;,&quot;vlocity_cmt__Interface_DRGeneric__c&quot;,&quot;vlocity_cmt__Interface_ProductAttribute__c&quot;,&quot;vlocity_cmt__InventoryItemDecompositionRelationship__c&quot;,&quot;vlocity_cmt__InventoryItem__c&quot;,&quot;vlocity_cmt__ItemImplementation__c&quot;,&quot;vlocity_cmt__Jurisdiction__c&quot;,&quot;vlocity_cmt__LargeDataStore__c&quot;,&quot;vlocity_cmt__LineOfBusiness__c&quot;,&quot;vlocity_cmt__ManualQueueMember__c&quot;,&quot;vlocity_cmt__ManualQueue__c&quot;,&quot;vlocity_cmt__MobileConfiguration__c&quot;,&quot;vlocity_cmt__ObjectClass__c&quot;,&quot;vlocity_cmt__ObjectElement__c&quot;,&quot;vlocity_cmt__ObjectFacet__c&quot;,&quot;vlocity_cmt__ObjectFieldAttribute__c&quot;,&quot;vlocity_cmt__ObjectLayout__c&quot;,&quot;vlocity_cmt__ObjectRuleAssignment__c&quot;,&quot;vlocity_cmt__ObjectSection__c&quot;,&quot;vlocity_cmt__OfferMigrationComponentMapping__c&quot;,&quot;vlocity_cmt__OfferMigrationPlan__c&quot;,&quot;vlocity_cmt__OfferPricingComponent__c&quot;,&quot;vlocity_cmt__OfferingProcedure__c&quot;,&quot;vlocity_cmt__OmniScriptDefinition__c&quot;,&quot;vlocity_cmt__OmniScriptInstance__c&quot;,&quot;vlocity_cmt__OmniScript__c&quot;,&quot;vlocity_cmt__OperatingHoursEntry__c&quot;,&quot;vlocity_cmt__OperatingHours__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotion__c&quot;,&quot;vlocity_cmt__OpportunityDiscountItem__c&quot;,&quot;vlocity_cmt__OpportunityDiscountPricing__c&quot;,&quot;vlocity_cmt__OpportunityDiscount__c&quot;,&quot;vlocity_cmt__OpportunityLineItemRelationship__c&quot;,&quot;vlocity_cmt__OpportunityPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrchestrationDependencyDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationDependency__c&quot;,&quot;vlocity_cmt__OrchestrationItemDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationItemSource__c&quot;,&quot;vlocity_cmt__OrchestrationItem__c&quot;,&quot;vlocity_cmt__OrchestrationPlanDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationPlan__c&quot;,&quot;vlocity_cmt__OrchestrationQueueAssignmentRule__c&quot;,&quot;vlocity_cmt__OrchestrationQueue__c&quot;,&quot;vlocity_cmt__OrchestrationScenario__c&quot;,&quot;vlocity_cmt__OrchestrationSchedulerImplementation__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotion__c&quot;,&quot;vlocity_cmt__OrderDiscountItem__c&quot;,&quot;vlocity_cmt__OrderDiscountPricing__c&quot;,&quot;vlocity_cmt__OrderDiscount__c&quot;,&quot;vlocity_cmt__OrderGroup__c&quot;,&quot;vlocity_cmt__OrderItemPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderItemRelationship__c&quot;,&quot;vlocity_cmt__OrderPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderRelationship__c&quot;,&quot;vlocity_cmt__OutboundConfiguration__c&quot;,&quot;vlocity_cmt__OverrideDefinition__c&quot;,&quot;vlocity_cmt__PDFDocumentTemplate__c&quot;,&quot;vlocity_cmt__PartyMaintenanceJobConfiguration__c&quot;,&quot;vlocity_cmt__PartyMergeMetadata__c&quot;,&quot;vlocity_cmt__PartyMergeRequest__c&quot;,&quot;vlocity_cmt__PartyRelationshipType__c&quot;,&quot;vlocity_cmt__PartyRelationship__c&quot;,&quot;vlocity_cmt__Party_Association__c&quot;,&quot;vlocity_cmt__Party__c&quot;,&quot;vlocity_cmt__PaymentAdjustment__c&quot;,&quot;vlocity_cmt__PaymentMethod__c&quot;,&quot;vlocity_cmt__PaymentPlan__c&quot;,&quot;vlocity_cmt__PersonAccountSettings__c&quot;,&quot;vlocity_cmt__PicklistSelectionEntry__c&quot;,&quot;vlocity_cmt__PicklistValue__c&quot;,&quot;vlocity_cmt__Picklist__c&quot;,&quot;vlocity_cmt__PremisesPartyRelationship__c&quot;,&quot;vlocity_cmt__Premises__c&quot;,&quot;vlocity_cmt__PriceListEntry__c&quot;,&quot;vlocity_cmt__PriceList__c&quot;,&quot;vlocity_cmt__PricingComponentRelationship__c&quot;,&quot;vlocity_cmt__PricingComponent__c&quot;,&quot;vlocity_cmt__PricingElement__c&quot;,&quot;vlocity_cmt__PricingPlanStep__c&quot;,&quot;vlocity_cmt__PricingPlan__c&quot;,&quot;vlocity_cmt__PricingVariableBinding__c&quot;,&quot;vlocity_cmt__PricingVariable__c&quot;,&quot;vlocity_cmt__ProductAttribXN__c&quot;,&quot;vlocity_cmt__ProductAvailability__c&quot;,&quot;vlocity_cmt__ProductChildItem__c&quot;,&quot;vlocity_cmt__ProductConfigurationProcedure__c&quot;,&quot;vlocity_cmt__ProductEligibility__c&quot;,&quot;vlocity_cmt__ProductManagementConfiguration__c&quot;,&quot;vlocity_cmt__ProductRelationshipType__c&quot;,&quot;vlocity_cmt__ProductRelationship__c&quot;,&quot;vlocity_cmt__ProductTemplate__c&quot;,&quot;vlocity_cmt__ProfileCategoryAssignment__c&quot;,&quot;vlocity_cmt__ProfilingSegmentCategory__c&quot;,&quot;vlocity_cmt__ProfilingSegment__c&quot;,&quot;vlocity_cmt__ProjectItem__c&quot;,&quot;vlocity_cmt__Project__c&quot;,&quot;vlocity_cmt__PromotionApplicableProduct__c&quot;,&quot;vlocity_cmt__PromotionIncludedProduct__c&quot;,&quot;vlocity_cmt__PromotionItem__c&quot;,&quot;vlocity_cmt__PromotionPricingAlteration__c&quot;,&quot;vlocity_cmt__Promotion__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotion__c&quot;,&quot;vlocity_cmt__QuoteDiscountItem__c&quot;,&quot;vlocity_cmt__QuoteDiscountPricing__c&quot;,&quot;vlocity_cmt__QuoteDiscount__c&quot;,&quot;vlocity_cmt__QuoteGroup__c&quot;,&quot;vlocity_cmt__QuoteLineItemPricingAdjustment__c&quot;,&quot;vlocity_cmt__QuoteLineItemRelationship__c&quot;,&quot;vlocity_cmt__QuotePricingAdjustment__c&quot;,&quot;vlocity_cmt__RelationshipGraphConfigurationSetup__c&quot;,&quot;vlocity_cmt__RelationshipGraphDetails__c&quot;,&quot;vlocity_cmt__RelationshipGraphNodeType__c&quot;,&quot;vlocity_cmt__RelationshipGraphTraversal__c&quot;,&quot;vlocity_cmt__RelationshipGraph__c&quot;,&quot;vlocity_cmt__RemoteUrlTemplate__c&quot;,&quot;vlocity_cmt__RuleAction__c&quot;,&quot;vlocity_cmt__RuleAssignment__c&quot;,&quot;vlocity_cmt__RuleFilter__c&quot;,&quot;vlocity_cmt__RuleProperty__c&quot;,&quot;vlocity_cmt__RuleVariable__c&quot;,&quot;vlocity_cmt__Rule__c&quot;,&quot;vlocity_cmt__RunTriggerAndWorkFlow__c&quot;,&quot;vlocity_cmt__ScreeningRuleGroup__c&quot;,&quot;vlocity_cmt__ScreeningRule__c&quot;,&quot;vlocity_cmt__SecurityDeposit__c&quot;,&quot;vlocity_cmt__ServicePoint__c&quot;,&quot;vlocity_cmt__SpecTemplateAttributeMapping__c&quot;,&quot;vlocity_cmt__SpecTemplateMapping__c&quot;,&quot;vlocity_cmt__Stage__c&quot;,&quot;vlocity_cmt__StateTransition__c&quot;,&quot;vlocity_cmt__StatementLineItem__c&quot;,&quot;vlocity_cmt__Statement__c&quot;,&quot;vlocity_cmt__StoryListPageLimit__c&quot;,&quot;vlocity_cmt__StoryObjectConfiguration__c&quot;,&quot;vlocity_cmt__StringTranslation__c&quot;,&quot;vlocity_cmt__String__c&quot;,&quot;vlocity_cmt__Subscription__c&quot;,&quot;vlocity_cmt__SyncDeltaControl__c&quot;,&quot;vlocity_cmt__SyncDeltaObject__c&quot;,&quot;vlocity_cmt__SyncDeltaSnapshot__c&quot;,&quot;vlocity_cmt__SystemInterface__c&quot;,&quot;vlocity_cmt__System__c&quot;,&quot;vlocity_cmt__TemplateDesignerConfiguration__c&quot;,&quot;vlocity_cmt__ThorOrchestrationQueue__c&quot;,&quot;vlocity_cmt__TimePlan__c&quot;,&quot;vlocity_cmt__TimePolicy__c&quot;,&quot;vlocity_cmt__TriggerSetup__c&quot;,&quot;vlocity_cmt__UICustomization__c&quot;,&quot;vlocity_cmt__UIFacet__c&quot;,&quot;vlocity_cmt__UISection__c&quot;,&quot;vlocity_cmt__UISettings__c&quot;,&quot;vlocity_cmt__UserCalendar__c&quot;,&quot;vlocity_cmt__VlocityAPIMetadata__c&quot;,&quot;vlocity_cmt__VlocityAction__c&quot;,&quot;vlocity_cmt__VlocityAttachment__c&quot;,&quot;vlocity_cmt__VlocityCard__c&quot;,&quot;vlocity_cmt__VlocityDataCache__c&quot;,&quot;vlocity_cmt__VlocityDataPack__c&quot;,&quot;vlocity_cmt__VlocityDocuSignBranding__c&quot;,&quot;vlocity_cmt__VlocityDocuSignTemplate__c&quot;,&quot;vlocity_cmt__VlocityErrorLogEntry__c&quot;,&quot;vlocity_cmt__VlocityFunctionArgument__c&quot;,&quot;vlocity_cmt__VlocityFunction__c&quot;,&quot;vlocity_cmt__VlocityLibraryOrganization__c&quot;,&quot;vlocity_cmt__VlocityScheduledJob__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetActionsSetup__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetSetup__c&quot;,&quot;vlocity_cmt__VlocityStateModelVersion__c&quot;,&quot;vlocity_cmt__VlocityStateModel__c&quot;,&quot;vlocity_cmt__VlocityStateTransition__c&quot;,&quot;vlocity_cmt__VlocityState__c&quot;,&quot;vlocity_cmt__VlocitySystemLog__c&quot;,&quot;vlocity_cmt__VlocityTrackingEntry__c&quot;,&quot;vlocity_cmt__VlocityUILayout__c&quot;,&quot;vlocity_cmt__VlocityUITemplate__c&quot;,&quot;vlocity_cmt__VqMachineResource__c&quot;,&quot;vlocity_cmt__VqMachine__c&quot;,&quot;vlocity_cmt__VqResource__c&quot;,&quot;vlocity_cmt__WorkSetSettings__c&quot;,&quot;vlocity_cmt__XLIBatchValidationSetting__c&quot;,&quot;vlocity_cmt__XOMCustomLabelsCache__c&quot;,&quot;vlocity_cmt__XOMParameter__c&quot;,&quot;vlocity_cmt__XOMSetup__c&quot;],&quot;appId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1025;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getKeyPrefixesWithRecordTypes&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1026;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getIsLWCFlexipageEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;ALP360_Company__c&quot;,&quot;ALP360_Search_Field__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;AddOnDefinition&quot;,&quot;Additional_Communication_Channel__c&quot;,&quot;Address&quot;,&quot;AgentTraining&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AllergyIntolerance&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AttachedContentNote&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Banker&quot;,&quot;BasicDataRecord&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;BillingDistributionMethod&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingTreatment&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareSpecialty&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseMilestone&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;City__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;CloudServiceProvider&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;Connector_Settings__c&quot;,&quot;Consumer_Auditing__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Auditing__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;Custom_Log__c&quot;,&quot;CustomerProperty&quot;,&quot;Dashboard&quot;,&quot;DataConnectorS3&quot;,&quot;DataImportDefinition&quot;,&quot;DataSrcEnt&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;DistributorAuthorization&quot;,&quot;DocumentChecklistItem&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnghouseCustomer__c&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Enrollment__c&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvSettings__c&quot;,&quot;EnvironmentHubMember&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;FeedItem&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FlowDefinitionView&quot;,&quot;Folder&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;Global_By_Pass__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;In_App_Checklist_Settings__c&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InsightsApplication&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsuranceProfile&quot;,&quot;Interaction_Event__c&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceLine&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Lead&quot;,&quot;Lead_Capacity__c&quot;,&quot;Lead_Interaction__c&quot;,&quot;Lead_Routing__c&quot;,&quot;Lead_Settings__c&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyBenefit&quot;,&quot;LoyaltyBenefitType&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;Macro&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;Medication&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;NamespaceRegistry&quot;,&quot;Note&quot;,&quot;ObjectTerritory2Association&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Order&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderSummary&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTreatment&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;Polygon&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductTransfer&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Categories__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteLineItem&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;Related_Lead__c&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;SchedulingConstraint&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;SkillRequirement&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;StandardPermissionSet&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Topic&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;TrnCourse&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;WarrantyTerm&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;lightningbuddy__Action_User_Preference__c&quot;,&quot;lightningbuddy__Actions__c&quot;,&quot;lightningbuddy__Carousel_Image__c&quot;,&quot;lightningbuddy__Record_Criteria__c&quot;,&quot;lightningbuddy__Toaster_Alert_Param__c&quot;,&quot;lightningbuddy__Welcome_Mat_Tile__c&quot;,&quot;trailheadapp__Badge__c&quot;,&quot;trailheadapp__Debug_Log__c&quot;,&quot;trailheadapp__Trail__c&quot;,&quot;trailheadapp__Trailhead_User_Data__c&quot;,&quot;trailheadapp__Trailmix_Assignment__c&quot;,&quot;trailheadapp__Trailmix__c&quot;,&quot;trailheadapp__User_Badge__c&quot;,&quot;trailheadapp__User_Trailmix__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotion__c&quot;,&quot;vlocity_cmt__AccountBalance__c&quot;,&quot;vlocity_cmt__AccountDiscountItem__c&quot;,&quot;vlocity_cmt__AccountDiscountPricing__c&quot;,&quot;vlocity_cmt__AccountDiscount__c&quot;,&quot;vlocity_cmt__AccountHold__c&quot;,&quot;vlocity_cmt__AccountOffer__c&quot;,&quot;vlocity_cmt__AccountPriceAdjustment__c&quot;,&quot;vlocity_cmt__ActivityContentDocument__c&quot;,&quot;vlocity_cmt__ActivityTemplate__c&quot;,&quot;vlocity_cmt__AdminTabLayout__c&quot;,&quot;vlocity_cmt__ApplicationPartyRelationship__c&quot;,&quot;vlocity_cmt__ApplicationTemplate__c&quot;,&quot;vlocity_cmt__Application__c&quot;,&quot;vlocity_cmt__AssessmentAnswer__c&quot;,&quot;vlocity_cmt__AssessmentQuestion__c&quot;,&quot;vlocity_cmt__Assessment__c&quot;,&quot;vlocity_cmt__AssetPricingAdjustment__c&quot;,&quot;vlocity_cmt__AssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignmentExport__c&quot;,&quot;vlocity_cmt__AttributeAssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignment__c&quot;,&quot;vlocity_cmt__AttributeBinding__c&quot;,&quot;vlocity_cmt__AttributeCategory__c&quot;,&quot;vlocity_cmt__Attribute__c&quot;,&quot;vlocity_cmt__BillingDataTrim__c&quot;,&quot;vlocity_cmt__BusinessSiteOffering__c&quot;,&quot;vlocity_cmt__BusinessSite__c&quot;,&quot;vlocity_cmt__CachedAPIChangeEntry__c&quot;,&quot;vlocity_cmt__CachedAPIChange__c&quot;,&quot;vlocity_cmt__CachedAPIMigrate__c&quot;,&quot;vlocity_cmt__CachedAPIResponseOffers__c&quot;,&quot;vlocity_cmt__CachedAPIResponse__c&quot;,&quot;vlocity_cmt__CachedFilterableAttribute__c&quot;,&quot;vlocity_cmt__CachedKeyMapping__c&quot;,&quot;vlocity_cmt__CachedPriceBookEntryAttributeValue__c&quot;,&quot;vlocity_cmt__CachedProduct2Translation__c&quot;,&quot;vlocity_cmt__CachedPromotionTranslation__c&quot;,&quot;vlocity_cmt__CalculationMatrixColumn__c&quot;,&quot;vlocity_cmt__CalculationMatrixDimension__c&quot;,&quot;vlocity_cmt__CalculationMatrixRow__c&quot;,&quot;vlocity_cmt__CalculationMatrixVersion__c&quot;,&quot;vlocity_cmt__CalculationMatrix__c&quot;,&quot;vlocity_cmt__CalculationProcedureStep__c&quot;,&quot;vlocity_cmt__CalculationProcedureVariable__c&quot;,&quot;vlocity_cmt__CalculationProcedureVersion__c&quot;,&quot;vlocity_cmt__CalculationProcedure__c&quot;,&quot;vlocity_cmt__CallbackURI__c&quot;,&quot;vlocity_cmt__CampaignContentDocument__c&quot;,&quot;vlocity_cmt__CampaignMemberActionLog__c&quot;,&quot;vlocity_cmt__CardFrameworkConfiguration__c&quot;,&quot;vlocity_cmt__CartItem__c&quot;,&quot;vlocity_cmt__Cart__c&quot;,&quot;vlocity_cmt__CatalogProductRelationship__c&quot;,&quot;vlocity_cmt__CatalogRelationship__c&quot;,&quot;vlocity_cmt__Catalog__c&quot;,&quot;vlocity_cmt__ChargeMeasurement__c&quot;,&quot;vlocity_cmt__CompiledAttributeOverride__c&quot;,&quot;vlocity_cmt__ConsoleActionLog__c&quot;,&quot;vlocity_cmt__ContextAction__c&quot;,&quot;vlocity_cmt__ContextDimension__c&quot;,&quot;vlocity_cmt__ContextMappingArgument__c&quot;,&quot;vlocity_cmt__ContextMapping__c&quot;,&quot;vlocity_cmt__ContextRule__c&quot;,&quot;vlocity_cmt__ContextRuleset__c&quot;,&quot;vlocity_cmt__ContextScope__c&quot;,&quot;vlocity_cmt__ContractDocumentAccessControl__c&quot;,&quot;vlocity_cmt__ContractDocumentCollection__c&quot;,&quot;vlocity_cmt__ContractEnvelope__c&quot;,&quot;vlocity_cmt__ContractLineItem__c&quot;,&quot;vlocity_cmt__ContractManagementConfigurationSetup__c&quot;,&quot;vlocity_cmt__ContractRecipient__c&quot;,&quot;vlocity_cmt__ContractSection__c&quot;,&quot;vlocity_cmt__ContractTerm__c&quot;,&quot;vlocity_cmt__ContractTypeSetting__c&quot;,&quot;vlocity_cmt__ContractTypeTerm__c&quot;,&quot;vlocity_cmt__ContractType__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountItem__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountPricing__c&quot;,&quot;vlocity_cmt__ContractVersionDiscount__c&quot;,&quot;vlocity_cmt__ContractVersion__c&quot;,&quot;vlocity_cmt__CpqConfigurationSetup__c&quot;,&quot;vlocity_cmt__CustomClassImplementation__c&quot;,&quot;vlocity_cmt__CustomFieldMap__c&quot;,&quot;vlocity_cmt__CustomFilterFormula__c&quot;,&quot;vlocity_cmt__CustomFilter__c&quot;,&quot;vlocity_cmt__CustomObjectMap__c&quot;,&quot;vlocity_cmt__CustomerInteractionTopic__c&quot;,&quot;vlocity_cmt__CustomerInteraction__c&quot;,&quot;vlocity_cmt__DRBatchQueue__c&quot;,&quot;vlocity_cmt__DRBulkData__c&quot;,&quot;vlocity_cmt__DRBundle__c&quot;,&quot;vlocity_cmt__DREncryption__c&quot;,&quot;vlocity_cmt__DRMapItem__c&quot;,&quot;vlocity_cmt__DRWorker__c&quot;,&quot;vlocity_cmt__Datastore__c&quot;,&quot;vlocity_cmt__DecompositionRelationship__c&quot;,&quot;vlocity_cmt__DocuSignAnchorTabSetting__c&quot;,&quot;vlocity_cmt__DocuSignCalloutConfigurationSetup__c&quot;,&quot;vlocity_cmt__DocuSignEnvelopeObjectSetting__c&quot;,&quot;vlocity_cmt__DocumentClause__c&quot;,&quot;vlocity_cmt__DocumentSection__c&quot;,&quot;vlocity_cmt__DocumentTemplateElement__c&quot;,&quot;vlocity_cmt__DocumentTemplateSectionCondition__c&quot;,&quot;vlocity_cmt__DocumentTemplateSection__c&quot;,&quot;vlocity_cmt__DocumentTemplate__c&quot;,&quot;vlocity_cmt__DocumentToken__c&quot;,&quot;vlocity_cmt__Document__c&quot;,&quot;vlocity_cmt__Dunning__c&quot;,&quot;vlocity_cmt__Element__c&quot;,&quot;vlocity_cmt__EntityFilterConditionArgument__c&quot;,&quot;vlocity_cmt__EntityFilterCondition__c&quot;,&quot;vlocity_cmt__EntityFilterMember__c&quot;,&quot;vlocity_cmt__EntityFilter__c&quot;,&quot;vlocity_cmt__ErrorCodeNamespace__c&quot;,&quot;vlocity_cmt__ErrorCode__c&quot;,&quot;vlocity_cmt__Error_Code_Namespace__c&quot;,&quot;vlocity_cmt__Error_Code__c&quot;,&quot;vlocity_cmt__EventDuringInteraction__c&quot;,&quot;vlocity_cmt__EventMessage__c&quot;,&quot;vlocity_cmt__ExpandedInteractionLog__c&quot;,&quot;vlocity_cmt__FieldSettings__c&quot;,&quot;vlocity_cmt__FieldsConfiguration__c&quot;,&quot;vlocity_cmt__FieldsLookupConfiguration__c&quot;,&quot;vlocity_cmt__FlowStepFields__c&quot;,&quot;vlocity_cmt__FulfilmentRequestDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineSourceRootOrderItem__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLine__c&quot;,&quot;vlocity_cmt__FulfilmentRequest__c&quot;,&quot;vlocity_cmt__GeneralSettings__c&quot;,&quot;vlocity_cmt__GlobalAutoNumberSetting__c&quot;,&quot;vlocity_cmt__GraphCloneSpecial__c&quot;,&quot;vlocity_cmt__GraphClone__c&quot;,&quot;vlocity_cmt__HouseholdAddressMatch__c&quot;,&quot;vlocity_cmt__Household__c&quot;,&quot;vlocity_cmt__InboundRESTInterface__c&quot;,&quot;vlocity_cmt__IntegrationRetryPolicy__c&quot;,&quot;vlocity_cmt__InteractionLauncherConfiguration__c&quot;,&quot;vlocity_cmt__InterfaceImplementationDetail__c&quot;,&quot;vlocity_cmt__InterfaceImplementation__c&quot;,&quot;vlocity_cmt__Interface_BillingInfo__c&quot;,&quot;vlocity_cmt__Interface_DRGeneric__c&quot;,&quot;vlocity_cmt__Interface_ProductAttribute__c&quot;,&quot;vlocity_cmt__InventoryItemDecompositionRelationship__c&quot;,&quot;vlocity_cmt__InventoryItem__c&quot;,&quot;vlocity_cmt__ItemImplementation__c&quot;,&quot;vlocity_cmt__Jurisdiction__c&quot;,&quot;vlocity_cmt__LargeDataStore__c&quot;,&quot;vlocity_cmt__LineOfBusiness__c&quot;,&quot;vlocity_cmt__ManualQueueMember__c&quot;,&quot;vlocity_cmt__ManualQueue__c&quot;,&quot;vlocity_cmt__MobileConfiguration__c&quot;,&quot;vlocity_cmt__ObjectClass__c&quot;,&quot;vlocity_cmt__ObjectElement__c&quot;,&quot;vlocity_cmt__ObjectFacet__c&quot;,&quot;vlocity_cmt__ObjectFieldAttribute__c&quot;,&quot;vlocity_cmt__ObjectLayout__c&quot;,&quot;vlocity_cmt__ObjectRuleAssignment__c&quot;,&quot;vlocity_cmt__ObjectSection__c&quot;,&quot;vlocity_cmt__OfferMigrationComponentMapping__c&quot;,&quot;vlocity_cmt__OfferMigrationPlan__c&quot;,&quot;vlocity_cmt__OfferPricingComponent__c&quot;,&quot;vlocity_cmt__OfferingProcedure__c&quot;,&quot;vlocity_cmt__OmniScriptDefinition__c&quot;,&quot;vlocity_cmt__OmniScriptInstance__c&quot;,&quot;vlocity_cmt__OmniScript__c&quot;,&quot;vlocity_cmt__OperatingHoursEntry__c&quot;,&quot;vlocity_cmt__OperatingHours__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotion__c&quot;,&quot;vlocity_cmt__OpportunityDiscountItem__c&quot;,&quot;vlocity_cmt__OpportunityDiscountPricing__c&quot;,&quot;vlocity_cmt__OpportunityDiscount__c&quot;,&quot;vlocity_cmt__OpportunityLineItemRelationship__c&quot;,&quot;vlocity_cmt__OpportunityPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrchestrationDependencyDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationDependency__c&quot;,&quot;vlocity_cmt__OrchestrationItemDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationItemSource__c&quot;,&quot;vlocity_cmt__OrchestrationItem__c&quot;,&quot;vlocity_cmt__OrchestrationPlanDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationPlan__c&quot;,&quot;vlocity_cmt__OrchestrationQueueAssignmentRule__c&quot;,&quot;vlocity_cmt__OrchestrationQueue__c&quot;,&quot;vlocity_cmt__OrchestrationScenario__c&quot;,&quot;vlocity_cmt__OrchestrationSchedulerImplementation__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotion__c&quot;,&quot;vlocity_cmt__OrderDiscountItem__c&quot;,&quot;vlocity_cmt__OrderDiscountPricing__c&quot;,&quot;vlocity_cmt__OrderDiscount__c&quot;,&quot;vlocity_cmt__OrderGroup__c&quot;,&quot;vlocity_cmt__OrderItemPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderItemRelationship__c&quot;,&quot;vlocity_cmt__OrderPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderRelationship__c&quot;,&quot;vlocity_cmt__OutboundConfiguration__c&quot;,&quot;vlocity_cmt__OverrideDefinition__c&quot;,&quot;vlocity_cmt__PDFDocumentTemplate__c&quot;,&quot;vlocity_cmt__PartyMaintenanceJobConfiguration__c&quot;,&quot;vlocity_cmt__PartyMergeMetadata__c&quot;,&quot;vlocity_cmt__PartyMergeRequest__c&quot;,&quot;vlocity_cmt__PartyRelationshipType__c&quot;,&quot;vlocity_cmt__PartyRelationship__c&quot;,&quot;vlocity_cmt__Party_Association__c&quot;,&quot;vlocity_cmt__Party__c&quot;,&quot;vlocity_cmt__PaymentAdjustment__c&quot;,&quot;vlocity_cmt__PaymentMethod__c&quot;,&quot;vlocity_cmt__PaymentPlan__c&quot;,&quot;vlocity_cmt__PersonAccountSettings__c&quot;,&quot;vlocity_cmt__PicklistSelectionEntry__c&quot;,&quot;vlocity_cmt__PicklistValue__c&quot;,&quot;vlocity_cmt__Picklist__c&quot;,&quot;vlocity_cmt__PremisesPartyRelationship__c&quot;,&quot;vlocity_cmt__Premises__c&quot;,&quot;vlocity_cmt__PriceListEntry__c&quot;,&quot;vlocity_cmt__PriceList__c&quot;,&quot;vlocity_cmt__PricingComponentRelationship__c&quot;,&quot;vlocity_cmt__PricingComponent__c&quot;,&quot;vlocity_cmt__PricingElement__c&quot;,&quot;vlocity_cmt__PricingPlanStep__c&quot;,&quot;vlocity_cmt__PricingPlan__c&quot;,&quot;vlocity_cmt__PricingVariableBinding__c&quot;,&quot;vlocity_cmt__PricingVariable__c&quot;,&quot;vlocity_cmt__ProductAttribXN__c&quot;,&quot;vlocity_cmt__ProductAvailability__c&quot;,&quot;vlocity_cmt__ProductChildItem__c&quot;,&quot;vlocity_cmt__ProductConfigurationProcedure__c&quot;,&quot;vlocity_cmt__ProductEligibility__c&quot;,&quot;vlocity_cmt__ProductManagementConfiguration__c&quot;,&quot;vlocity_cmt__ProductRelationshipType__c&quot;,&quot;vlocity_cmt__ProductRelationship__c&quot;,&quot;vlocity_cmt__ProductTemplate__c&quot;,&quot;vlocity_cmt__ProfileCategoryAssignment__c&quot;,&quot;vlocity_cmt__ProfilingSegmentCategory__c&quot;,&quot;vlocity_cmt__ProfilingSegment__c&quot;,&quot;vlocity_cmt__ProjectItem__c&quot;,&quot;vlocity_cmt__Project__c&quot;,&quot;vlocity_cmt__PromotionApplicableProduct__c&quot;,&quot;vlocity_cmt__PromotionIncludedProduct__c&quot;,&quot;vlocity_cmt__PromotionItem__c&quot;,&quot;vlocity_cmt__PromotionPricingAlteration__c&quot;,&quot;vlocity_cmt__Promotion__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotion__c&quot;,&quot;vlocity_cmt__QuoteDiscountItem__c&quot;,&quot;vlocity_cmt__QuoteDiscountPricing__c&quot;,&quot;vlocity_cmt__QuoteDiscount__c&quot;,&quot;vlocity_cmt__QuoteGroup__c&quot;,&quot;vlocity_cmt__QuoteLineItemPricingAdjustment__c&quot;,&quot;vlocity_cmt__QuoteLineItemRelationship__c&quot;,&quot;vlocity_cmt__QuotePricingAdjustment__c&quot;,&quot;vlocity_cmt__RelationshipGraphConfigurationSetup__c&quot;,&quot;vlocity_cmt__RelationshipGraphDetails__c&quot;,&quot;vlocity_cmt__RelationshipGraphNodeType__c&quot;,&quot;vlocity_cmt__RelationshipGraphTraversal__c&quot;,&quot;vlocity_cmt__RelationshipGraph__c&quot;,&quot;vlocity_cmt__RemoteUrlTemplate__c&quot;,&quot;vlocity_cmt__RuleAction__c&quot;,&quot;vlocity_cmt__RuleAssignment__c&quot;,&quot;vlocity_cmt__RuleFilter__c&quot;,&quot;vlocity_cmt__RuleProperty__c&quot;,&quot;vlocity_cmt__RuleVariable__c&quot;,&quot;vlocity_cmt__Rule__c&quot;,&quot;vlocity_cmt__RunTriggerAndWorkFlow__c&quot;,&quot;vlocity_cmt__ScreeningRuleGroup__c&quot;,&quot;vlocity_cmt__ScreeningRule__c&quot;,&quot;vlocity_cmt__SecurityDeposit__c&quot;,&quot;vlocity_cmt__ServicePoint__c&quot;,&quot;vlocity_cmt__SpecTemplateAttributeMapping__c&quot;,&quot;vlocity_cmt__SpecTemplateMapping__c&quot;,&quot;vlocity_cmt__Stage__c&quot;,&quot;vlocity_cmt__StateTransition__c&quot;,&quot;vlocity_cmt__StatementLineItem__c&quot;,&quot;vlocity_cmt__Statement__c&quot;,&quot;vlocity_cmt__StoryListPageLimit__c&quot;,&quot;vlocity_cmt__StoryObjectConfiguration__c&quot;,&quot;vlocity_cmt__StringTranslation__c&quot;,&quot;vlocity_cmt__String__c&quot;,&quot;vlocity_cmt__Subscription__c&quot;,&quot;vlocity_cmt__SyncDeltaControl__c&quot;,&quot;vlocity_cmt__SyncDeltaObject__c&quot;,&quot;vlocity_cmt__SyncDeltaSnapshot__c&quot;,&quot;vlocity_cmt__SystemInterface__c&quot;,&quot;vlocity_cmt__System__c&quot;,&quot;vlocity_cmt__TemplateDesignerConfiguration__c&quot;,&quot;vlocity_cmt__ThorOrchestrationQueue__c&quot;,&quot;vlocity_cmt__TimePlan__c&quot;,&quot;vlocity_cmt__TimePolicy__c&quot;,&quot;vlocity_cmt__TriggerSetup__c&quot;,&quot;vlocity_cmt__UICustomization__c&quot;,&quot;vlocity_cmt__UIFacet__c&quot;,&quot;vlocity_cmt__UISection__c&quot;,&quot;vlocity_cmt__UISettings__c&quot;,&quot;vlocity_cmt__UserCalendar__c&quot;,&quot;vlocity_cmt__VlocityAPIMetadata__c&quot;,&quot;vlocity_cmt__VlocityAction__c&quot;,&quot;vlocity_cmt__VlocityAttachment__c&quot;,&quot;vlocity_cmt__VlocityCard__c&quot;,&quot;vlocity_cmt__VlocityDataCache__c&quot;,&quot;vlocity_cmt__VlocityDataPack__c&quot;,&quot;vlocity_cmt__VlocityDocuSignBranding__c&quot;,&quot;vlocity_cmt__VlocityDocuSignTemplate__c&quot;,&quot;vlocity_cmt__VlocityErrorLogEntry__c&quot;,&quot;vlocity_cmt__VlocityFunctionArgument__c&quot;,&quot;vlocity_cmt__VlocityFunction__c&quot;,&quot;vlocity_cmt__VlocityLibraryOrganization__c&quot;,&quot;vlocity_cmt__VlocityScheduledJob__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetActionsSetup__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetSetup__c&quot;,&quot;vlocity_cmt__VlocityStateModelVersion__c&quot;,&quot;vlocity_cmt__VlocityStateModel__c&quot;,&quot;vlocity_cmt__VlocityStateTransition__c&quot;,&quot;vlocity_cmt__VlocityState__c&quot;,&quot;vlocity_cmt__VlocitySystemLog__c&quot;,&quot;vlocity_cmt__VlocityTrackingEntry__c&quot;,&quot;vlocity_cmt__VlocityUILayout__c&quot;,&quot;vlocity_cmt__VlocityUITemplate__c&quot;,&quot;vlocity_cmt__VqMachineResource__c&quot;,&quot;vlocity_cmt__VqMachine__c&quot;,&quot;vlocity_cmt__VqResource__c&quot;,&quot;vlocity_cmt__WorkSetSettings__c&quot;,&quot;vlocity_cmt__XLIBatchValidationSetting__c&quot;,&quot;vlocity_cmt__XOMCustomLabelsCache__c&quot;,&quot;vlocity_cmt__XOMParameter__c&quot;,&quot;vlocity_cmt__XOMSetup__c&quot;]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=17&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">89200000006ddcb2c1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=18&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getHVSConfig=1&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.isRecordActionEnabled=1-300" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1040;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.opencti.components.openCtiApiHandler.OpenCtiApiHandlerController/ACTION$isRecordActionEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1041;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.opencti.components.openCtiApiHandler.OpenCtiApiHandlerController/ACTION$getHVSConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=18&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getHVSConfig=1&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.isRecordActionEnabled=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9310000000a7e993c9</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=20&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-302" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1043;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;],&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=20&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9575000000a951ab99</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=21&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-303" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1044;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;],&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=21&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">95800000001f9a05cc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=22&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-304" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1045;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;],&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=22&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">95820000007e29923e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=23&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1-305" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1046;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:true}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=23&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9643000000a5fe4f6d</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=19&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getSoftphoneConfig=1-301" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1039;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.opencti.components.openCtiApiHandler.OpenCtiApiHandlerController/ACTION$getSoftphoneConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=19&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getSoftphoneConfig=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9311000000c7bd0a5d</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=24&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getSoftphoneConfig=1-306" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1053;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.opencti.components.openCtiApiHandler.OpenCtiApiHandlerController/ACTION$getSoftphoneConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=24&amp;ui-opencti-components-openCtiApiHandler.OpenCtiApiHandler.getSoftphoneConfig=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">10064000000b4d26a4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/ctipage-307" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">Lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">vw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIframeOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIframeOrigin</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m3M0000000COoQAM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/ctipage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/ctipage-308" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">Lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">vw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIframeOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIframeOrigin</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m3M0000000COoQAM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/ctipage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Short Sleep" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="04. Search Customer" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
          <stringProp name="TestPlan.comments">&quot;term&quot;:&quot;</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=25&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1-311" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1159;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.MRUCacheController/ACTION$getGlobalMrus&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;maxResults&quot;:200,&quot;lastTenMrus&quot;:null}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=25&amp;ui-search-components-forcesearch-sgdp.MRUCache.getGlobalMrus=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">16571000000f8d906f</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=26&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1&amp;ui-search-components-forcesearch-typeaheaddataprovider.TypeAheadDataProvider.getTypeaheadItems=1-313" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1137;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.experiment.ExperimentController/ACTION$startExperiment&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;searchDialogSessionId&quot;:&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33&quot;}},{&quot;id&quot;:&quot;1239;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.typeaheaddataprovider.TypeAheadDataProviderController/ACTION$getTypeaheadItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeMap&quot;:{&quot;color&quot;:&quot;7F8DE1&quot;,&quot;icon&quot;:&quot;${scheme}://alpha--qaall.my.salesforce.com/img/icon/t4v35/standard/account_120.png&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;label&quot;:&quot;חשבון&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;cacheable&quot;:&quot;Y&quot;,&quot;disambiguationField&quot;:&quot;toLabel(RecordType.Name) Name__l&quot;,&quot;id&quot;:&quot;Account&quot;,&quot;fields&quot;:&quot;Name\nRecordType.Name\ntoLabel(RecordType.Name) Name__l\nBilling_Account_Number__c\nParent_Customer_ID__c\nRecordTypeId\nLastModifiedDate\nCreatedDate\nId\nLastModifiedById\nSystemModstamp&quot;,&quot;labelPlural&quot;:&quot;חשבונות&quot;,&quot;entity&quot;:&quot;Account&quot;},&quot;context&quot;:{},&quot;maxResults&quot;:5,&quot;term&quot;:&quot;${term}&quot;,&quot;scopeNames&quot;:[],&quot;scopeSetTypes&quot;:[&quot;SMART_SCOPE&quot;],&quot;queryMaps&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;toLabel(RecordType.Name) Name__l&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;חשבונות&quot;,&quot;label&quot;:&quot;חשבון&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;אנשי קשר&quot;,&quot;label&quot;:&quot;איש קשר&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Title&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;לידים&quot;,&quot;label&quot;:&quot;ליד&quot;}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=26&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1&amp;ui-search-components-forcesearch-typeaheaddataprovider.TypeAheadDataProvider.getTypeaheadItems=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1829700000097b10f1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=27&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-314" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1318;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:7949,\&quot;duration\&quot;:488,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:3678,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;932;a\&quot;,\&quot;945;a\&quot;,\&quot;946;a\&quot;,\&quot;949;a\&quot;,\&quot;950;a\&quot;,\&quot;951;a\&quot;,\&quot;956;a\&quot;,\&quot;973;a\&quot;,\&quot;974;a\&quot;,\&quot;979;a\&quot;],\&quot;requestId\&quot;:\&quot;796500000084fe7dba\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3169,\&quot;xhrDuration\&quot;:416,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:7967,\&quot;fetchStart\&quot;:7967,\&quot;requestStart\&quot;:7972,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:411,\&quot;transferSize\&quot;:4220,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:419}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;932;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:42,\&quot;duration\&quot;:465},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;945;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:467},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;946;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;949;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;950;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;951;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:469}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453194255,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:2,\&quot;actionId\&quot;:\&quot;956;a\&quot;,\&quot;tSending\&quot;:1605453194746,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453194746,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:491,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1605453194747,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:7946,\&quot;duration\&quot;:503,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:3678,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;932;a\&quot;,\&quot;945;a\&quot;,\&quot;946;a\&quot;,\&quot;949;a\&quot;,\&quot;950;a\&quot;,\&quot;951;a\&quot;,\&quot;956;a\&quot;,\&quot;973;a\&quot;,\&quot;974;a\&quot;,\&quot;979;a\&quot;],\&quot;requestId\&quot;:\&quot;796500000084fe7dba\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3169,\&quot;xhrDuration\&quot;:416,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:7967,\&quot;fetchStart\&quot;:7967,\&quot;requestStart\&quot;:7972,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:411,\&quot;transferSize\&quot;:4220,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:419}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;932;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:42,\&quot;duration\&quot;:465},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;945;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:467},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;946;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;949;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;950;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;951;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7949,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;956;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:15,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:488},{\&quot;ts\&quot;:7956,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;973;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:globalCreate\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:8,\&quot;serverTime\&quot;:{\&quot;total\&quot;:5,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:483},{\&quot;ts\&quot;:7957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;974;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:7,\&quot;serverTime\&quot;:{\&quot;total\&quot;:6,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:482},{\&quot;ts\&quot;:7961,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;979;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:userProfileCardData\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:478}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453194255,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:2,\&quot;actionId\&quot;:\&quot;956;a\&quot;,\&quot;tSending\&quot;:1605453194746,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453194758,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:503,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;etSendDataWait\&quot;:12,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1605453194759,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:8494,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-notification\&quot;,\&quot;attributes\&quot;:{\&quot;data\&quot;:{\&quot;notificationSupported\&quot;:true,\&quot;defaultNotificationPerm\&quot;:\&quot;denied\&quot;,\&quot;userSetNotificationPerm\&quot;:\&quot;denied\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;session-timeout-notification\&quot;,\&quot;scope\&quot;:\&quot;sessiontimeoutwarn\&quot;},\&quot;sequence\&quot;:10,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:7954,\&quot;duration\&quot;:770,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:7954,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():300\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:768}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:3678,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;932;a\&quot;,\&quot;945;a\&quot;,\&quot;946;a\&quot;,\&quot;949;a\&quot;,\&quot;950;a\&quot;,\&quot;951;a\&quot;,\&quot;956;a\&quot;,\&quot;973;a\&quot;,\&quot;974;a\&quot;,\&quot;979;a\&quot;],\&quot;requestId\&quot;:\&quot;796500000084fe7dba\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3169,\&quot;xhrDuration\&quot;:416,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:7967,\&quot;fetchStart\&quot;:7967,\&quot;requestStart\&quot;:7972,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:411,\&quot;transferSize\&quot;:4220,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:419},{\&quot;ts\&quot;:7971,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:15,\&quot;requestLength\&quot;:1025,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;982;a\&quot;],\&quot;requestId\&quot;:\&quot;7971000000a62c3b65\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1498,\&quot;xhrDuration\&quot;:456,\&quot;xhrStall\&quot;:69,\&quot;startTime\&quot;:7971,\&quot;fetchStart\&quot;:7971,\&quot;requestStart\&quot;:8040,\&quot;dns\&quot;:12,\&quot;tcp\&quot;:16,\&quot;ttfb\&quot;:99,\&quot;transfer\&quot;:357,\&quot;transferSize\&quot;:2549,\&quot;serverTime\&quot;:26,\&quot;xhrDelay\&quot;:31},\&quot;duration\&quot;:487},{\&quot;ts\&quot;:7970,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:14,\&quot;requestLength\&quot;:1071,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;981;a\&quot;],\&quot;requestId\&quot;:\&quot;7970000000d2879e86\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1716,\&quot;xhrDuration\&quot;:502,\&quot;xhrStall\&quot;:48,\&quot;startTime\&quot;:7971,\&quot;fetchStart\&quot;:7971,\&quot;requestStart\&quot;:8019,\&quot;dns\&quot;:13,\&quot;tcp\&quot;:15,\&quot;ttfb\&quot;:99,\&quot;transfer\&quot;:403,\&quot;transferSize\&quot;:2778,\&quot;serverTime\&quot;:51,\&quot;xhrDelay\&quot;:15},\&quot;duration\&quot;:517},{\&quot;ts\&quot;:7992,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:620,\&quot;startTime\&quot;:7993,\&quot;fetchStart\&quot;:8608,\&quot;requestStart\&quot;:8608,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:615,\&quot;ttfb\&quot;:619,\&quot;transfer\&quot;:1,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:807485,\&quot;decodedBodySize\&quot;:807485,\&quot;serverTime\&quot;:95,\&quot;defs\&quot;:[\&quot;markup://one:onePreloads\&quot;],\&quot;xhrDelay\&quot;:28},\&quot;duration\&quot;:648},{\&quot;ts\&quot;:7967,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:12,\&quot;requestLength\&quot;:104095,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;931;a\&quot;],\&quot;requestId\&quot;:\&quot;7967000000a8e234d9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1507,\&quot;xhrDuration\&quot;:728,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:7970,\&quot;fetchStart\&quot;:7970,\&quot;requestStart\&quot;:7987,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:4,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:709,\&quot;transferSize\&quot;:2559,\&quot;serverTime\&quot;:220,\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:734},{\&quot;ts\&quot;:7970,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:13,\&quot;requestLength\&quot;:1060,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;966;a\&quot;],\&quot;requestId\&quot;:\&quot;797000000035d29b91\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7110,\&quot;xhrDuration\&quot;:738,\&quot;xhrStall\&quot;:33,\&quot;startTime\&quot;:7970,\&quot;fetchStart\&quot;:7970,\&quot;requestStart\&quot;:8003,\&quot;dns\&quot;:4,\&quot;tcp\&quot;:8,\&quot;ttfb\&quot;:35,\&quot;transfer\&quot;:703,\&quot;transferSize\&quot;:8283,\&quot;serverTime\&quot;:318,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:739}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;932;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:42,\&quot;duration\&quot;:465},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;945;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:467},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;946;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;949;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;950;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;951;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;956;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:472},{\&quot;ts\&quot;:7956,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;973;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:globalCreate\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:8,\&quot;serverTime\&quot;:{\&quot;total\&quot;:5,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:483},{\&quot;ts\&quot;:7957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;974;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:7,\&quot;serverTime\&quot;:{\&quot;total\&quot;:6,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:482},{\&quot;ts\&quot;:7961,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;979;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:userProfileCardData\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:478},{\&quot;ts\&quot;:7962,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;982;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getPermissions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:7,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:26,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:7,\&quot;duration\&quot;:504},{\&quot;ts\&quot;:7962,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;981;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:6,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:26,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:51,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:526},{\&quot;ts\&quot;:7967,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;931;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:59,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:220,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:736}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453194263,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:1,\&quot;actionId\&quot;:\&quot;966;a\&quot;,\&quot;fetchedScopeMaps\&quot;:13,\&quot;tSending\&quot;:1605453195027,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453195032,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:769,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;scopeTypes:FILTER,SMART_SCOPE\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453195033,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:7952,\&quot;duration\&quot;:783,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:7954,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():300\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:768}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:11,\&quot;requestLength\&quot;:3678,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;932;a\&quot;,\&quot;945;a\&quot;,\&quot;946;a\&quot;,\&quot;949;a\&quot;,\&quot;950;a\&quot;,\&quot;951;a\&quot;,\&quot;956;a\&quot;,\&quot;973;a\&quot;,\&quot;974;a\&quot;,\&quot;979;a\&quot;],\&quot;requestId\&quot;:\&quot;796500000084fe7dba\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3169,\&quot;xhrDuration\&quot;:416,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:7967,\&quot;fetchStart\&quot;:7967,\&quot;requestStart\&quot;:7972,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:411,\&quot;transferSize\&quot;:4220,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:419},{\&quot;ts\&quot;:7971,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:15,\&quot;requestLength\&quot;:1025,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;982;a\&quot;],\&quot;requestId\&quot;:\&quot;7971000000a62c3b65\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1498,\&quot;xhrDuration\&quot;:456,\&quot;xhrStall\&quot;:69,\&quot;startTime\&quot;:7971,\&quot;fetchStart\&quot;:7971,\&quot;requestStart\&quot;:8040,\&quot;dns\&quot;:12,\&quot;tcp\&quot;:16,\&quot;ttfb\&quot;:99,\&quot;transfer\&quot;:357,\&quot;transferSize\&quot;:2549,\&quot;serverTime\&quot;:26,\&quot;xhrDelay\&quot;:31},\&quot;duration\&quot;:487},{\&quot;ts\&quot;:7970,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:14,\&quot;requestLength\&quot;:1071,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;981;a\&quot;],\&quot;requestId\&quot;:\&quot;7970000000d2879e86\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1716,\&quot;xhrDuration\&quot;:502,\&quot;xhrStall\&quot;:48,\&quot;startTime\&quot;:7971,\&quot;fetchStart\&quot;:7971,\&quot;requestStart\&quot;:8019,\&quot;dns\&quot;:13,\&quot;tcp\&quot;:15,\&quot;ttfb\&quot;:99,\&quot;transfer\&quot;:403,\&quot;transferSize\&quot;:2778,\&quot;serverTime\&quot;:51,\&quot;xhrDelay\&quot;:15},\&quot;duration\&quot;:517},{\&quot;ts\&quot;:7992,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:5,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:620,\&quot;startTime\&quot;:7993,\&quot;fetchStart\&quot;:8608,\&quot;requestStart\&quot;:8608,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:615,\&quot;ttfb\&quot;:619,\&quot;transfer\&quot;:1,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:807485,\&quot;decodedBodySize\&quot;:807485,\&quot;serverTime\&quot;:95,\&quot;defs\&quot;:[\&quot;markup://one:onePreloads\&quot;],\&quot;xhrDelay\&quot;:28},\&quot;duration\&quot;:648},{\&quot;ts\&quot;:7967,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:12,\&quot;requestLength\&quot;:104095,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;931;a\&quot;],\&quot;requestId\&quot;:\&quot;7967000000a8e234d9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1507,\&quot;xhrDuration\&quot;:728,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:7970,\&quot;fetchStart\&quot;:7970,\&quot;requestStart\&quot;:7987,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:4,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:709,\&quot;transferSize\&quot;:2559,\&quot;serverTime\&quot;:220,\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:734},{\&quot;ts\&quot;:7970,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:13,\&quot;requestLength\&quot;:1060,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;966;a\&quot;],\&quot;requestId\&quot;:\&quot;797000000035d29b91\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7110,\&quot;xhrDuration\&quot;:738,\&quot;xhrStall\&quot;:33,\&quot;startTime\&quot;:7970,\&quot;fetchStart\&quot;:7970,\&quot;requestStart\&quot;:8003,\&quot;dns\&quot;:4,\&quot;tcp\&quot;:8,\&quot;ttfb\&quot;:35,\&quot;transfer\&quot;:703,\&quot;transferSize\&quot;:8283,\&quot;serverTime\&quot;:318,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:739}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;932;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:42,\&quot;duration\&quot;:465},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;945;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:467},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;946;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;949;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;950;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;951;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:469},{\&quot;ts\&quot;:7965,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;956;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:472},{\&quot;ts\&quot;:7956,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;973;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:globalCreate\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:8,\&quot;serverTime\&quot;:{\&quot;total\&quot;:5,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:483},{\&quot;ts\&quot;:7957,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;974;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;uns:notifications\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:7,\&quot;serverTime\&quot;:{\&quot;total\&quot;:6,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:482},{\&quot;ts\&quot;:7961,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;979;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:userProfileCardData\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:77,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:478},{\&quot;ts\&quot;:7962,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;982;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getPermissions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:7,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:26,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:7,\&quot;duration\&quot;:504},{\&quot;ts\&quot;:7962,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;981;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;setup:gear\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:6,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:26,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:51,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:526},{\&quot;ts\&quot;:7967,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;931;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:59,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:220,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:736},{\&quot;ts\&quot;:7954,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;966;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:6,\&quot;enqueueWait\&quot;:10,\&quot;serverTime\&quot;:{\&quot;total\&quot;:300,\&quot;db\&quot;:17,\&quot;xhrServerTime\&quot;:318,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:15,\&quot;duration\&quot;:771}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453194263,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:1,\&quot;actionId\&quot;:\&quot;966;a\&quot;,\&quot;fetchedScopeMaps\&quot;:13,\&quot;tSending\&quot;:1605453195027,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453195041,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:778,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;0:scopeTypes:FILTER,SMART_SCOPE\&quot;],\&quot;etSendDataWait\&quot;:13,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453195044,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:16411,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1605453202720,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-input\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:11,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16558,\&quot;duration\&quot;:1,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453202868,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:0,\&quot;tEnd\&quot;:1605453202868,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:0,\&quot;requestId\&quot;:\&quot;cacheBridge:86249ac3-ba79-9970-d04c-3e77dbbfdc90\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;86249ac3-ba79-9970-d04c-3e77dbbfdc90\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1605453202869,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16568,\&quot;duration\&quot;:875,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:16571,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:25,\&quot;requestLength\&quot;:1051,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1159;a\&quot;],\&quot;requestId\&quot;:\&quot;16571000000f8d906f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:77901,\&quot;xhrDuration\&quot;:859,\&quot;xhrStall\&quot;:11,\&quot;startTime\&quot;:16571,\&quot;fetchStart\&quot;:16571,\&quot;requestStart\&quot;:16582,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:848,\&quot;transferSize\&quot;:79016,\&quot;serverTime\&quot;:498,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:861}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453202877,\&quot;cacheHit\&quot;:false,\&quot;tSending\&quot;:1605453203750,\&quot;etDataCopy\&quot;:2,\&quot;tEnd\&quot;:1605453203752,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:875,\&quot;requestId\&quot;:\&quot;cacheBridge:b35a1e95-b6c4-0bc7-6632-a6bf309a812e\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;b35a1e95-b6c4-0bc7-6632-a6bf309a812e\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1605453203753,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16562,\&quot;duration\&quot;:883,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:16571,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:25,\&quot;requestLength\&quot;:1051,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1159;a\&quot;],\&quot;requestId\&quot;:\&quot;16571000000f8d906f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:77901,\&quot;xhrDuration\&quot;:859,\&quot;xhrStall\&quot;:11,\&quot;startTime\&quot;:16571,\&quot;fetchStart\&quot;:16571,\&quot;requestStart\&quot;:16582,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:848,\&quot;transferSize\&quot;:79016,\&quot;serverTime\&quot;:498,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:861}],\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getGlobalMrus\&quot;,\&quot;ts\&quot;:16564,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;MRUCC.getGlobalMrus():464\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;duration\&quot;:880}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453202868,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:0,\&quot;tEnd\&quot;:1605453203755,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:887,\&quot;requestId\&quot;:\&quot;cacheBridge:86249ac3-ba79-9970-d04c-3e77dbbfdc90\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;86249ac3-ba79-9970-d04c-3e77dbbfdc90\&quot;,\&quot;params\&quot;:[\&quot;0:maxResults:200\&quot;,\&quot;1:term:\&quot;,\&quot;2:limitGlobalRequests:true\&quot;],\&quot;actionId\&quot;:\&quot;1159;a\&quot;,\&quot;fetchedGlobalMrus\&quot;:200,\&quot;fetchedGlobalMruNumEntities\&quot;:2,\&quot;deletedGlobalMrus\&quot;:0,\&quot;tSending\&quot;:1605453203749,\&quot;etDataCopy\&quot;:1,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1605453203756,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16557,\&quot;duration\&quot;:896,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:16571,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:25,\&quot;requestLength\&quot;:1051,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1159;a\&quot;],\&quot;requestId\&quot;:\&quot;16571000000f8d906f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:77901,\&quot;xhrDuration\&quot;:859,\&quot;xhrStall\&quot;:11,\&quot;startTime\&quot;:16571,\&quot;fetchStart\&quot;:16571,\&quot;requestStart\&quot;:16582,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:848,\&quot;transferSize\&quot;:79016,\&quot;serverTime\&quot;:498,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:861}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:16564,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1159;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.MRUCacheController/ACTION$getGlobalMrus\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:6,\&quot;serverTime\&quot;:{\&quot;total\&quot;:464,\&quot;db\&quot;:15,\&quot;xhrServerTime\&quot;:497,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:884}],\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getGlobalMrus\&quot;,\&quot;ts\&quot;:16564,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;MRUCC.getGlobalMrus():464\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;duration\&quot;:880}]},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;\&quot;,\&quot;startTime\&quot;:1605453202866,\&quot;suggestionId\&quot;:\&quot;b16a9fd5-0536-d6ae-8381-829dc7eb9b07\&quot;,\&quot;endTime\&quot;:1605453203761,\&quot;totalTime\&quot;:895,\&quot;numTotalItems\&quot;:5,\&quot;numGlobalItems\&quot;:5,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1605453203763,\&quot;queryLength\&quot;:0,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:17504,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:1,\&quot;numChars\&quot;:0,\&quot;numResults\&quot;:5,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Custom Log\&quot;,\&quot;recordId\&quot;:\&quot;a623M0000005x9xQAA\&quot;},{\&quot;position\&quot;:2,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Custom Log\&quot;,\&quot;recordId\&quot;:\&quot;a623M0000005x9wQAA\&quot;},{\&quot;position\&quot;:3,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Custom Log\&quot;,\&quot;recordId\&quot;:\&quot;a623M0000005x9rQAA\&quot;},{\&quot;position\&quot;:4,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Custom Log\&quot;,\&quot;recordId\&quot;:\&quot;a623M0000005x9mQAA\&quot;},{\&quot;position\&quot;:5,\&quot;resultType\&quot;:\&quot;MRU\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;Custom Log\&quot;,\&quot;recordId\&quot;:\&quot;a623M0000005x9hQAA\&quot;}],\&quot;suggestionId\&quot;:\&quot;b16a9fd5-0536-d6ae-8381-829dc7eb9b07\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33_1\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1605453203814,\&quot;queryLength\&quot;:0,\&quot;term\&quot;:\&quot;\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:12,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16544,\&quot;duration\&quot;:1161,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:16571,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:25,\&quot;requestLength\&quot;:1051,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;1159;a\&quot;],\&quot;requestId\&quot;:\&quot;16571000000f8d906f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:77901,\&quot;xhrDuration\&quot;:859,\&quot;xhrStall\&quot;:11,\&quot;startTime\&quot;:16571,\&quot;fetchStart\&quot;:16571,\&quot;requestStart\&quot;:16582,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:848,\&quot;transferSize\&quot;:79016,\&quot;serverTime\&quot;:498,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:861}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:16564,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1159;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.MRUCacheController/ACTION$getGlobalMrus\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:6,\&quot;serverTime\&quot;:{\&quot;total\&quot;:464,\&quot;db\&quot;:15,\&quot;xhrServerTime\&quot;:497,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:884}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:144,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:5,\&quot;createTimeTotal\&quot;:144}]}],\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getGlobalMrus\&quot;,\&quot;ts\&quot;:16564,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;MRUCC.getGlobalMrus():464\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;duration\&quot;:880}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideInputOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;\&quot;,\&quot;crossEntityTypeAheadEnabled\&quot;:true,\&quot;startTime\&quot;:1605453202854,\&quot;suggestionId\&quot;:\&quot;b16a9fd5-0536-d6ae-8381-829dc7eb9b07\&quot;,\&quot;headerActionTime\&quot;:1,\&quot;mruTime\&quot;:895,\&quot;endTime\&quot;:1605453204014,\&quot;totalTime\&quot;:1160,\&quot;numTotalItems\&quot;:5,\&quot;numGlobalMruItems\&quot;:5,\&quot;numGlobalMruItemsRequested\&quot;:5,\&quot;numScopedMruItems\&quot;:0,\&quot;numScopedMruItemsRequested\&quot;:0,\&quot;numScopedTypeAheadItems\&quot;:0,\&quot;numHeaderActionItems\&quot;:0,\&quot;numFooterActionItems\&quot;:0,\&quot;typeAheadQueryId\&quot;:\&quot;\&quot;,\&quot;hasSearchTerm\&quot;:false,\&quot;records\&quot;:[{\&quot;id\&quot;:\&quot;a623M0000005x9xQAA\&quot;,\&quot;type\&quot;:\&quot;MRU_GLOBAL\&quot;},{\&quot;id\&quot;:\&quot;a623M0000005x9wQAA\&quot;,\&quot;type\&quot;:\&quot;MRU_GLOBAL\&quot;},{\&quot;id\&quot;:\&quot;a623M0000005x9rQAA\&quot;,\&quot;type\&quot;:\&quot;MRU_GLOBAL\&quot;},{\&quot;id\&quot;:\&quot;a623M0000005x9mQAA\&quot;,\&quot;type\&quot;:\&quot;MRU_GLOBAL\&quot;},{\&quot;id\&quot;:\&quot;a623M0000005x9hQAA\&quot;,\&quot;type\&quot;:\&quot;MRU_GLOBAL\&quot;}],\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktopDataProvider\&quot;,\&quot;time\&quot;:1605453204015,\&quot;queryLength\&quot;:0,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:18230,\&quot;duration\&quot;:4,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453204541,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1605453204541,\&quot;etDataCopy\&quot;:2,\&quot;tEnd\&quot;:1605453204543,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:2,\&quot;requestId\&quot;:\&quot;cacheBridge:2c56f3b4-0a79-1c77-342b-f05de039f7e7\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;2c56f3b4-0a79-1c77-342b-f05de039f7e7\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:MASKED_SEARCH_INFO\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1605453204544,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:18230,\&quot;duration\&quot;:17,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;startTime\&quot;:1605453204541,\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;endTime\&quot;:1605453204556,\&quot;totalTime\&quot;:15,\&quot;numTotalItems\&quot;:0,\&quot;numGlobalItems\&quot;:0,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:true,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1605453204557,\&quot;queryLength\&quot;:12,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:18259,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:2,\&quot;numChars\&quot;:12,\&quot;numResults\&quot;:2,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;},{\&quot;position\&quot;:2,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;}],\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33_2\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1605453204570,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:13,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:18252,\&quot;duration\&quot;:524,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:18297,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:26,\&quot;requestLength\&quot;:3344,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1137;a\&quot;,\&quot;1239;a\&quot;],\&quot;requestId\&quot;:\&quot;1829700000097b10f1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2854,\&quot;xhrDuration\&quot;:467,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:18298,\&quot;fetchStart\&quot;:18298,\&quot;requestStart\&quot;:18303,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:462,\&quot;transferSize\&quot;:4044,\&quot;serverTime\&quot;:145,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:471}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:18297,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1137;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:145,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:472}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:18,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideTypeAheadOptions\&quot;,\&quot;attributes\&quot;:{\&quot;startTime\&quot;:1605453204563,\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;actionId\&quot;:\&quot;1239;a\&quot;,\&quot;isFromStorage\&quot;:false,\&quot;queryId\&quot;:\&quot;mc6hdd9sxwrz\&quot;,\&quot;searchTimes\&quot;:[\&quot;Scope:Account\&quot;,\&quot;SSU.getRecordSuggestions():114\&quot;,\&quot;SFU.addFields:0\&quot;],\&quot;serverTime\&quot;:114,\&quot;numItems\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;endTime\&quot;:1605453205085,\&quot;totalTime\&quot;:522,\&quot;transportTime\&quot;:408,\&quot;sourceCmp\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;time\&quot;:1605453205086,\&quot;queryLength\&quot;:12,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:18782,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:3,\&quot;numChars\&quot;:12,\&quot;numResults\&quot;:7,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;},{\&quot;position\&quot;:2,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;},{\&quot;position\&quot;:3,\&quot;resultType\&quot;:\&quot;TYPEAHEAD\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;,\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;},{\&quot;position\&quot;:4,\&quot;resultType\&quot;:\&quot;TYPEAHEAD\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000069DNPQA2\&quot;},{\&quot;position\&quot;:5,\&quot;resultType\&quot;:\&quot;TYPEAHEAD\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000069DNQQA2\&quot;},{\&quot;position\&quot;:6,\&quot;resultType\&quot;:\&quot;TYPEAHEAD\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;איש קשר\&quot;,\&quot;recordId\&quot;:\&quot;0033M000004nCsyQAE\&quot;},{\&quot;position\&quot;:7,\&quot;resultType\&quot;:\&quot;TYPEAHEAD\&quot;,\&quot;tableEnumOrId\&quot;:\&quot;חשבון\&quot;,\&quot;recordId\&quot;:\&quot;0013M000006EiB2QAK\&quot;}],\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33_3\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1605453205092,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:14,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:18220,\&quot;duration\&quot;:728,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:18297,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:26,\&quot;requestLength\&quot;:3344,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1137;a\&quot;,\&quot;1239;a\&quot;],\&quot;requestId\&quot;:\&quot;1829700000097b10f1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2854,\&quot;xhrDuration\&quot;:467,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:18298,\&quot;fetchStart\&quot;:18298,\&quot;requestStart\&quot;:18303,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:462,\&quot;transferSize\&quot;:4044,\&quot;serverTime\&quot;:145,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:471}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:18297,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1137;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:8,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:145,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:472}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:136,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:7,\&quot;createTimeTotal\&quot;:136}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideInputOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;crossEntityTypeAheadEnabled\&quot;:true,\&quot;startTime\&quot;:1605453204531,\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;headerActionTime\&quot;:0,\&quot;mruTime\&quot;:15,\&quot;typeAheadTime\&quot;:522,\&quot;typeAheadFromStorage\&quot;:false,\&quot;typeAheadActionId\&quot;:\&quot;1239;a\&quot;,\&quot;endTime\&quot;:1605453205258,\&quot;totalTime\&quot;:727,\&quot;numTotalItems\&quot;:7,\&quot;numGlobalMruItems\&quot;:0,\&quot;numGlobalMruItemsRequested\&quot;:5,\&quot;numScopedMruItems\&quot;:0,\&quot;numScopedMruItemsRequested\&quot;:0,\&quot;numScopedTypeAheadItems\&quot;:5,\&quot;numHeaderActionItems\&quot;:2,\&quot;numFooterActionItems\&quot;:0,\&quot;typeAheadQueryId\&quot;:\&quot;mc6hdd9sxwrz\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;records\&quot;:[{\&quot;id\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;type\&quot;:\&quot;TYPEAHEAD_SCOPED\&quot;},{\&quot;id\&quot;:\&quot;0013M0000069DNPQA2\&quot;,\&quot;type\&quot;:\&quot;TYPEAHEAD_SCOPED\&quot;},{\&quot;id\&quot;:\&quot;0013M0000069DNQQA2\&quot;,\&quot;type\&quot;:\&quot;TYPEAHEAD_SCOPED\&quot;},{\&quot;id\&quot;:\&quot;0033M000004nCsyQAE\&quot;,\&quot;type\&quot;:\&quot;TYPEAHEAD_SCOPED\&quot;},{\&quot;id\&quot;:\&quot;0013M000006EiB2QAK\&quot;,\&quot;type\&quot;:\&quot;TYPEAHEAD_SCOPED\&quot;}],\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktopDataProvider\&quot;,\&quot;time\&quot;:1605453205259,\&quot;queryLength\&quot;:12,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453205429,\&quot;value\&quot;:[128]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453205429,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453205429,\&quot;value\&quot;:[0]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=27&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">191290000003bf575c</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/ctipage-315" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">Lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m3M0000000COoQAM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">vw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfdcIframeOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIframeOrigin</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/ctipage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-316" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">vw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-317" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQG4KSDBWhg7dKpp67CZ5cr.tb8Cf2wsJmshRwNeObHWFrdNcyx75FP4uH3Yk8Tj74GmiZ9XQG3G9.P023Id9UkWm_WHq</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=28&amp;ui-federated-search-components-federatedsearch-externalscopeslistdataprovider.ExternalScopesListDataProvider.getScopeMaps=1-319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1801;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=28&amp;ui-federated-search-components-federatedsearch-externalscopeslistdataprovider.ExternalScopesListDataProvider.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">213050000001341410</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/apex/ctipage-320" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="mode" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">mode</stringProp>
                  <stringProp name="Argument.value">Lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ltn_app_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ltn_app_id</stringProp>
                  <stringProp name="Argument.value">06m3M0000000COoQAM</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="isdtp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isdtp</stringProp>
                  <stringProp name="Argument.value">vw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfdcIframeOrigin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfdcIframeOrigin</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="clc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nonce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">nonce</stringProp>
                  <stringProp name="Argument.value">8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/apex/ctipage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=29&amp;ui-search-components-forcesearch-topresultsdataprovider.TopResultsDataProvider.getItems=1-321" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2005;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;topResultsRequestModel&quot;:{&quot;scopeNames&quot;:[],&quot;term&quot;:&quot;${term}&quot;,&quot;pageSize&quot;:5,&quot;enableRowActions&quot;:false,&quot;withSingleSOSL&quot;:true,&quot;withEntityPrediction&quot;:true,&quot;batchSize&quot;:3,&quot;batchingTimeout&quot;:2500,&quot;scopeMap&quot;:{&quot;type&quot;:&quot;TOP_RESULTS&quot;,&quot;namespace&quot;:&quot;&quot;,&quot;label&quot;:&quot;תוצאות עליונות&quot;,&quot;labelPlural&quot;:&quot;תוצאות עליונות&quot;,&quot;resultsCmp&quot;:&quot;forceSearch:resultsTopResults&quot;},&quot;context&quot;:{&quot;disableSpellCorrection&quot;:false,&quot;disableIntentQuery&quot;:false,&quot;searchDialogSessionId&quot;:&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33&quot;,&quot;searchSource&quot;:&quot;INPUT_DESKTOP&quot;,&quot;scopeSets&quot;:{&quot;SMART_SCOPE&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;labelPlural&quot;:&quot;חשבונות&quot;,&quot;fields&quot;:&quot;Name\nRecordType.Name\ntoLabel(RecordType.Name) Name__l\nBilling_Account_Number__c\nParent_Customer_ID__c\nRecordTypeId\nLastModifiedDate\nCreatedDate\nId\nLastModifiedById\nSystemModstamp&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;labelPlural&quot;:&quot;אנשי קשר&quot;,&quot;fields&quot;:&quot;Account.RecordTypeId\ntoLabel(Account.RecordType.Name) Name__l\nLastModifiedDate\nAccountId\nFirstName\nID_Type__c\nAccount.RecordType.Name\nMiddleName\nName\nSystemModstamp\nSuffix\nRecordTypeId\nCreatedDate\nAccount.Name\nId\nLastName\nLastModifiedById\nId_Number__c\ntoLabel(ID_Type__c) ID_Type__c__l&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;labelPlural&quot;:&quot;לידים&quot;,&quot;fields&quot;:&quot;Status\ntoLabel(Status) Status__l\nLastModifiedDate\nCompany\nEmail\nFirstName\nTitle\nMiddleName\nMobilePhone\nName\nSystemModstamp\nSuffix\nOwnerId\nPhone\nRecordTypeId\nCreatedDate\nOwner.NameOrAlias\nId\nLastName\nLastModifiedById&quot;}]}},&quot;withSpellCorrection&quot;:true,&quot;withIntentQuery&quot;:true}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=29&amp;ui-search-components-forcesearch-topresultsdataprovider.TopResultsDataProvider.getItems=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2164800000010970a1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__jquery-328" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__jquery</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/sfdcLogger-331" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/sfdcLogger</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/iwsprescript-330" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/iwsprescript</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__softphone_connector_core-329" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__softphone_connector_core</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/iwsstyle-332" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/iwsstyle</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=30&amp;ui-force-components-controllers-lists-listViewManagerGrid.ListViewManagerGrid.getRecordLayoutComponent=1-333" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2179;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Account&quot;,&quot;listViewIdOrName&quot;:&quot;__SearchResult&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:false,&quot;isSearch&quot;:true},&quot;layoutType&quot;:&quot;SEARCH&quot;,&quot;layoutMode&quot;:&quot;VIEW&quot;,&quot;inContextOfComponent&quot;:&quot;force:listViewManagerGrid&quot;,&quot;enableMassActions&quot;:true,&quot;enableRowErrors&quot;:false,&quot;useHoversForLookup&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=30&amp;ui-force-components-controllers-lists-listViewManagerGrid.ListViewManagerGrid.getRecordLayoutComponent=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">22827000000eae594f</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=31&amp;ui-force-components-controllers-lists-listViewManagerGrid.ListViewManagerGrid.getRecordLayoutComponent=1-334" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2210;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Contact&quot;,&quot;listViewIdOrName&quot;:&quot;__SearchResult&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:false,&quot;isSearch&quot;:true},&quot;layoutType&quot;:&quot;SEARCH&quot;,&quot;layoutMode&quot;:&quot;VIEW&quot;,&quot;inContextOfComponent&quot;:&quot;force:listViewManagerGrid&quot;,&quot;enableMassActions&quot;:true,&quot;enableRowErrors&quot;:false,&quot;useHoversForLookup&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=31&amp;ui-force-components-controllers-lists-listViewManagerGrid.ListViewManagerGrid.getRecordLayoutComponent=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">22903000000de6f9f4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=32&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-336" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2482;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[],&quot;entityNames&quot;:[&quot;Opportunity&quot;,&quot;User&quot;,&quot;Case&quot;,&quot;Group&quot;,&quot;ContentDocument&quot;,&quot;Topic&quot;,&quot;Knowledge__kav&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=32&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">244030000001d65621</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=33&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-337" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2733;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:20403,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;aura:html\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;context\&quot;:{},\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;},\&quot;sequence\&quot;:15,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:20411,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;method\&quot;:\&quot;click\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;type\&quot;:\&quot;SEARCH_OPTION\&quot;,\&quot;prescoping\&quot;:false,\&quot;suggestionId\&quot;:\&quot;0c7b7888-775e-8d80-f02a-14cbb3ff2f51\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33_3\&quot;,\&quot;position\&quot;:1,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1605453206720,\&quot;queryLength\&quot;:12,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-mru-action-item\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:16,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:20467,\&quot;duration\&quot;:15512,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:2,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:20467,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:onboardingManager\&quot;,\&quot;markup://one:onboardingManagerLibPrivate\&quot;,\&quot;markup://one:onboardingManagerHelper\&quot;,\&quot;markup://one:unsupportedContainer\&quot;,\&quot;markup://one:unsupportedDetectorIpad\&quot;,\&quot;markup://one:unsupportedDetectorUiWebView\&quot;,\&quot;markup://one:onePreloads\&quot;,\&quot;markup://opencti:openCtiApiHandler\&quot;,\&quot;markup://opencti:clickToDialApiHandler\&quot;,\&quot;markup://ui:abstractList\&quot;,\&quot;markup://ui:autocompleteList\&quot;,\&quot;markup://ui:autocompleteOption\&quot;,\&quot;markup://forceSearch:inputDesktopOption\&quot;,\&quot;markup://ui:outputRichText\&quot;],\&quot;pageCounter\&quot;:2,\&quot;phase\&quot;:\&quot;navFromPage\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:17,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:20892,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab0\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:false}},\&quot;sequence\&quot;:18,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:20971,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab0\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:true}},\&quot;sequence\&quot;:19,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:21051,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-opened\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTab-opened\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer-logTabTransaction\&quot;,\&quot;context\&quot;:{\&quot;numSubtabsInWorkspace\&quot;:0,\&quot;numLoadedSubtabsInWorkspace\&quot;:0,\&quot;numTotalWorkspaces\&quot;:1,\&quot;numTotalSubtabs\&quot;:0,\&quot;numTotalLoadedWorkspaces\&quot;:1,\&quot;numTotalLoadedSubtabs\&quot;:0,\&quot;numTotalPinnedTabs\&quot;:0,\&quot;isIE11\&quot;:false,\&quot;customAppId\&quot;:\&quot;06m3M0000000COoQAM\&quot;,\&quot;customAppDevName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;isActive\&quot;:true,\&quot;isSubtab\&quot;:false,\&quot;source\&quot;:\&quot;USERACTION\&quot;,\&quot;workspaceId\&quot;:\&quot;ctab0\&quot;,\&quot;numTotalTabs\&quot;:1,\&quot;numTotalLoadedTabs\&quot;:1}},\&quot;sequence\&quot;:20,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21161,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453207471,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1605453207472,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453207472,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:951864ca-4e4b-0867-09f7-8df17aac6d10\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;951864ca-4e4b-0867-09f7-8df17aac6d10\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1605453207472,\&quot;searchActivity\&quot;:{\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:747,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21167,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453207477,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1605453207478,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453207478,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:6eaa3bb7-f0df-06b8-33fc-57a74ce10029\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;6eaa3bb7-f0df-06b8-33fc-57a74ce10029\&quot;,\&quot;params\&quot;:[\&quot;scopeTypes:SMART_SCOPE\&quot;,\&quot;entityNames:FeedPost\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453207479,\&quot;searchActivity\&quot;:{\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:754,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21161,\&quot;duration\&quot;:12,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8}]},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesList-permsAndPrefs-scopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;time\&quot;:1605453207484,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:759,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21129,\&quot;duration\&quot;:56,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getInitialScope\&quot;,\&quot;ts\&quot;:21183,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:1}]},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-init\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;time\&quot;:1605453207496,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:771,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21511,\&quot;duration\&quot;:5,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-scopes-context\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1605453207826,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;99734488-aad5-686f-240a-22109b6f20c5\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:1101,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:20421,\&quot;duration\&quot;:1114,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:21078,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:227},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getInitialScope\&quot;,\&quot;ts\&quot;:21183,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:1},{\&quot;ns\&quot;:\&quot;navigateToComponent\&quot;,\&quot;name\&quot;:\&quot;usage\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:20470,\&quot;context\&quot;:{\&quot;targetComponent\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:20473,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:26},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:21039,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:38}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:552,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:workspace2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:155},{\&quot;name\&quot;:\&quot;laf:pageHost\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:63},{\&quot;name\&quot;:\&quot;one:consoleTab\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:107},{\&quot;name\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:220},{\&quot;name\&quot;:\&quot;forceSearch:scopesListPlaceholder\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:7}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-stats\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:20468,\&quot;context\&quot;:{\&quot;recordCount\&quot;:128,\&quot;subscriptionCount\&quot;:2,\&quot;snapshotSubscriptionCount\&quot;:0,\&quot;watchSubscriptionCount\&quot;:2}}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-initSearch\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;time\&quot;:1605453207845,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;99734488-aad5-686f-240a-22109b6f20c5\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:1120,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21567,\&quot;duration\&quot;:80,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:66,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:66}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-search\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1605453207957,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:1232,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21643,\&quot;duration\&quot;:592,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:21648,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:29,\&quot;requestLength\&quot;:4277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2005;a\&quot;],\&quot;requestId\&quot;:\&quot;2164800000010970a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7845,\&quot;xhrDuration\&quot;:579,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:21648,\&quot;fetchStart\&quot;:21648,\&quot;requestStart\&quot;:21654,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:573,\&quot;transferSize\&quot;:9131,\&quot;serverTime\&quot;:258,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:582}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideResults\&quot;,\&quot;attributes\&quot;:{\&quot;scopeNames\&quot;:[],\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;enableRowActions\&quot;:false,\&quot;withSingleSOSL\&quot;:true,\&quot;withEntityPrediction\&quot;:true,\&quot;batchSize\&quot;:3,\&quot;batchingTimeout\&quot;:2500,\&quot;searchTimes\&quot;:[\&quot;SEU.getSearchableEntitiesName():0\&quot;,\&quot;SEP.getPredictedEntities():47\&quot;,\&quot;TRDP.getScopeMapsToSearch():0\&quot;,\&quot;TRDP.getItems()search:189\&quot;,\&quot;TRDP.getItems():236\&quot;,\&quot;XHR.duration:589\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;time\&quot;:1605453208543,\&quot;queryLength\&quot;:12,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:22822,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;sortBy\&quot;:\&quot;__relevancy__\&quot;,\&quot;queryId\&quot;:\&quot;gckk2ldmqoze\&quot;,\&quot;numResults\&quot;:4,\&quot;queryIds\&quot;:[\&quot;gckk2ldmqoze\&quot;],\&quot;page\&quot;:1,\&quot;inMultiScope\&quot;:true,\&quot;resultType\&quot;:\&quot;KEYWORD_RESULTS\&quot;,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1605453209133,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:2408,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-grid-lvm\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:21,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:22892,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;sortBy\&quot;:\&quot;__relevancy__\&quot;,\&quot;queryId\&quot;:\&quot;-1x64e83l60g2s\&quot;,\&quot;numResults\&quot;:1,\&quot;queryIds\&quot;:[\&quot;-1x64e83l60g2s\&quot;],\&quot;page\&quot;:1,\&quot;inMultiScope\&quot;:true,\&quot;resultType\&quot;:\&quot;KEYWORD_RESULTS\&quot;,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1605453209203,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:2478,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-grid-lvm\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:22,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:23297,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-43514b50614e3378766267645249453234754b3237773d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:23714,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Contact-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-356b3261452b7a63754f4a31536a626f7449584e77413d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:24037,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:4,\&quot;queryId\&quot;:\&quot;gckk2ldmqoze\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:13|RCC.buildSearchRecords():0|RCC.buildScopedResponse():13|RCC.buildSearchRequest():0|SS.runSearch():72|RCC.getRecords():85\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1357,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-1x64e83l60g2s\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:15|RCC.buildSearchRecords():0|RCC.buildScopedResponse():15|RCC.buildSearchRequest():0|SS.runSearch():64|RCC.getRecords():80\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:1467,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:2},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;tnb9p9j16ixc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;queryIds\&quot;:[\&quot;gckk2ldmqoze\&quot;,\&quot;-1x64e83l60g2s\&quot;,\&quot;tnb9p9j16ixc\&quot;],\&quot;inMultiScope\&quot;:false,\&quot;numResults\&quot;:5,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1605453210347,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3622,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-multi-scope\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:23,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21635,\&quot;duration\&quot;:2420,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:22260,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1358},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection2\&quot;,\&quot;ts\&quot;:22528,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1468},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23500,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2183:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:97},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23882,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2420:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:84}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:21648,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:29,\&quot;requestLength\&quot;:4277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2005;a\&quot;],\&quot;requestId\&quot;:\&quot;2164800000010970a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7845,\&quot;xhrDuration\&quot;:579,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:21648,\&quot;fetchStart\&quot;:21648,\&quot;requestStart\&quot;:21654,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:573,\&quot;transferSize\&quot;:9131,\&quot;serverTime\&quot;:258,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:582},{\&quot;ts\&quot;:22827,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:30,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2179;a\&quot;],\&quot;requestId\&quot;:\&quot;22827000000eae594f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18480,\&quot;xhrDuration\&quot;:465,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:22827,\&quot;fetchStart\&quot;:22827,\&quot;requestStart\&quot;:22832,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:459,\&quot;transferSize\&quot;:19796,\&quot;serverTime\&quot;:71,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:466},{\&quot;ts\&quot;:22904,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2210;a\&quot;],\&quot;requestId\&quot;:\&quot;22903000000de6f9f4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20428,\&quot;xhrDuration\&quot;:401,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:22905,\&quot;fetchStart\&quot;:22905,\&quot;requestStart\&quot;:22909,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:397,\&quot;transferSize\&quot;:21830,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:408},\&quot;duration\&quot;:809}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:21643,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2005;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:238,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:258,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:601},{\&quot;ts\&quot;:22789,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2179;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:37,\&quot;serverTime\&quot;:{\&quot;total\&quot;:46,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:304,\&quot;duration\&quot;:814},{\&quot;ts\&quot;:22885,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2210;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:18,\&quot;serverTime\&quot;:{\&quot;total\&quot;:52,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:76,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:267,\&quot;duration\&quot;:1098}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:763,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:473},{\&quot;name\&quot;:\&quot;rl-Contact-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-356b3261452b7a63754f4a31536a626f7449584e77413d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:48},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-43514b50614e3378766267645249453234754b3237773d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:62},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:9,\&quot;createTimeTotal\&quot;:98},{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:13,\&quot;createTimeTotal\&quot;:57}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPT\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1605453207945,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:2,\&quot;totalTime\&quot;:2401,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:589,\&quot;serverTime\&quot;:236,\&quot;networkTime\&quot;:353,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:2,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:188,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:1812},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:4,\&quot;queryId\&quot;:\&quot;gckk2ldmqoze\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:13|RCC.buildSearchRecords():0|RCC.buildScopedResponse():13|RCC.buildSearchRequest():0|SS.runSearch():72|RCC.getRecords():85\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1357,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-1x64e83l60g2s\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:15|RCC.buildSearchRecords():0|RCC.buildScopedResponse():15|RCC.buildSearchRequest():0|SS.runSearch():64|RCC.getRecords():80\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:1467,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:2},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;tnb9p9j16ixc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:589,\&quot;serverTime\&quot;:236,\&quot;startTime\&quot;:5,\&quot;networkTime\&quot;:353,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():0|SEP.getPredictedEntities():47|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:189|TRDP.getItems():236|XHR.duration:589|LVS.getListViewDefinition:28|RCC.buildSearchRecords():0|RCC.buildScopedResponse():28|RCC.buildSearchRequest():0|SS.runSearch():159|RCC.getRecords():188\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:2,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:188,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;0\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;47\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;189\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;236\&quot;,\&quot;XHR_duration\&quot;:\&quot;589\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;28\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;28\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;159\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;188\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1605453210364,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3639,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:20412,\&quot;duration\&quot;:3658,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:21078,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:227},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getInitialScope\&quot;,\&quot;ts\&quot;:21183,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:1},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:22260,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1358},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection2\&quot;,\&quot;ts\&quot;:22528,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1468},{\&quot;ns\&quot;:\&quot;navigateToComponent\&quot;,\&quot;name\&quot;:\&quot;usage\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:20470,\&quot;context\&quot;:{\&quot;targetComponent\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:20473,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:26},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:21039,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:38},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23500,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2183:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:97},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23882,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2420:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:84}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:21307,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:28,\&quot;requestLength\&quot;:1087,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1801;a\&quot;],\&quot;requestId\&quot;:\&quot;213050000001341410\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1201,\&quot;xhrDuration\&quot;:394,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:21308,\&quot;fetchStart\&quot;:21308,\&quot;requestStart\&quot;:21328,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:374,\&quot;transferSize\&quot;:2252,\&quot;serverTime\&quot;:31,\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:402},{\&quot;ts\&quot;:21648,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:29,\&quot;requestLength\&quot;:4277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2005;a\&quot;],\&quot;requestId\&quot;:\&quot;2164800000010970a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7845,\&quot;xhrDuration\&quot;:579,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:21648,\&quot;fetchStart\&quot;:21648,\&quot;requestStart\&quot;:21654,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:573,\&quot;transferSize\&quot;:9131,\&quot;serverTime\&quot;:258,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:582},{\&quot;ts\&quot;:22827,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:30,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2179;a\&quot;],\&quot;requestId\&quot;:\&quot;22827000000eae594f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18480,\&quot;xhrDuration\&quot;:465,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:22827,\&quot;fetchStart\&quot;:22827,\&quot;requestStart\&quot;:22832,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:459,\&quot;transferSize\&quot;:19796,\&quot;serverTime\&quot;:71,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:466},{\&quot;ts\&quot;:22904,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2210;a\&quot;],\&quot;requestId\&quot;:\&quot;22903000000de6f9f4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20428,\&quot;xhrDuration\&quot;:401,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:22905,\&quot;fetchStart\&quot;:22905,\&quot;requestStart\&quot;:22909,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:397,\&quot;transferSize\&quot;:21830,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:408},\&quot;duration\&quot;:809}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:21206,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1801;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:99,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:31,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:505},{\&quot;ts\&quot;:21296,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1841;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:9,\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:418},{\&quot;ts\&quot;:21539,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1985;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:2,\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:177},{\&quot;ts\&quot;:21643,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2005;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:238,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:258,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:601},{\&quot;ts\&quot;:22789,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2179;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:37,\&quot;serverTime\&quot;:{\&quot;total\&quot;:46,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:304,\&quot;duration\&quot;:814},{\&quot;ts\&quot;:22885,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2210;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:18,\&quot;serverTime\&quot;:{\&quot;total\&quot;:52,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:76,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:267,\&quot;duration\&quot;:1098}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:1381,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:workspace2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:155},{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:473},{\&quot;name\&quot;:\&quot;one:consoleTab\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:107},{\&quot;name\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:220},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:9,\&quot;createTimeTotal\&quot;:98}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-stats\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:20468,\&quot;context\&quot;:{\&quot;recordCount\&quot;:128,\&quot;subscriptionCount\&quot;:2,\&quot;snapshotSubscriptionCount\&quot;:0,\&quot;watchSubscriptionCount\&quot;:2}}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPTE2E\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1605453207945,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:2,\&quot;totalTime\&quot;:2401,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:589,\&quot;serverTime\&quot;:236,\&quot;networkTime\&quot;:353,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:2,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:188,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:1812},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:4,\&quot;queryId\&quot;:\&quot;gckk2ldmqoze\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:13|RCC.buildSearchRecords():0|RCC.buildScopedResponse():13|RCC.buildSearchRequest():0|SS.runSearch():72|RCC.getRecords():85\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1357,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-1x64e83l60g2s\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:15|RCC.buildSearchRecords():0|RCC.buildScopedResponse():15|RCC.buildSearchRequest():0|SS.runSearch():64|RCC.getRecords():80\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:1467,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:2},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;tnb9p9j16ixc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:589,\&quot;serverTime\&quot;:236,\&quot;startTime\&quot;:5,\&quot;networkTime\&quot;:353,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():0|SEP.getPredictedEntities():47|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:189|TRDP.getItems():236|XHR.duration:589|LVS.getListViewDefinition:28|RCC.buildSearchRecords():0|RCC.buildScopedResponse():28|RCC.buildSearchRequest():0|SS.runSearch():159|RCC.getRecords():188\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:2,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:188,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;0\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;47\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;189\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;236\&quot;,\&quot;XHR_duration\&quot;:\&quot;589\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;28\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;28\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;159\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;188\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1605453210381,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3656,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24076,\&quot;duration\&quot;:1,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453210387,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1605453210387,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1605453210387,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:0,\&quot;requestId\&quot;:\&quot;cacheBridge:16e3f0b1-34b8-4163-4bfe-8af78feb67ea\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;16e3f0b1-34b8-4163-4bfe-8af78feb67ea\&quot;,\&quot;params\&quot;:[\&quot;entityNames:Account,Contact,Lead\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453210387,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3662,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24075,\&quot;duration\&quot;:4,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesList-getScopeMaps-entityPrediction\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;time\&quot;:1605453210390,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3665,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:21156,\&quot;duration\&quot;:2926,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getInitialScope\&quot;,\&quot;ts\&quot;:21183,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:1},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:22260,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1358},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection2\&quot;,\&quot;ts\&quot;:22528,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1468},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showScopeList\&quot;,\&quot;ts\&quot;:21156,\&quot;context\&quot;:{\&quot;numResults\&quot;:5,\&quot;scopeSetType\&quot;:\&quot;PRIMARY\&quot;,\&quot;times\&quot;:null},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:2925},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23500,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2183:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:97},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23882,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2420:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:84}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:21307,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:28,\&quot;requestLength\&quot;:1087,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1801;a\&quot;],\&quot;requestId\&quot;:\&quot;213050000001341410\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1201,\&quot;xhrDuration\&quot;:394,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:21308,\&quot;fetchStart\&quot;:21308,\&quot;requestStart\&quot;:21328,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:374,\&quot;transferSize\&quot;:2252,\&quot;serverTime\&quot;:31,\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:402},{\&quot;ts\&quot;:21648,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:29,\&quot;requestLength\&quot;:4277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2005;a\&quot;],\&quot;requestId\&quot;:\&quot;2164800000010970a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7845,\&quot;xhrDuration\&quot;:579,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:21648,\&quot;fetchStart\&quot;:21648,\&quot;requestStart\&quot;:21654,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:573,\&quot;transferSize\&quot;:9131,\&quot;serverTime\&quot;:258,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:582},{\&quot;ts\&quot;:22827,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:30,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2179;a\&quot;],\&quot;requestId\&quot;:\&quot;22827000000eae594f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18480,\&quot;xhrDuration\&quot;:465,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:22827,\&quot;fetchStart\&quot;:22827,\&quot;requestStart\&quot;:22832,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:459,\&quot;transferSize\&quot;:19796,\&quot;serverTime\&quot;:71,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:466},{\&quot;ts\&quot;:22904,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2210;a\&quot;],\&quot;requestId\&quot;:\&quot;22903000000de6f9f4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20428,\&quot;xhrDuration\&quot;:401,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:22905,\&quot;fetchStart\&quot;:22905,\&quot;requestStart\&quot;:22909,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:397,\&quot;transferSize\&quot;:21830,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:408},\&quot;duration\&quot;:809}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:21206,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1801;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:99,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:31,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:505},{\&quot;ts\&quot;:21296,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1841;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:9,\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:418},{\&quot;ts\&quot;:21539,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1985;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:2,\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:177},{\&quot;ts\&quot;:21643,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2005;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:238,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:258,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:601},{\&quot;ts\&quot;:22789,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2179;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:37,\&quot;serverTime\&quot;:{\&quot;total\&quot;:46,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:304,\&quot;duration\&quot;:814},{\&quot;ts\&quot;:22885,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2210;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:18,\&quot;serverTime\&quot;:{\&quot;total\&quot;:52,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:76,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:267,\&quot;duration\&quot;:1098}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:836,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:13,\&quot;createTimeTotal\&quot;:57},{\&quot;name\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:66},{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:473},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:9,\&quot;createTimeTotal\&quot;:98},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-43514b50614e3378766267645249453234754b3237773d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:62}]}]},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showScopeListAndFetch\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;time\&quot;:1605453210391,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3666,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24073,\&quot;duration\&quot;:154,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:95,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:scopesListSection\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:71},{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:5,\&quot;createTimeTotal\&quot;:24}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-scopeItemsReorderingOn\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1605453210537,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:3812,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24023,\&quot;duration\&quot;:445,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:101,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:scopesListSection\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:71},{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:5,\&quot;createTimeTotal\&quot;:24},{\&quot;name\&quot;:\&quot;lightning:buttonStateful\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6},{\&quot;name\&quot;:\&quot;lightning:helptext\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getPermsAndPrefs\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453210333,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1605453210334,\&quot;etDataCopy\&quot;:0,\&quot;etSendDataWait\&quot;:444,\&quot;tEnd\&quot;:1605453210778,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getPermsAndPrefs\&quot;,\&quot;etTransaction\&quot;:445,\&quot;requestId\&quot;:\&quot;forceSearchFeedback:2498:0\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchFeedback\&quot;,\&quot;requestCmpId\&quot;:\&quot;2498:0\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;time\&quot;:1605453210779,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:4054,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24017,\&quot;duration\&quot;:1201,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:24017,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():408\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1201}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:24403,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:32,\&quot;requestLength\&quot;:2123,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;2482;a\&quot;],\&quot;requestId\&quot;:\&quot;244030000001d65621\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4310,\&quot;xhrDuration\&quot;:806,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:24403,\&quot;fetchStart\&quot;:24403,\&quot;requestStart\&quot;:24407,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:802,\&quot;transferSize\&quot;:5426,\&quot;serverTime\&quot;:436,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:807}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:101,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:scopesListSection\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:71},{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:5,\&quot;createTimeTotal\&quot;:24},{\&quot;name\&quot;:\&quot;lightning:buttonStateful\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6},{\&quot;name\&quot;:\&quot;lightning:helptext\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453210323,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:2,\&quot;actionId\&quot;:\&quot;2482;a\&quot;,\&quot;fetchedScopeMaps\&quot;:7,\&quot;tSending\&quot;:1605453211527,\&quot;etDataCopy\&quot;:1,\&quot;tEnd\&quot;:1605453211528,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1205,\&quot;requestId\&quot;:\&quot;forceSearchFeedback:2498:0\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchFeedback\&quot;,\&quot;requestCmpId\&quot;:\&quot;2498:0\&quot;,\&quot;params\&quot;:[\&quot;entityNames:Account,Opportunity,Contact,Lead,User,Case,Group,ContentDocument,Topic,Knowledge__kav\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453211528,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:4803,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:24014,\&quot;duration\&quot;:1207,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:24017,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():408\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1201}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:24403,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:32,\&quot;requestLength\&quot;:2123,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;2482;a\&quot;],\&quot;requestId\&quot;:\&quot;244030000001d65621\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4310,\&quot;xhrDuration\&quot;:806,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:24403,\&quot;fetchStart\&quot;:24403,\&quot;requestStart\&quot;:24407,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:802,\&quot;transferSize\&quot;:5426,\&quot;serverTime\&quot;:436,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:807}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:24018,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2482;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:384,\&quot;serverTime\&quot;:{\&quot;total\&quot;:409,\&quot;db\&quot;:11,\&quot;xhrServerTime\&quot;:435,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:5,\&quot;duration\&quot;:1200}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:101,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:scopesListSection\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:71},{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:5,\&quot;createTimeTotal\&quot;:24},{\&quot;name\&quot;:\&quot;lightning:buttonStateful\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6},{\&quot;name\&quot;:\&quot;lightning:helptext\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:0}]}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1605453210323,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:2,\&quot;actionId\&quot;:\&quot;2482;a\&quot;,\&quot;fetchedScopeMaps\&quot;:7,\&quot;tSending\&quot;:1605453211527,\&quot;etDataCopy\&quot;:1,\&quot;tEnd\&quot;:1605453211531,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1208,\&quot;requestId\&quot;:\&quot;forceSearchFeedback:2498:0\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchFeedback\&quot;,\&quot;requestCmpId\&quot;:\&quot;2498:0\&quot;,\&quot;params\&quot;:[\&quot;0:entityNames:Account,Opportunity,Contact,Lead,User,Case,Group,ContentDocument,Topic,Knowledge__kav\&quot;],\&quot;etSendDataWait\&quot;:3,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1605453211531,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:4806,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:20400,\&quot;duration\&quot;:4866,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;pageContext\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;pageUrl\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:20468,\&quot;duration\&quot;:4801,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:21078,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:227},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getPermsAndPrefs\&quot;,\&quot;ts\&quot;:21161,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:4},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-scopesList-getScopeMaps\&quot;,\&quot;ts\&quot;:21165,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:8},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getInitialScope\&quot;,\&quot;ts\&quot;:21183,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:1},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:22260,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1358},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection2\&quot;,\&quot;ts\&quot;:22528,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1468},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showScopeList\&quot;,\&quot;ts\&quot;:21156,\&quot;context\&quot;:{\&quot;numResults\&quot;:5,\&quot;scopeSetType\&quot;:\&quot;PRIMARY\&quot;,\&quot;times\&quot;:null},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;duration\&quot;:2925},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:24017,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():408\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:1201},{\&quot;ns\&quot;:\&quot;navigateToComponent\&quot;,\&quot;name\&quot;:\&quot;usage\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:20470,\&quot;context\&quot;:{\&quot;targetComponent\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:20473,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:26},{\&quot;ns\&quot;:\&quot;newRouting\&quot;,\&quot;name\&quot;:\&quot;generateRoute: platform\&quot;,\&quot;ts\&quot;:21039,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:platformRouter\&quot;,\&quot;duration\&quot;:38},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23500,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2183:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:97},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:23882,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;2420:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:84}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:21307,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:28,\&quot;requestLength\&quot;:1087,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;1801;a\&quot;],\&quot;requestId\&quot;:\&quot;213050000001341410\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1201,\&quot;xhrDuration\&quot;:394,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:21308,\&quot;fetchStart\&quot;:21308,\&quot;requestStart\&quot;:21328,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:374,\&quot;transferSize\&quot;:2252,\&quot;serverTime\&quot;:31,\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:402},{\&quot;ts\&quot;:21648,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:29,\&quot;requestLength\&quot;:4277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2005;a\&quot;],\&quot;requestId\&quot;:\&quot;2164800000010970a1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:7845,\&quot;xhrDuration\&quot;:579,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:21648,\&quot;fetchStart\&quot;:21648,\&quot;requestStart\&quot;:21654,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:573,\&quot;transferSize\&quot;:9131,\&quot;serverTime\&quot;:258,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:582},{\&quot;ts\&quot;:22827,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:30,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2179;a\&quot;],\&quot;requestId\&quot;:\&quot;22827000000eae594f\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18480,\&quot;xhrDuration\&quot;:465,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:22827,\&quot;fetchStart\&quot;:22827,\&quot;requestStart\&quot;:22832,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:459,\&quot;transferSize\&quot;:19796,\&quot;serverTime\&quot;:71,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:466},{\&quot;ts\&quot;:22904,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:31,\&quot;requestLength\&quot;:2449,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2210;a\&quot;],\&quot;requestId\&quot;:\&quot;22903000000de6f9f4\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20428,\&quot;xhrDuration\&quot;:401,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:22905,\&quot;fetchStart\&quot;:22905,\&quot;requestStart\&quot;:22909,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:397,\&quot;transferSize\&quot;:21830,\&quot;serverTime\&quot;:77,\&quot;xhrDelay\&quot;:408},\&quot;duration\&quot;:809},{\&quot;ts\&quot;:24403,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:32,\&quot;requestLength\&quot;:2123,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;2482;a\&quot;],\&quot;requestId\&quot;:\&quot;244030000001d65621\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4310,\&quot;xhrDuration\&quot;:806,\&quot;xhrStall\&quot;:4,\&quot;startTime\&quot;:24403,\&quot;fetchStart\&quot;:24403,\&quot;requestStart\&quot;:24407,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:4,\&quot;transfer\&quot;:802,\&quot;transferSize\&quot;:5426,\&quot;serverTime\&quot;:436,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:807}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:21206,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1801;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:99,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:31,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:505},{\&quot;ts\&quot;:21296,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1841;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:2,\&quot;enqueueWait\&quot;:9,\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:418},{\&quot;ts\&quot;:21539,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;1985;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:2,\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:177},{\&quot;ts\&quot;:21643,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2005;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:4,\&quot;serverTime\&quot;:{\&quot;total\&quot;:238,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:258,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:13,\&quot;duration\&quot;:601},{\&quot;ts\&quot;:22789,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2179;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:37,\&quot;serverTime\&quot;:{\&quot;total\&quot;:46,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:304,\&quot;duration\&quot;:814},{\&quot;ts\&quot;:22885,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2210;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:18,\&quot;serverTime\&quot;:{\&quot;total\&quot;:52,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:76,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:267,\&quot;duration\&quot;:1098},{\&quot;ts\&quot;:24018,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2482;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:384,\&quot;serverTime\&quot;:{\&quot;total\&quot;:409,\&quot;db\&quot;:11,\&quot;xhrServerTime\&quot;:435,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:5,\&quot;duration\&quot;:1200}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:1482,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:workspace2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:155},{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:473},{\&quot;name\&quot;:\&quot;one:consoleTab\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:107},{\&quot;name\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:220},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:9,\&quot;createTimeTotal\&quot;:98}]}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:4800,\&quot;previousPage\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}},\&quot;attributes\&quot;:{\&quot;darkModeEnabled\&quot;:false,\&quot;numTotalLoadedTabs\&quot;:1,\&quot;numTotalWorkspaces\&quot;:1,\&quot;numTotalSubtabs\&quot;:0,\&quot;listViewIdOrName\&quot;:\&quot;__SearchResult\&quot;,\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:4800,\&quot;defaultCmp\&quot;:[],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;rrh.useLWCRelatedLists\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:4,\&quot;misses\&quot;:0},\&quot;total\&quot;:{\&quot;hits\&quot;:4,\&quot;misses\&quot;:0}},\&quot;complexity\&quot;:null,\&quot;sequence\&quot;:3,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:25270,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:workspace2\&quot;,\&quot;markup://one:consoleTabset\&quot;,\&quot;markup://one:consoleTabItem\&quot;,\&quot;markup://one:searchContentPlugin\&quot;,\&quot;markup://one:iframeContentPlugin\&quot;,\&quot;markup://one:editablePagePlugin\&quot;,\&quot;markup://force:brandBandPageContainer\&quot;,\&quot;markup://force:brandBand\&quot;,\&quot;markup://one:workspaceTabWrapper\&quot;,\&quot;markup://forceSearch:baseSearchPage\&quot;,\&quot;markup://forceSearch:searchPage\&quot;,\&quot;markup://forceSearch:searchPageDesktop\&quot;,\&quot;markup://one:consoleTab\&quot;,\&quot;markup://forceSearch:scopes\&quot;,\&quot;markup://forceSearch:scopesListContainer\&quot;,\&quot;markup://forceSearch:scopesDataProvider\&quot;,\&quot;markup://forceSearch:scopesListDataProvider\&quot;,\&quot;markup://forceSearch:scopesList\&quot;,\&quot;markup://runtime_search_federated:externalScopes\&quot;,\&quot;markup://runtime_search_federated:externalScopesList\&quot;,\&quot;markup://runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;markup://aura:label\&quot;,\&quot;markup://forceSearch:resultsRegion\&quot;,\&quot;markup://forceSearch:viewportChangeHandler\&quot;,\&quot;markup://forceSearch:resultsFilters\&quot;,\&quot;markup://lightning:button\&quot;,\&quot;markup://forceSearch:scopesListPlaceholder\&quot;,\&quot;markup://forceSearch:baseResults\&quot;,\&quot;markup://forceSearch:resultsMultiScope\&quot;,\&quot;markup://forceSearch:resultsTopResults\&quot;,\&quot;markup://forceSearch:multiScopesDataProvider\&quot;,\&quot;markup://force:listViewPlaceholder\&quot;,\&quot;markup://forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;markup://forceSearch:scopedResults\&quot;,\&quot;markup://forceSearch:resultsGridLVM\&quot;,\&quot;markup://forceSearch:resultsGridLVMDataManager\&quot;,\&quot;markup://search_lightning:layoutStore\&quot;,\&quot;markup://forceSearch:searchResultsGridHeader\&quot;,\&quot;markup://forceSearch:searchResultsSummary\&quot;,\&quot;markup://forceSearch:resultsHeaderFilters\&quot;,\&quot;markup://force:listViewManagerLayoutHandlingConfiguration\&quot;,\&quot;markup://force:listViewManagerDisplayDataConfiguration\&quot;,\&quot;markup://force:listViewManagerGrid\&quot;,\&quot;markup://force:listViewManagerSettingsMenuConfiguration\&quot;,\&quot;markup://force:listViewManagerSettingsMenuOptionConfiguration\&quot;,\&quot;markup://force:listViewManagerGridFooter\&quot;,\&quot;markup://force:statusIcon\&quot;,\&quot;markup://force:inlineEditGrid\&quot;,\&quot;layout://rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-43514b50614e3378766267645249453234754b3237773d3d.c\&quot;,\&quot;markup://force:inlineEditGridStencil\&quot;,\&quot;markup://ui:dataTableHeader\&quot;,\&quot;markup://force:virtualSelectionColumn\&quot;,\&quot;markup://force:virtualCheckbox\&quot;,\&quot;markup://force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;markup://force:inlineEditKeyNavCell\&quot;,\&quot;markup://force:virtualRowNumberCell\&quot;,\&quot;markup://force:outputLookup\&quot;,\&quot;markup://force:virtualAction\&quot;,\&quot;layout://rl-Contact-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-356b3261452b7a63754f4a31536a626f7449584e77413d3d.c\&quot;,\&quot;markup://force:outputPicklist\&quot;,\&quot;markup://search_lightning:searchMoreBox\&quot;,\&quot;markup://forceSearch:feedback\&quot;,\&quot;markup://forceSearch:scopesListSection\&quot;,\&quot;markup://forceSearch:scopeItem\&quot;,\&quot;markup://force:walkthrough\&quot;,\&quot;markup://lightning:buttonStateful\&quot;,\&quot;markup://lightning:helptext\&quot;],\&quot;pageCounter\&quot;:3,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:24,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211581,\&quot;value\&quot;:[128,128]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211581,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211581,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211577,\&quot;value\&quot;:[4865]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211579,\&quot;value\&quot;:[57301]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211579,\&quot;value\&quot;:[13114]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453206779,\&quot;value\&quot;:[1393590]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453206779,\&quot;value\&quot;:[277148]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453206779,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453211580,\&quot;value\&quot;:[4800]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=33&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">25278000000958c03e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__jquery-338" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__jquery</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__softphone_connector_core-339" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__softphone_connector_core</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-340" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--softphone-it.visualforce.com/resource/1604338975000/softphone_it__jquery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-341" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--softphone-it.visualforce.com/resource/1604338975000/softphone_it__softphone_connector_core</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=34&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-342" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2749;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;],&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=34&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">2629800000003ebffc</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-343" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQNd_7G1PoBr4ANV9bIdE1jZQpMHur9Y46O9PiUPH0KCI6idsNoyfyeldb3lBmuzrV.ffP70i7whTAkfHMiXtJLc8iG5l</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--softphone-it.visualforce.com/resource/1604338975000/softphone_it__jquery</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-344" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQNd_7G1PoBr4ANV9bIdE1jZQpMHur9Y46O9PiUPH0KCI6idsNoyfyeldb3lBmuzrV.ffP70i7whTAkfHMiXtJLc8iG5l</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--softphone-it.visualforce.com/resource/1604338975000/softphone_it__softphone_connector_core</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__jquery-345" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__jquery</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604338975000/softphone_it__softphone_connector_core-346" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--softphone-it.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604338975000/softphone_it__softphone_connector_core</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604913866000/iwsscript-349" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604913866000/iwsscript</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604853796000/iwsutil-351" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604853796000/iwsutil</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/wdeintegration-350" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/wdeintegration</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/logo_softphone-353" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/logo_softphone</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1604339094000/iwsconfig-352" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.visualforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1604339094000/iwsconfig</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.visualforce.com/apex/ctipage?mode=Lightning&amp;ltn_app_id=06m3M0000000COoQAM&amp;isdtp=vw&amp;sfdcIframeOrigin=${scheme}%3A%2F%2Falpha--qaall.lightning.force.com&amp;clc=1&amp;nonce=8e206cc36cb5959fb32d3442ede281062b3954f82d7bd7ebf053d649d70981e4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Short Sleep" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">5000</stringProp>
        </TestAction>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="05. Customer Details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
          <stringProp name="TestPlan.comments">https://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view   ~&gt; recordId  ~&gt; /lightning/r/Account/${_recordId}/view </stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=35&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-357" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2776;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;0013M000005vACTQA2.undefined.null.null.null.Id,RecordTypeId.VIEW.true.null.null.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=35&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">337490000009295570</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=38&amp;aura.RecordUi.getObjectInfo=1-360" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2937;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getObjectInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;objectApiName&quot;:&quot;Account&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=38&amp;aura.RecordUi.getObjectInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3485800000086536b8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=37&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-359" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2936;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__highlightsPanel_Account___0123z000000pNrQAAU___Compact___View&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=37&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3481000000061cdada</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=36&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-358" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2935;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__flexipage_RecordPage___Consumer_Screen___Account___VIEW&quot;,&quot;adgModuleType&quot;:&quot;template&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=36&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">34802000000f98def6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-361" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">socialRecordAvatarWrapper</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sfa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfa</stringProp>
                  <stringProp name="Argument.value">outputNameWithHierarchyIconAccount,outputNameWithHierarchyIconWrapper</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">943333745</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-362" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://flexipage:recordHomeSimpleViewTemplate2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">UHp1UsK3ijznTGGp7ChBUA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=39&amp;aura.RecordUi.getRecordWithFields=1-363" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2943;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;optionalFields&quot;:[&quot;Account.Id&quot;,&quot;Account.Name&quot;,&quot;Account.Owner.Id&quot;,&quot;Account.Owner.Name&quot;,&quot;Account.OwnerId&quot;,&quot;Account.Phone&quot;,&quot;Account.RecordTypeId&quot;,&quot;Account.SystemModstamp&quot;,&quot;Account.Type&quot;,&quot;Account.vlocity_cmt__Status__c&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=39&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">35719000000f2934e8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=40&amp;aura.Actions.getRecordActions=1-364" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2944;a&quot;,&quot;descriptor&quot;:&quot;aura://ActionsController/ACTION$getRecordActions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordIds&quot;:[&quot;0013M000005vACTQA2&quot;],&quot;sections&quot;:[&quot;PAGE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=40&amp;aura.Actions.getRecordActions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">35725000000abb70e0</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=41&amp;aura.RecordUi.getRecordWithFields=1-365" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2945;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;optionalFields&quot;:[&quot;Account.Id&quot;,&quot;Account.Name&quot;,&quot;Account.RecordTypeId&quot;,&quot;Account.SystemModstamp&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=41&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">358930000001b80b04</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=43&amp;aura.ApexAction.execute=1-367" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2947;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;alp360_LeadController&quot;,&quot;method&quot;:&quot;getDataForConsumerCountLeads&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=43&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3595500000059008fd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=42&amp;aura.ApexAction.execute=1-366" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2946;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;retCustomerData&quot;,&quot;params&quot;:{&quot;accountId&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=42&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">35926000000940805c</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-369" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://c:ALP360_SubTabRedirect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=46&amp;ui-global-components-one-workspaceTabWrapper.WorkspaceTabWrapper.getThemeForEntityApiName=1-372" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3103;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.workspaceTabWrapper.WorkspaceTabWrapperController/ACTION$getThemeForEntityApiName&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityApiName&quot;:&quot;Account&quot;,&quot;recordTypeId&quot;:&quot;0123z000000pNrQAAU&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=46&amp;ui-global-components-one-workspaceTabWrapper.WorkspaceTabWrapper.getThemeForEntityApiName=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3638800000033370f8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-373" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Ebr4Jil7Vde_KOs5ojXMVQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://c:ALP360_SubTabRedirect</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">mGt93fRSj9tvycW8v_p7ig</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=44&amp;aura.ApexAction.execute=1-368" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2948;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;retServiceDetails&quot;,&quot;params&quot;:{&quot;cmpIndex&quot;:1,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=44&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">36075000000c81133d</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=48&amp;aura.ApexAction.execute=1-375" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3145;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_NBOController&quot;,&quot;method&quot;:&quot;retNBOCount&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=48&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3717300000077aa9e9</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=47&amp;aura.ApexAction.execute=1-374" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3144;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;getConsumerCountCases&quot;,&quot;params&quot;:{&quot;serviceName&quot;:&quot;Open_Cases_Counters&quot;,&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=47&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">37152000000b7fb8f6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=49&amp;aura.ApexAction.execute=1-377" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3146;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getHeaderIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorID&quot;:&quot;NEW&quot;,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=49&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">37941000000696a8f7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=50&amp;aura.ApexAction.execute=1-378" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3147;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getHeaderIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorID&quot;:&quot;DIGITAL&quot;,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=50&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">37956000000e69e619</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=51&amp;aura.ApexAction.execute=1-379" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3148;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getHeaderIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorID&quot;:&quot;COMBINED&quot;,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=51&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">37958000000431830e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=45&amp;aura.ApexAction.execute=6&amp;aura.RecordUi.getRecordWithFields=1-371" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;2949;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;Ctrl_OpenScreenPel&quot;,&quot;method&quot;:&quot;invokeNamedCreds&quot;,&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2950;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;retServiceDetails&quot;,&quot;params&quot;:{&quot;cmpIndex&quot;:2,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2951;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;Ctrl_OpenScreenPel&quot;,&quot;method&quot;:&quot;invokeNamedCreds&quot;,&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2952;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;retServiceDetails&quot;,&quot;params&quot;:{&quot;cmpIndex&quot;:3,&quot;customerID&quot;:&quot;0013M000005vACTQA2&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2953;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;Ctrl_OpenScreenPel&quot;,&quot;method&quot;:&quot;invokeNamedCreds&quot;,&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2954;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;retErrorFromMDM&quot;,&quot;params&quot;:{&quot;accountId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;module&quot;:&quot;ALPHA&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;2960;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;fields&quot;:[&quot;Account.Id&quot;,&quot;Account.RecordType.DeveloperName&quot;],&quot;optionalFields&quot;:[&quot;Account.RecordTypeId&quot;,&quot;Account.SystemModstamp&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=45&amp;aura.ApexAction.execute=6&amp;aura.RecordUi.getRecordWithFields=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">363310000008bc2d19</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/hi.svg-380" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/hi.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/check.svg-383" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/check.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/bezeq.svg-384" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/bezeq.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/digital.svg-381" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/digital.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/package.svg-382" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/package.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/pelephone.svg-385" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/pelephone.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1605438227000/alp360_ux_src/assets/icons/view-preview.svg-376" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1605438227000/alp360_ux_src/assets/icons/view-preview.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=52&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-387" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;3149;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:33658,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;context\&quot;:{\&quot;additionalContext\&quot;:\&quot;\&quot;,\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;},\&quot;target\&quot;:\&quot;entity-link\&quot;,\&quot;scope\&quot;:\&quot;inline-edit-grid\&quot;},\&quot;sequence\&quot;:25,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:33696,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;clickSource\&quot;:\&quot;SearchResult\&quot;,\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;isSpellCorrected\&quot;:false,\&quot;destinationRecordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;position\&quot;:1,\&quot;pageNum\&quot;:0,\&quot;numResultsPerPage\&quot;:50,\&quot;numResults\&quot;:4,\&quot;tableEnumOrId\&quot;:\&quot;Account\&quot;,\&quot;queryId\&quot;:\&quot;gckk2ldmqoze\&quot;,\&quot;queryIds\&quot;:[\&quot;gckk2ldmqoze\&quot;],\&quot;sort\&quot;:null,\&quot;inMultiScope\&quot;:true,\&quot;searchDialogSuggestionsListIteration\&quot;:null,\&quot;entityPredictionRequestId\&quot;:\&quot;f5k51qp5zf32\&quot;,\&quot;entityRank\&quot;:1,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1605453220007,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:13282,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-result-item\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:26,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;clickSource&quot;:&quot;SearchResult&quot;,&quot;recordId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;isSpellCorrected&quot;:false,&quot;destinationRecordId&quot;:&quot;0013M000005vACTQA2&quot;,&quot;position&quot;:1,&quot;pageNum&quot;:0,&quot;numResultsPerPage&quot;:50,&quot;numResults&quot;:4,&quot;tableEnumOrId&quot;:&quot;Account&quot;,&quot;queryId&quot;:&quot;gckk2ldmqoze&quot;,&quot;queryIds&quot;:[&quot;gckk2ldmqoze&quot;],&quot;sort&quot;:null,&quot;inMultiScope&quot;:true,&quot;searchDialogSuggestionsListIteration&quot;:null,&quot;entityPredictionRequestId&quot;:&quot;f5k51qp5zf32&quot;,&quot;entityRank&quot;:1,&quot;scrolled&quot;:false,&quot;sourceCmp&quot;:&quot;forceSearch:resultsGridLVM&quot;,&quot;time&quot;:1605453220007,&quot;queryLength&quot;:12,&quot;term&quot;:&quot;MASKED_SEARCH_INFO&quot;,&quot;scopeName&quot;:&quot;Account&quot;,&quot;searchActivity&quot;:{&quot;resultsContainerId&quot;:&quot;0fbb07fc-c5f1-0215-470f-d55c08de1e1a&quot;,&quot;searchId&quot;:&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c&quot;,&quot;searchStartTime&quot;:1605453206725,&quot;searchElapsedTime&quot;:13282,&quot;searchDialogSessionId&quot;:&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33&quot;,&quot;searchSource&quot;:&quot;INPUT_DESKTOP&quot;},&quot;page&quot;:{&quot;appName&quot;:&quot;Alpha_360&quot;,&quot;appType&quot;:&quot;Console&quot;,&quot;appNamespace&quot;:&quot;c&quot;,&quot;location&quot;:&quot;forceSearch:searchPageDesktop&quot;},&quot;cdnEnabled&quot;:true,&quot;uriDefsEnabled&quot;:true,&quot;gates&quot;:{},&quot;topic&quot;:&quot;seclk&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:33739,\&quot;duration\&quot;:13271,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:3,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:34242,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:27,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:34587,\&quot;duration\&quot;:10,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-scopes-context\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1605453220903,\&quot;queryLength\&quot;:12,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;e93670ce-ab00-bfc7-3bc6-32de8d16046e\&quot;,\&quot;searchId\&quot;:\&quot;9597bc32-acaa-5378-d6f3-674aa6f55d6c\&quot;,\&quot;searchStartTime\&quot;:1605453206725,\&quot;searchElapsedTime\&quot;:14178,\&quot;searchDialogSessionId\&quot;:\&quot;2e927e42-485d-5cf5-03db-51e8b1b35c33\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:34682,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab1\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:false}},\&quot;sequence\&quot;:28,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36051,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:workspace2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-load-workspace-info\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-workspace-addWorkspace\&quot;,\&quot;scope\&quot;:\&quot;one-workspaceCollection\&quot;,\&quot;context\&quot;:{\&quot;object\&quot;:\&quot;Account\&quot;,\&quot;hasPinnedRegions\&quot;:false,\&quot;pinnedRegionTemplateName\&quot;:null}},\&quot;sequence\&quot;:29,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36144,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab0\&quot;,\&quot;active\&quot;:false}},\&quot;sequence\&quot;:30,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36159,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab1\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:true}},\&quot;sequence\&quot;:31,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36283,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-opened\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTab-opened\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer-logTabTransaction\&quot;,\&quot;context\&quot;:{\&quot;numSubtabsInWorkspace\&quot;:0,\&quot;numLoadedSubtabsInWorkspace\&quot;:0,\&quot;numTotalWorkspaces\&quot;:2,\&quot;numTotalSubtabs\&quot;:0,\&quot;numTotalLoadedWorkspaces\&quot;:2,\&quot;numTotalLoadedSubtabs\&quot;:0,\&quot;numTotalPinnedTabs\&quot;:0,\&quot;isIE11\&quot;:false,\&quot;customAppId\&quot;:\&quot;06m3M0000000COoQAM\&quot;,\&quot;customAppDevName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;recordKeyPrefix\&quot;:\&quot;001\&quot;,\&quot;isActive\&quot;:true,\&quot;isSubtab\&quot;:false,\&quot;source\&quot;:\&quot;USERACTION\&quot;,\&quot;workspaceId\&quot;:\&quot;ctab1\&quot;,\&quot;numTotalTabs\&quot;:2,\&quot;numTotalLoadedTabs\&quot;:2}},\&quot;sequence\&quot;:32,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36332,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:33,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:36395,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:34,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:39127,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:35,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:33648,\&quot;duration\&quot;:5577,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;entity-link\&quot;,\&quot;scope\&quot;:\&quot;inline-edit-grid\&quot;,\&quot;additionalContext\&quot;:\&quot;\&quot;,\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;pageContext\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;pageUrl\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:39238,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;c:alp360HeaderContainer\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ALP360_SubTabRedirect\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360ErrorHandling\&quot;]}},\&quot;sequence\&quot;:36,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:33740,\&quot;duration\&quot;:5499,\&quot;pageStartTime\&quot;:1605453186309,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:34689,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:15},{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:35904,\&quot;context\&quot;:{\&quot;flexipageName\&quot;:\&quot;0M03M00000006ddSAA\&quot;,\&quot;flexipageType\&quot;:\&quot;RecordPage\&quot;,\&quot;isCustom\&quot;:true,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;flexipage:recordHomeSimpleViewTemplate2\&quot;,\&quot;parentFlexipage\&quot;:\&quot;null\&quot;,\&quot;flexipageRenderer\&quot;:\&quot;LWC\&quot;,\&quot;numberOfFieldInstances\&quot;:0,\&quot;Mode\&quot;:\&quot;View\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:35702,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;objectApiName\&quot;:\&quot;Account\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:35884,\&quot;context\&quot;:{\&quot;objectApiName\&quot;:\&quot;Account\&quot;,\&quot;recordId\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;recordTypeId\&quot;:\&quot;0123z000000pNrQAAU\&quot;}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:33749,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:35,\&quot;requestLength\&quot;:2083,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2776;a\&quot;],\&quot;requestId\&quot;:\&quot;337490000009295570\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2347,\&quot;xhrDuration\&quot;:482,\&quot;xhrStall\&quot;:7,\&quot;startTime\&quot;:33750,\&quot;fetchStart\&quot;:33750,\&quot;requestStart\&quot;:33757,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:7,\&quot;transfer\&quot;:475,\&quot;transferSize\&quot;:3411,\&quot;serverTime\&quot;:67,\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:488},{\&quot;ts\&quot;:34859,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:38,\&quot;requestLength\&quot;:1934,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2937;a\&quot;],\&quot;requestId\&quot;:\&quot;3485800000086536b8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:112296,\&quot;xhrDuration\&quot;:370,\&quot;xhrStall\&quot;:21,\&quot;startTime\&quot;:34860,\&quot;fetchStart\&quot;:34860,\&quot;requestStart\&quot;:34881,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:21,\&quot;transfer\&quot;:349,\&quot;transferSize\&quot;:113976,\&quot;serverTime\&quot;:33,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:372},{\&quot;ts\&quot;:34810,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:37,\&quot;requestLength\&quot;:2225,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2936;a\&quot;],\&quot;requestId\&quot;:\&quot;3481000000061cdada\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20792,\&quot;xhrDuration\&quot;:447,\&quot;xhrStall\&quot;:19,\&quot;startTime\&quot;:34812,\&quot;fetchStart\&quot;:34812,\&quot;requestStart\&quot;:34831,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:2,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:427,\&quot;transferSize\&quot;:22028,\&quot;serverTime\&quot;:104,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:451},{\&quot;ts\&quot;:34802,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:36,\&quot;requestLength\&quot;:2218,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2935;a\&quot;],\&quot;requestId\&quot;:\&quot;34802000000f98def6\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:32414,\&quot;xhrDuration\&quot;:541,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:34803,\&quot;fetchStart\&quot;:34803,\&quot;requestStart\&quot;:34816,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:13,\&quot;transfer\&quot;:528,\&quot;transferSize\&quot;:33827,\&quot;serverTime\&quot;:193,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:544},{\&quot;ts\&quot;:35371,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:8,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:59,\&quot;startTime\&quot;:35371,\&quot;fetchStart\&quot;:35371,\&quot;requestStart\&quot;:35371,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:28,\&quot;transfer\&quot;:31,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:101050,\&quot;decodedBodySize\&quot;:101050,\&quot;serverTime\&quot;:74,\&quot;defs\&quot;:[\&quot;markup://c:alp360Constants\&quot;,\&quot;markup://c:alp360CountCases\&quot;,\&quot;markup://c:alp360CountLeads\&quot;,\&quot;markup://c:alp360CountNbo\&quot;,\&quot;markup://c:alp360CustomerData\&quot;,\&quot;markup://c:alp360DataTableAdw\&quot;,\&quot;markup://c:alp360ErrorHandling\&quot;,\&quot;markup://c:alp360EventLinkType\&quot;,\&quot;markup://c:alp360HeaderContainer\&quot;],\&quot;xhrDelay\&quot;:7},\&quot;duration\&quot;:66},{\&quot;ts\&quot;:35266,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:7,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:415,\&quot;startTime\&quot;:35266,\&quot;fetchStart\&quot;:35266,\&quot;requestStart\&quot;:35284,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:396,\&quot;transferSize\&quot;:14476,\&quot;encodedBodySize\&quot;:13131,\&quot;decodedBodySize\&quot;:13131,\&quot;serverTime\&quot;:17,\&quot;defs\&quot;:[\&quot;markup://force:socialRecordAvatarWrapper\&quot;,\&quot;markup://sfa:outputNameWithHierarchyIconAccount\&quot;,\&quot;markup://sfa:outputNameWithHierarchyIconWrapper\&quot;],\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:419},{\&quot;ts\&quot;:35371,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:9,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:390,\&quot;startTime\&quot;:35371,\&quot;fetchStart\&quot;:35371,\&quot;requestStart\&quot;:35382,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:379,\&quot;transferSize\&quot;:3150,\&quot;encodedBodySize\&quot;:1807,\&quot;decodedBodySize\&quot;:1807,\&quot;serverTime\&quot;:9,\&quot;defs\&quot;:[\&quot;markup://flexipage:recordHomeSimpleViewTemplate2\&quot;],\&quot;xhrDelay\&quot;:23},\&quot;duration\&quot;:413},{\&quot;ts\&quot;:35894,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:41,\&quot;requestLength\&quot;:2075,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2945;a\&quot;],\&quot;requestId\&quot;:\&quot;358930000001b80b04\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1910,\&quot;xhrDuration\&quot;:383,\&quot;xhrStall\&quot;:15,\&quot;startTime\&quot;:35894,\&quot;fetchStart\&quot;:35894,\&quot;requestStart\&quot;:35909,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:367,\&quot;transferSize\&quot;:2980,\&quot;serverTime\&quot;:56,\&quot;xhrDelay\&quot;:52},\&quot;duration\&quot;:435},{\&quot;ts\&quot;:35955,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:43,\&quot;requestLength\&quot;:2141,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2947;a\&quot;],\&quot;requestId\&quot;:\&quot;3595500000059008fd\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1402,\&quot;xhrDuration\&quot;:404,\&quot;xhrStall\&quot;:27,\&quot;startTime\&quot;:35956,\&quot;fetchStart\&quot;:35956,\&quot;requestStart\&quot;:35983,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:27,\&quot;transfer\&quot;:377,\&quot;transferSize\&quot;:2473,\&quot;serverTime\&quot;:58,\&quot;xhrDelay\&quot;:28},\&quot;duration\&quot;:432},{\&quot;ts\&quot;:35720,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:39,\&quot;requestLength\&quot;:2233,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2943;a\&quot;],\&quot;requestId\&quot;:\&quot;35719000000f2934e8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2599,\&quot;xhrDuration\&quot;:395,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:35720,\&quot;fetchStart\&quot;:35720,\&quot;requestStart\&quot;:35737,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:17,\&quot;transfer\&quot;:378,\&quot;transferSize\&quot;:3669,\&quot;serverTime\&quot;:67,\&quot;xhrDelay\&quot;:279},\&quot;duration\&quot;:674},{\&quot;ts\&quot;:35725,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:40,\&quot;requestLength\&quot;:1985,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2944;a\&quot;],\&quot;requestId\&quot;:\&quot;35725000000abb70e0\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6337,\&quot;xhrDuration\&quot;:425,\&quot;xhrStall\&quot;:28,\&quot;startTime\&quot;:35725,\&quot;fetchStart\&quot;:35725,\&quot;requestStart\&quot;:35753,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:28,\&quot;transfer\&quot;:397,\&quot;transferSize\&quot;:7488,\&quot;serverTime\&quot;:81,\&quot;xhrDelay\&quot;:258},\&quot;duration\&quot;:683},{\&quot;ts\&quot;:35926,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:42,\&quot;requestLength\&quot;:2129,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2946;a\&quot;],\&quot;requestId\&quot;:\&quot;35926000000940805c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1365,\&quot;xhrDuration\&quot;:502,\&quot;xhrStall\&quot;:14,\&quot;startTime\&quot;:35926,\&quot;fetchStart\&quot;:35926,\&quot;requestStart\&quot;:35940,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:488,\&quot;transferSize\&quot;:2437,\&quot;serverTime\&quot;:167,\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:513},{\&quot;ts\&quot;:36326,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:10,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:351,\&quot;startTime\&quot;:36327,\&quot;fetchStart\&quot;:36651,\&quot;requestStart\&quot;:36651,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:324,\&quot;ttfb\&quot;:350,\&quot;transfer\&quot;:1,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:4705,\&quot;decodedBodySize\&quot;:4705,\&quot;serverTime\&quot;:21,\&quot;defs\&quot;:[\&quot;markup://c:ALP360_SubTabRedirect\&quot;],\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:354},{\&quot;ts\&quot;:36388,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:46,\&quot;requestLength\&quot;:1180,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3103;a\&quot;],\&quot;requestId\&quot;:\&quot;3638800000033370f8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1356,\&quot;xhrDuration\&quot;:356,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:36390,\&quot;fetchStart\&quot;:36390,\&quot;requestStart\&quot;:36410,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:336,\&quot;transferSize\&quot;:2407,\&quot;serverTime\&quot;:15,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:359},{\&quot;ts\&quot;:36075,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:44,\&quot;requestLength\&quot;:2153,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2948;a\&quot;],\&quot;requestId\&quot;:\&quot;36075000000c81133d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:4168,\&quot;xhrDuration\&quot;:1636,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:36075,\&quot;fetchStart\&quot;:36075,\&quot;requestStart\&quot;:36081,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:1630,\&quot;transferSize\&quot;:5506,\&quot;serverTime\&quot;:1307,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:1638},{\&quot;ts\&quot;:37173,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:48,\&quot;requestLength\&quot;:1218,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3145;a\&quot;],\&quot;requestId\&quot;:\&quot;3717300000077aa9e9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1684,\&quot;xhrDuration\&quot;:750,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:37173,\&quot;fetchStart\&quot;:37173,\&quot;requestStart\&quot;:37178,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:745,\&quot;transferSize\&quot;:2755,\&quot;serverTime\&quot;:422,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:751},{\&quot;ts\&quot;:37152,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:47,\&quot;requestLength\&quot;:1277,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3144;a\&quot;],\&quot;requestId\&quot;:\&quot;37152000000b7fb8f6\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1388,\&quot;xhrDuration\&quot;:1277,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:37152,\&quot;fetchStart\&quot;:37152,\&quot;requestStart\&quot;:37157,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:1271,\&quot;transferSize\&quot;:2460,\&quot;serverTime\&quot;:943,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1278},{\&quot;ts\&quot;:37941,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:49,\&quot;requestLength\&quot;:1269,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3146;a\&quot;],\&quot;requestId\&quot;:\&quot;37941000000696a8f7\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1718,\&quot;xhrDuration\&quot;:1096,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:37943,\&quot;fetchStart\&quot;:37943,\&quot;requestStart\&quot;:37956,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:13,\&quot;transfer\&quot;:1083,\&quot;transferSize\&quot;:2770,\&quot;serverTime\&quot;:765,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:1099},{\&quot;ts\&quot;:37956,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:50,\&quot;requestLength\&quot;:1273,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3147;a\&quot;],\&quot;requestId\&quot;:\&quot;37956000000e69e619\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1738,\&quot;xhrDuration\&quot;:1085,\&quot;xhrStall\&quot;:16,\&quot;startTime\&quot;:37956,\&quot;fetchStart\&quot;:37956,\&quot;requestStart\&quot;:37972,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:1069,\&quot;transferSize\&quot;:2802,\&quot;serverTime\&quot;:743,\&quot;xhrDelay\&quot;:9},\&quot;duration\&quot;:1094},{\&quot;ts\&quot;:37958,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:51,\&quot;requestLength\&quot;:1274,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;3148;a\&quot;],\&quot;requestId\&quot;:\&quot;37958000000431830e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1738,\&quot;xhrDuration\&quot;:1123,\&quot;xhrStall\&quot;:30,\&quot;startTime\&quot;:37958,\&quot;fetchStart\&quot;:37958,\&quot;requestStart\&quot;:37988,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:2,\&quot;ttfb\&quot;:30,\&quot;transfer\&quot;:1093,\&quot;transferSize\&quot;:2801,\&quot;serverTime\&quot;:782,\&quot;xhrDelay\&quot;:7},\&quot;duration\&quot;:1130},{\&quot;ts\&quot;:36331,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:45,\&quot;requestLength\&quot;:3573,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;2949;a\&quot;,\&quot;2950;a\&quot;,\&quot;2951;a\&quot;,\&quot;2952;a\&quot;,\&quot;2953;a\&quot;,\&quot;2954;a\&quot;,\&quot;2960;a\&quot;],\&quot;requestId\&quot;:\&quot;363310000008bc2d19\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:6464,\&quot;xhrDuration\&quot;:2788,\&quot;xhrStall\&quot;:15,\&quot;startTime\&quot;:36332,\&quot;fetchStart\&quot;:36332,\&quot;requestStart\&quot;:36347,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:3,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:2773,\&quot;transferSize\&quot;:7943,\&quot;serverTime\&quot;:2452,\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:2794}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:33749,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2776;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:45,\&quot;db\&quot;:16,\&quot;xhrServerTime\&quot;:67,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:500},{\&quot;ts\&quot;:34634,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2878;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:1,\&quot;enqueueWait\&quot;:81,\&quot;duration\&quot;:82},{\&quot;ts\&quot;:34857,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2937;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getObjectInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:3,\&quot;serverTime\&quot;:{\&quot;total\&quot;:14,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:33,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:378},{\&quot;ts\&quot;:34810,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2936;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__highlightsPanel_Account___0123z000000pNrQAAU___Compact___View\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;component\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:84,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:103,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:454},{\&quot;ts\&quot;:34801,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2935;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__flexipage_RecordPage___Consumer_Screen___Account___VIEW\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;template\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:143,\&quot;db\&quot;:37,\&quot;xhrServerTime\&quot;:192,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:549},{\&quot;ts\&quot;:35893,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2945;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:38,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:56,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:438},{\&quot;ts\&quot;:35955,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2947;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:37,\&quot;db\&quot;:12,\&quot;xhrServerTime\&quot;:58,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:432},{\&quot;ts\&quot;:35719,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2943;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:50,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:66,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:676},{\&quot;ts\&quot;:35725,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2944;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ActionsController/ACTION$getRecordActions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:65,\&quot;db\&quot;:17,\&quot;xhrServerTime\&quot;:80,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:686},{\&quot;ts\&quot;:35926,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2946;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:146,\&quot;db\&quot;:78,\&quot;xhrServerTime\&quot;:166,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:514},{\&quot;ts\&quot;:36357,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3103;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:workspaceTabWrapper\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.workspaceTabWrapper.WorkspaceTabWrapperController/ACTION$getThemeForEntityApiName\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:31,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:15,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:16,\&quot;duration\&quot;:407},{\&quot;ts\&quot;:36075,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2948;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1287,\&quot;db\&quot;:114,\&quot;xhrServerTime\&quot;:1307,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1638},{\&quot;ts\&quot;:37173,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3145;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:404,\&quot;db\&quot;:46,\&quot;xhrServerTime\&quot;:422,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:753},{\&quot;ts\&quot;:37152,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3144;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:923,\&quot;db\&quot;:53,\&quot;xhrServerTime\&quot;:943,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1279},{\&quot;ts\&quot;:37941,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3146;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:744,\&quot;db\&quot;:42,\&quot;xhrServerTime\&quot;:765,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1101},{\&quot;ts\&quot;:37956,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3147;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:723,\&quot;db\&quot;:50,\&quot;xhrServerTime\&quot;:743,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1094},{\&quot;ts\&quot;:37958,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;3148;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:762,\&quot;db\&quot;:90,\&quot;xhrServerTime\&quot;:782,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1130},{\&quot;ts\&quot;:36076,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2949;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:255,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3051},{\&quot;ts\&quot;:36080,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2950;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:251,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1761,\&quot;db\&quot;:367,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3047},{\&quot;ts\&quot;:36080,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2951;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:251,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3047},{\&quot;ts\&quot;:36084,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2952;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:247,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:28,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3043},{\&quot;ts\&quot;:36084,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2953;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:246,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3043},{\&quot;ts\&quot;:36088,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2954;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:242,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:542,\&quot;db\&quot;:86,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3039},{\&quot;ts\&quot;:36094,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;2960;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:237,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:40,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:2452,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3033}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:2633,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;c:alp360ErrorHandling\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:277},{\&quot;name\&quot;:\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;createCount\&quot;:3,\&quot;createTimeTotal\&quot;:863},{\&quot;name\&quot;:\&quot;c:ALP360_SubTabRedirect\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:356},{\&quot;name\&quot;:\&quot;flexipage:tabset\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:380},{\&quot;name\&quot;:\&quot;c:alp360HeaderContainer\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:453}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:39241,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:10,\&quot;storeBroadcast\&quot;:29,\&quot;storeLookup\&quot;:28}}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:5496,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6Iten15XXqNeZ158g15jXoNeZ15DXoNeZIiwic2NvcGVNYXAiOnsidHlwZSI6IlRPUF9SRVNVTFRTIn0sImNvbnRleHQiOnsiZGlzYWJsZVNwZWxsQ29ycmVjdGlvbiI6ZmFsc2UsImRpc2FibGVJbnRlbnRRdWVyeSI6ZmFsc2UsInBlcm1zQW5kUHJlZnMiOnsiT3JnUGVybWlzc2lvbnMuVW5pb25BcHBOYXZTbWFydFNjb3BlIjpmYWxzZSwiU2VhcmNoVWkuZmVlZGJhY2tDb21wb25lbnRFbmFibGVkIjpmYWxzZSwiT3JnUGVybWlzc2lvbnMuRWluc3RlaW5TZWFyY2hBcHBzIjpmYWxzZSwiT3JnUHJlZmVyZW5jZXMuQ2hhdHRlckVuYWJsZWQiOnRydWUsIlNlYXJjaC5jcm9zc09iamVjdHNBdXRvU3VnZ2VzdEVuYWJsZWQiOnRydWUsIlNlYXJjaFVpLnNlYXJjaFVJSW50ZXJhY3Rpb25Mb2dnaW5nRW5hYmxlZCI6ZmFsc2UsIk15U2VhcmNoLnVzZXJDYW5IYXZlTXlTZWFyY2hCZXN0UmVzdWx0IjpmYWxzZSwiU2VhcmNoUmVzdWx0c0xWTS5sdm1FbmFibGVkRm9yVG9wUmVzdWx0cyI6ZmFsc2V9LCJzZWFyY2hEaWFsb2dTZXNzaW9uSWQiOiIyZTkyN2U0Mi00ODVkLTVjZjUtMDNkYi01MWU4YjFiMzVjMzMiLCJzZWFyY2hTb3VyY2UiOiJJTlBVVF9ERVNLVE9QIn0sImdyb3VwSWQiOiJERUZBVUxUIn0sInN0YXRlIjp7fX0%3D\&quot;}},\&quot;attributes\&quot;:{\&quot;darkModeEnabled\&quot;:false,\&quot;fieldInstancesEnabled\&quot;:true,\&quot;numTotalLoadedTabs\&quot;:2,\&quot;numTotalWorkspaces\&quot;:2,\&quot;numTotalSubtabs\&quot;:0,\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:5496,\&quot;defaultCmp\&quot;:[\&quot;c:alp360HeaderContainer\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:ALP360_SubTabRedirect\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360MainDetailsAdw\&quot;,\&quot;c:alp360ErrorHandling\&quot;],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;rrh.useLWCRelatedLists\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:13,\&quot;misses\&quot;:0},\&quot;AuraStorage_ldsObjectInfo\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:getObjectInfo:storage\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:getRecordActions\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;lds:getObjectInfo\&quot;:{\&quot;hits\&quot;:3,\&quot;misses\&quot;:1},\&quot;lds:getRecord\&quot;:{\&quot;hits\&quot;:2,\&quot;misses\&quot;:6},\&quot;AuraRecordStore_oneConsoleLayoutContainer2\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;total\&quot;:{\&quot;hits\&quot;:18,\&quot;misses\&quot;:13}},\&quot;complexity\&quot;:{\&quot;ADS_fields\&quot;:7},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:39243,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:recordHomeFlexipage2Wrapper\&quot;,\&quot;markup://one:recordHomeFlexipage2\&quot;,\&quot;markup://c:ALP360_SubTabRedirect\&quot;,\&quot;markup://flexipage:component3\&quot;,\&quot;markup://c:alp360SubTabParams\&quot;],\&quot;pageCounter\&quot;:4,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:37,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:39243,\&quot;pageStartTime\&quot;:1605453186309,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;locker-method-data\&quot;,\&quot;attributes\&quot;:{\&quot;document.querySelector\&quot;:1,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:null,\&quot;sequence\&quot;:38,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M000005vACTQA2\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M000005vACTQA2/view\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222377,\&quot;value\&quot;:5},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222409,\&quot;value\&quot;:9},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;get-record-normal-invoke-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222405,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225554,\&quot;value\&quot;:[128,146]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225554,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225554,\&quot;value\&quot;:[0,7]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225453,\&quot;value\&quot;:[0,0,11,0,7,0,0,8,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225452,\&quot;value\&quot;:[0,2,3,2,2,2,1,1,1,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-lookup-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225456,\&quot;value\&quot;:[1,0,0,0,0,2,1,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,5,2,0,0,0,0,0,0,1,0,0,3]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225536,\&quot;value\&quot;:[5576]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225549,\&quot;value\&quot;:[218884]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225549,\&quot;value\&quot;:[33762]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453220051,\&quot;value\&quot;:[6152]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453220051,\&quot;value\&quot;:[134695]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453220051,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225553,\&quot;value\&quot;:[5496]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222037,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222734,\&quot;value\&quot;:[696,701]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222377,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222377,\&quot;value\&quot;:[1,1,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453221108,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453221551,\&quot;value\&quot;:[447]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453221125,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453221125,\&quot;value\&quot;:[2,1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222409,\&quot;value\&quot;:6},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225458,\&quot;value\&quot;:[299,463,692,3050,3050,3054]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453220553,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-emit-record-changed-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453225450,\&quot;value\&quot;:[9,7,8]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-size\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222195,\&quot;value\&quot;:[37,16]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.root-property-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222195,\&quot;value\&quot;:21},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222197,\&quot;value\&quot;:25},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222197,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222199,\&quot;value\&quot;:19},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222199,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-stopped\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222023,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222199,\&quot;value\&quot;:[0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222206,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222207,\&quot;value\&quot;:[2,1]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222735,\&quot;value\&quot;:[4,9,466,697,709,711]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222200,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.d-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222206,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.d-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222206,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222207,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222207,\&quot;value\&quot;:[0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222037,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1605453222207,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222207,\&quot;value\&quot;:[0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222719,\&quot;value\&quot;:[463,693]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1605453222734,\&quot;value\&quot;:[696,701]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Ebr4Jil7Vde_KOs5ojXMVQ&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=52&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000005vACTQA2/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">39248000000b8e063e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-296" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;5&quot;,&quot;channel&quot;:&quot;/meta/connect&quot;,&quot;connectionType&quot;:&quot;long-polling&quot;,&quot;clientId&quot;:&quot;y5rqbyesp135swqzlvg4ws5vqp&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1605314324000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Round Sleep" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">10000</stringProp>
        </TestAction>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
