<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="TestPlan.comments">term = customerNumber</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">C:/LoadTest/Salesforce/alpha360/data/customer_number.txt</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">term,</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
        <stringProp name="TestPlan.comments">https://alpha--qaall.lightning.force.com &lt;&gt; qausr01@yes.co.il.qaall &lt;&gt; Yesqa1247 &lt;&gt; 2329, 12279, 15169, 21399, 51119, 44279, 44309, 50359</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="01. Login Form" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/welcome " enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${term}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_QCQQ" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_QCQQ</stringProp>
              <stringProp name="RegexExtractor.regex">name=&quot;QCQQ&quot; value=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-messages/promos.html-16" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">c.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/login-messages/promos.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="02. Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/login-details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="un" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">un</stringProp>
                  <stringProp name="Argument.value">qausr01@yes.co.il.qaall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="width" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">width</stringProp>
                  <stringProp name="Argument.value">1924</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="height" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">height</stringProp>
                  <stringProp name="Argument.value">1008</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="hasRememberUn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hasRememberUn</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginURL</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="loginType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">loginType</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="useSecure" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">useSecure</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="local" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">local</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <stringProp name="Argument.value">standard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="qs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">qs</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="locale" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locale</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_token</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="oauth_callback" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oauth_callback</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="login" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">login</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="serverid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">serverid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="QCQQ" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">QCQQ</stringProp>
                  <stringProp name="Argument.value">${_QCQQ}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">qausr01@yes.co.il.qaall</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ExtraLog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ExtraLog</stringProp>
                  <stringProp name="Argument.value">%5B%7B%22width%22:1924%7D,%7B%22height%22:1008%7D,%7B%22language%22:%22en-US%22%7D,%7B%22offset%22:-2%7D,%7B%22scripts%22:%5B%7B%22size%22:249,%22summary%22:%22if%20(self%20==%20top)%20%7Bdocument.documentElement.style.v%22%7D,%7B%22size%22:573,%22summary%22:%22var%20SFDCSessionVars=%7B%5C%22server%5C%22:%5C%22https:%5C%5C/%5C%5C/test.sale%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/SfdcSessionBase208.js%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/LoginHint208.js%22%7D,%7B%22size%22:26,%22summary%22:%22LoginHint.hideLoginForm();%22%7D,%7B%22size%22:36,%22summary%22:%22LoginHint.getSavedIdentities(false);%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/baselogin4.js%22%7D,%7B%22url%22:%22https://alpha--qaall.my.salesforce.com/jslibrary/LoginMarketingSurveyResponse.js%22%7D,%7B%22size%22:451,%22summary%22:%22function%20handleLogin()%7Bdocument.login.un.value=doc%22%7D%5D%7D,%7B%22scriptCount%22:9%7D,%7B%22iframes%22:%5B%22https://c.salesforce.com/login-messages/promos.html%22,%22https://test.salesforce.com/login/sessionserver212.html%22%5D%7D,%7B%22iframeCount%22:2%7D,%7B%22referrer%22:%22NO_REFERRER%22%7D%5D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pw</stringProp>
                  <stringProp name="Argument.value">Yesqa1247</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rememberUn" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rememberUn</stringProp>
                  <stringProp name="Argument.value">on</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/frontdoor.jsp-36" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQK0fWSjS5uJ7gWH5TdWBPOcHGTheku8ShflWTtSME2sq7YLPNbI_E_CvAoWvz5zWwNT0Yva2xQX4RyRCYAY2Ts1kz_OG</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="apv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apv</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="allp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">allp</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display</stringProp>
                  <stringProp name="Argument.value">page</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/frontdoor.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/myDomainDoor-39" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="oid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">oid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall--c.documentforce.com/secur/contentDoor?startURL=${scheme}%3A%2F%2Falpha--qaall.my.salesforce.com%2Fone%2Fone.app&amp;sid=00D3M0000008my9%21AR0AQJpRweAHZJlrOIVLzJgP8Hsjm_A9rkohG5mFAT9Qr8hu8SjgziF2_OgLExAjIkaQlyy8LcE7RC4LkX5IDpZKIbTqZB5G&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNDIyNDA3NDY5MiwiZXhwIjowfQ%3D%3D.._D8oBXuyHm-1tRuG.TejWUZODP5f_BOivPZ8kDw%3D%3D.UTo0Lxg7AA9Qy9xTpBZ9eQ%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">cs127.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/myDomainDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/secur/contentDoor-44" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="startURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">startURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.my.salesforce.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQJpRweAHZJlrOIVLzJgP8Hsjm_A9rkohG5mFAT9Qr8hu8SjgziF2_OgLExAjIkaQlyy8LcE7RC4LkX5IDpZKIbTqZB5G</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="skipRedirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">skipRedirect</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="lm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lm</stringProp>
                  <stringProp name="Argument.value">eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNDIyNDA3NDY5MiwiZXhwIjowfQ==.._D8oBXuyHm-1tRuG.TejWUZODP5f_BOivPZ8kDw==.UTo0Lxg7AA9Qy9xTpBZ9eQ==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall--c.documentforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/secur/contentDoor</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.my.salesforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="03. Home Page" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">http://alpha--qaall.lightning.force.com:443/cometd/40.0</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://alpha--qaall.lightning.force.com/cometd/40.0</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-46" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/secur/contentDoor?startURL=${scheme}%3A%2F%2Falpha--qaall.my.salesforce.com%2Fone%2Fone.app&amp;sid=00D3M0000008my9%21AR0AQJpRweAHZJlrOIVLzJgP8Hsjm_A9rkohG5mFAT9Qr8hu8SjgziF2_OgLExAjIkaQlyy8LcE7RC4LkX5IDpZKIbTqZB5G&amp;skipRedirect=1&amp;lm=eyJlbmMiOiJBMjU2R0NNIiwiYXVkIjoiMDBEM00wMDAwMDA4bXk5Iiwia2lkIjoie1widFwiOlwiMDBEM00wMDAwMDA4bXk5XCIsXCJ2XCI6XCIwMkczejAwMDAwMDdIMmZcIixcImFcIjpcImNvbnRlbnRkb29ydXNlcnRyYW5zaWVudGtleWVuY3J5cHRcIixcInVcIjpcIjAwNTNNMDAwMDAwVzB1blwifSIsImNyaXQiOlsiaWF0Il0sImlhdCI6MTYwNDIyNDA3NDY5MiwiZXhwIjowfQ%3D%3D.._D8oBXuyHm-1tRuG.TejWUZODP5f_BOivPZ8kDw%3D%3D.UTo0Lxg7AA9Qy9xTpBZ9eQ%3D%3D</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">children</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_token</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-51" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/one/one.app-54" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/one/one.app</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/session-52" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="url" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">url</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.my.salesforce.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/session</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/visualforce/recsession-53" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sid</stringProp>
                  <stringProp name="Argument.value">00D3M0000008my9!AR0AQOzaYAwLnIyO5GVWMMcVFBvBe6kJaoNQ883LwyRmJGZRJXHl14IzX4O3hUkQe7h_rBozV_gRcxJn2_020gY.hu44Pc8A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inst</stringProp>
                  <stringProp name="Argument.value">3M</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cshc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cshc</stringProp>
                  <stringProp name="Argument.value">M000000W0unM0000008my9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="retURL" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">retURL</stringProp>
                  <stringProp name="Argument.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/visualforce/recsession</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall--c.documentforce.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_slds/icons/utility-sprite/svg/symbols_rtl.svg-60" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cache" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cache</stringProp>
                  <stringProp name="Argument.value">9.37.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_slds/icons/utility-sprite/svg/symbols_rtl.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_slds/fonts/v2.3.0/SalesforceSans-Regular.woff2-56" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_slds/fonts/v2.3.0/SalesforceSans-Regular.woff2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/l/%7B%22mode%22%3A%22PROD%22%2C%22app%22%3A%22one%3Aone%22%2C%22loaded%22%3A%7B%22APPLICATION%40markup%3A%2F%2Fone%3Aone%22%3A%22Vb1ZsrqgswXUHT9OdA_hBw%22%7D%2C%22styleContext%22%3A%7B%22c%22%3A%22firefox%22%2C%22x%22%3A%5B%22isDesktop%22%2C%22isRtl%22%5D%2C%22tokens%22%3A%5B%22markup%3A%2F%2Fforce%3AsldsTokens%22%2C%22markup%3A%2F%2Fforce%3Abase%22%2C%22markup%3A%2F%2Fforce%3AoneSalesforceSkin%22%2C%22markup%3A%2F%2Fforce%3AlevelOneDensity%22%2C%22markup%3A%2F%2Fforce%3AthemeTokens%22%2C%22markup%3A%2F%2Fforce%3AformFactorLarge%22%5D%2C%22tuid%22%3A%22Cq_2iKr35-S5B15YQhyZ9w%22%2C%22cuid%22%3A-264843540%7D%2C%22pathPrefix%22%3A%22%22%7D/app.css?1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">identity</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/font-woff2;q=1.0,application/font-woff;q=0.9,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?preloadActions-55" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;app&quot;:&quot;one:one&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.one.controller.OneController/ACTION$getCurrentApp&quot;,&quot;params&quot;:{&quot;appContextIdOrName&quot;:&quot;${_appDefinition}&quot;},&quot;id&quot;:&quot;0;p&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?preloadActions</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">&quot;appDefinition&quot;:{&quot;id&quot;:&quot;06m3M0000000COoQAM&quot;</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_appDefinition" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_appDefinition</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;appDefinition&quot;:{&quot;id&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_appDefinition</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1-59" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;273;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.flexipage.components.page.FlexipageControllerV2/ACTION$getPage&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexiPageDeveloperName&quot;:&quot;Alpha_360_UtilityBar&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=0&amp;ui-flexipage-components-page.FlexipageControllerV2.getPage=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">145040000009847757</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=2&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1-62" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;327;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=2&amp;ui-force-components-controllers-hostConfig.HostConfig.getConfigData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1490000000052b8aae</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-global-components-one-consoleLayoutContainer.ConsoleLayout.getConsoleState=2&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1-61" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;116;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.consoleLayoutContainer.ConsoleLayoutController/ACTION$getConsoleState&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;category&quot;:&quot;Base&quot;,&quot;appId&quot;:&quot;${_appDefinition}&quot;}},{&quot;id&quot;:&quot;117;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.consoleLayoutContainer.ConsoleLayoutController/ACTION$getConsoleState&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;category&quot;:&quot;mostRecentlyUsed&quot;,&quot;appId&quot;:&quot;${_appDefinition}&quot;}},{&quot;id&quot;:&quot;199;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:false}},{&quot;id&quot;:&quot;217;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.favorites.FavoritesController/ACTION$getFavorites&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;236;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.empApi.EmpApiController/ACTION$getEmpConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;240;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getInitializationValues&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;250;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.header.HeaderController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/one/one.app</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=1&amp;ui-force-components-controllers-empApi.EmpApi.getEmpConfig=1&amp;ui-global-components-one-consoleLayoutContainer.ConsoleLayout.getConsoleState=2&amp;ui-global-components-one-favorites.Favorites.getFavorites=1&amp;ui-global-components-one-header.Header.getSettings=1&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1&amp;ui-notifications-components-notifications-controller.Notifications.getInitializationValues=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1488900000044b90ac</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_sessionKey" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_sessionKey</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;sessionKey&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_sessionKey</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-63" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:utilityBarContent</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-65" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://force:listViewManagerSplitViewList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=3&amp;ui-force-components-controllers-lists-listViewManager.ListViewManager.getMetadataInitialLoad=1-64" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;510;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewManager.ListViewManagerController/ACTION$getMetadataInitialLoad&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Account&quot;,&quot;listViewIdOrName&quot;:&quot;Recent&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:true,&quot;isSearch&quot;:false}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=3&amp;ui-force-components-controllers-lists-listViewManager.ListViewManager.getMetadataInitialLoad=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">15877000000446cad7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=4&amp;ui-liveagent-components-aura-controller.ChatConfig.getChatConfiguration=1&amp;ui-liveagent-components-aura-controller.Status.getStatuses=1-67" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;640;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.ChatConfigController/ACTION$getChatConfiguration&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;649;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.StatusController/ACTION$getStatuses&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=4&amp;ui-liveagent-components-aura-controller.ChatConfig.getChatConfiguration=1&amp;ui-liveagent-components-aura-controller.Status.getStatuses=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1659800000093693b3</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=5&amp;ui-liveagent-components-aura-controller.OmniWidget.getDeclineReasons=1&amp;ui-liveagent-components-aura-controller.OmniWidget.getSCRTInfo=1&amp;ui-liveagent-components-aura-controller.OmniWidget.isDeclineReasonEnabled=1-68" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;703;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getSCRTInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;704;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$isDeclineReasonEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;705;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getDeclineReasons&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=5&amp;ui-liveagent-components-aura-controller.OmniWidget.getDeclineReasons=1&amp;ui-liveagent-components-aura-controller.OmniWidget.getSCRTInfo=1&amp;ui-liveagent-components-aura-controller.OmniWidget.isDeclineReasonEnabled=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">16813000000d5b8de8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=6&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-69" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;706;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;0053M000000W0unQAC.undefined.null.null.null.Name,Id.VIEW.false.null.null.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=6&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">168630000007e6a5e7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=7&amp;ui-force-components-controllers-lists-listViewDataManager.ListViewDataManager.getItems=1&amp;ui-force-components-virtualRecordList.VirtualRecordList.getRecordLayoutComponent=1-70" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;721;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.virtualRecordList.VirtualRecordListController/ACTION$getRecordLayoutComponent&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;inContextOfComponent&quot;:&quot;force:listViewManagerSplitViewList&quot;,&quot;listReference&quot;:{&quot;entityKeyPrefixOrApiName&quot;:&quot;Account&quot;,&quot;listViewIdOrName&quot;:&quot;Recent&quot;,&quot;inContextOfRecordId&quot;:null,&quot;isMRU&quot;:true,&quot;isSearch&quot;:false},&quot;layoutType&quot;:&quot;SEARCH&quot;}},{&quot;id&quot;:&quot;724;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.lists.listViewDataManager.ListViewDataManagerController/ACTION$getItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;filterName&quot;:&quot;Recent&quot;,&quot;entityName&quot;:&quot;Account&quot;,&quot;pageSize&quot;:50,&quot;layoutType&quot;:&quot;SEARCH&quot;,&quot;sortBy&quot;:null,&quot;getCount&quot;:false,&quot;enableRowActions&quot;:false,&quot;offset&quot;:0},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=7&amp;ui-force-components-controllers-lists-listViewDataManager.ListViewDataManager.getItems=1&amp;ui-force-components-virtualRecordList.VirtualRecordList.getRecordLayoutComponent=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">17008000000dd363d2</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=8&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1-71" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;744;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;recordId&quot;:null,&quot;context&quot;:&quot;MRU_LIST&quot;,&quot;entityApiName&quot;:&quot;Account&quot;,&quot;record&quot;:null,&quot;listNameOrId&quot;:&quot;Recent&quot;,&quot;size&quot;:0,&quot;maxWidth&quot;:-1,&quot;actionTypes&quot;:[],&quot;bulkedAction&quot;:false,&quot;actionNames&quot;:[],&quot;enableActionsConfiguration&quot;:false,&quot;actionsRequestId&quot;:0}]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=8&amp;ui-global-components-one-actionsManager.ActionsManager.handleAction=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1714000000088a3cad</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=9&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-72" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;773;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[],&quot;entityNames&quot;:[&quot;Account&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=9&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">17238000000b6d0636</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=10&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1-73" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;794;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;records&quot;:{&quot;0053M000000W0unQAC&quot;:{}},&quot;refreshCached&quot;:false},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=10&amp;ui-force-components-controllers-socialPhoto.SocialPhoto.resolvePhotos=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">17388000000a289025</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/_nc_external/system/security/session/SessionTimeServlet-74" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="buster" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">buster</stringProp>
                  <stringProp name="Argument.value">1604224112411</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/_nc_external/system/security/session/SessionTimeServlet</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=15&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1-79" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1026;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getPermissions&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=15&amp;ui-setup-components-aura-components-gear.Gear.getPermissions=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">18454000000252e4b6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=14&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1-77" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1025;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getGearSetupApps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;customAppId&quot;:&quot;${_appDefinition}&quot;},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=14&amp;ui-setup-components-aura-components-gear.Gear.getGearSetupApps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">18454000000185e6a6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=11&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1-75" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;976;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.defenseHook.DefenseHookController/ACTION$getDefenseHook&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;989;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.onboardingManager.OnboardingManagerController/ACTION$getPayload&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;contextualData&quot;:{&quot;appDefinition&quot;:{&quot;id&quot;:&quot;${_appDefinition}&quot;,&quot;developerName&quot;:&quot;Alpha_360&quot;},&quot;pageReference&quot;:null,&quot;testModeEnabled&quot;:false,&quot;testModeShowSeen&quot;:false,&quot;authoringMode&quot;:false,&quot;pendingPromptId&quot;:null}}},{&quot;id&quot;:&quot;990;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.identity.components.sessiontimeoutwarn.SessionTimeoutWarnController/ACTION$getSessionTimeoutConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;993;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.unsupportedContainer.UnsupportedContainerController/ACTION$getSettings&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;994;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.support.components.crossFrameApiManager.CrossFrameApiManagerController/ACTION$getIsLightningOpenCtiUser&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;995;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.rtc.components.aura.components.RtcDiscoveryBannerController/ACTION$getConfig&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1000;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.PermsAndPrefsCacheController/ACTION$getPermsAndPrefs&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1017;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.globalCreate.GlobalCreateController/ACTION$getDockableActionsList&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{}},{&quot;id&quot;:&quot;1018;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.notifications.components.notifications.controller.NotificationsController/ACTION$getNotifications&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;currentLastActivity&quot;:&quot;1970-01-01T00:00:00.000Z&quot;}},{&quot;id&quot;:&quot;1023;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.userProfileCard.UserProfileCardController/ACTION$loadProfileCardInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=11&amp;ui-force-components-controllers-defenseHook.DefenseHook.getDefenseHook=1&amp;ui-global-components-one-globalCreate.GlobalCreate.getDockableActionsList=1&amp;ui-global-components-one-onboardingManager.OnboardingManager.getPayload=1&amp;ui-global-components-one-unsupportedContainer.UnsupportedContainer.getSettings=1&amp;ui-global-components-one-userProfileCard.UserProfileCard.loadProfileCardInfo=1&amp;ui-identity-components-sessiontimeoutwarn.SessionTimeoutWarn.getSessionTimeoutConfig=1&amp;ui-notifications-components-notifications-controller.Notifications.getNotifications=1&amp;ui-rtc-components-aura-components.RtcDiscoveryBanner.getConfig=1&amp;ui-search-components-forcesearch-sgdp.PermsAndPrefsCache.getPermsAndPrefs=1&amp;ui-support-components-crossFrameApiManager.CrossFrameApiManager.getIsLightningOpenCtiUser=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">184490000001f4a6f8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-80" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://one:onePreloads</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">LATEST-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=12&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-78" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;975;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:13766,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:607,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:13770,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:14614,\&quot;duration\&quot;:35,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:14649,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-didInit\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleLayoutContainer-didInit\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer\&quot;,\&quot;context\&quot;:{\&quot;eventSource\&quot;:\&quot;synthetic-consoleLayoutContainer-initConsole\&quot;,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;customAppId\&quot;:\&quot;${_appDefinition}\&quot;,\&quot;customAppDevName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;}},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:bootstrap\&quot;,\&quot;ts\&quot;:0,\&quot;duration\&quot;:14885,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:13736,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:0,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:41,\&quot;startTime\&quot;:13736,\&quot;fetchStart\&quot;:13736,\&quot;requestStart\&quot;:13736,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:41,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:99067,\&quot;decodedBodySize\&quot;:504937,\&quot;serverTime\&quot;:37,\&quot;defs\&quot;:[\&quot;markup://force:closeRecord\&quot;,\&quot;markup://force:scopedActionModal\&quot;,\&quot;markup://force:scopedModal\&quot;,\&quot;markup://lightning:tabClosed\&quot;,\&quot;markup://lightning:tabCreated\&quot;,\&quot;markup://lightning:tabRefreshed\&quot;,\&quot;markup://lightning:tabReplaced\&quot;,\&quot;markup://lightning:unsavedChanges\&quot;,\&quot;markup://one:addWorkspaceTab\&quot;],\&quot;xhrDelay\&quot;:38},\&quot;duration\&quot;:79}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:813,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:810},{\&quot;name\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;ui:label\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:2}]}]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;bootstrap\&quot;,\&quot;eventSource\&quot;:\&quot;lightning\&quot;,\&quot;attributes\&quot;:{\&quot;cache\&quot;:{\&quot;appCache\&quot;:false,\&quot;gvps\&quot;:false,\&quot;lightningLayout\&quot;:true},\&quot;execBootstrapJs\&quot;:12835,\&quot;execInlineJs\&quot;:12835,\&quot;appCssLoading\&quot;:null,\&quot;visibilityStateStart\&quot;:\&quot;visible\&quot;,\&quot;execAuraJs\&quot;:13095,\&quot;runInitAsync\&quot;:13155,\&quot;runAfterContextCreated\&quot;:13210,\&quot;runAfterInitDefsReady\&quot;:13210,\&quot;runAfterBootstrapReady\&quot;:13212,\&quot;AuraFrameworkEPT\&quot;:13212,\&quot;appCreationStart\&quot;:13262,\&quot;appCreationEnd\&quot;:13679,\&quot;appRenderingStart\&quot;:13679,\&quot;appRenderingEnd\&quot;:13700,\&quot;bootstrapEPT\&quot;:13700,\&quot;cdnEnabled\&quot;:true,\&quot;mode\&quot;:\&quot;PROD\&quot;,\&quot;pageStartTime\&quot;:1604224094000,\&quot;timing\&quot;:{\&quot;navigationStart\&quot;:1604224094000,\&quot;fetchStart\&quot;:1604224106181,\&quot;readyStart\&quot;:12181,\&quot;dnsStart\&quot;:1604224106182,\&quot;dnsEnd\&quot;:1604224106182,\&quot;lookupDomainTime\&quot;:0,\&quot;connectStart\&quot;:1604224106182,\&quot;connectEnd\&quot;:1604224106183,\&quot;connectTime\&quot;:1,\&quot;requestStart\&quot;:1604224106190,\&quot;responseStart\&quot;:1604224106190,\&quot;responseEnd\&quot;:1604224106814,\&quot;requestTime\&quot;:624,\&quot;domLoading\&quot;:1604224106782,\&quot;domInteractive\&quot;:1604224107148,\&quot;initDomTreeTime\&quot;:334,\&quot;contentLoadStart\&quot;:1604224107149,\&quot;contentLoadEnd\&quot;:1604224107150,\&quot;domComplete\&quot;:1604224107151,\&quot;domReadyTime\&quot;:3,\&quot;loadEventStart\&quot;:1604224107151,\&quot;loadEventEnd\&quot;:1604224107151,\&quot;loadEventTime\&quot;:0,\&quot;loadTime\&quot;:970,\&quot;unloadEventStart\&quot;:0,\&quot;unloadEventEnd\&quot;:0,\&quot;unloadEventTime\&quot;:0,\&quot;appCacheTime\&quot;:1,\&quot;redirectTime\&quot;:0},\&quot;type\&quot;:\&quot;WARM\&quot;,\&quot;allRequests\&quot;:[{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/one/one.app\&quot;,\&quot;initiatorType\&quot;:\&quot;navigation\&quot;,\&quot;duration\&quot;:12190,\&quot;startTime\&quot;:0,\&quot;fetchStart\&quot;:12181,\&quot;requestStart\&quot;:12190,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:12180,\&quot;ttfb\&quot;:12190,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:278417,\&quot;encodedBodySize\&quot;:274673,\&quot;decodedBodySize\&quot;:274673,\&quot;serverTime\&quot;:160},{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:93,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:80,\&quot;transfer\&quot;:13,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:216275,\&quot;decodedBodySize\&quot;:689350,\&quot;serverTime\&quot;:7},{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:94,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:80,\&quot;transfer\&quot;:14,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1004934,\&quot;decodedBodySize\&quot;:5476019},{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:98,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:93,\&quot;transfer\&quot;:5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1270423,\&quot;decodedBodySize\&quot;:6098282},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/l/%7B%22mode%22%3A%22PROD%22%2C%22app%22%3A%22one%3Aone%22%2C%22fwuid%22%3A%22dDIdorNC3N22LalQ5i3slQ%22%2C%22loaded%22%3A%7B%22APPLICATION%40markup%3A%2F%2Fone%3Aone%22%3A%22Vb1ZsrqgswXUHT9OdA_hBw%22%7D%2C%22mlr%22%3A1%2C%22pathPrefix%22%3A%22%22%2C%22dns%22%3A%22c%22%2C%22ls%22%3A1%7D/resources.js?pv=1604103942000968534465&amp;rv=1603993242000\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:79,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:10,\&quot;transfer\&quot;:69,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6794,\&quot;decodedBodySize\&quot;:33469},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;duration\&quot;:601,\&quot;startTime\&quot;:12844,\&quot;fetchStart\&quot;:12844,\&quot;requestStart\&quot;:12862,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:1,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:583,\&quot;transferSize\&quot;:107468,\&quot;encodedBodySize\&quot;:106416,\&quot;decodedBodySize\&quot;:106416,\&quot;serverTime\&quot;:209},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/projRes/ui-global-components/webtemplate/splash_screen_winter21_yeti.png\&quot;,\&quot;initiatorType\&quot;:\&quot;css\&quot;,\&quot;duration\&quot;:52,\&quot;startTime\&quot;:12865,\&quot;fetchStart\&quot;:12865,\&quot;requestStart\&quot;:12865,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:49,\&quot;transfer\&quot;:3,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:58301,\&quot;decodedBodySize\&quot;:58301},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/_slds/fonts/v2.3.0/SalesforceSans-Regular.woff2\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:52,\&quot;startTime\&quot;:12866,\&quot;fetchStart\&quot;:12866,\&quot;requestStart\&quot;:12866,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:49,\&quot;transfer\&quot;:3,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:27132,\&quot;decodedBodySize\&quot;:27132},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/img/one/apple-touch-icon-ipad.png\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:529,\&quot;startTime\&quot;:12874,\&quot;fetchStart\&quot;:12874,\&quot;requestStart\&quot;:12874,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:526,\&quot;transfer\&quot;:3,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1676,\&quot;decodedBodySize\&quot;:1676},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/favicon.ico\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:529,\&quot;startTime\&quot;:12875,\&quot;fetchStart\&quot;:12875,\&quot;requestStart\&quot;:12875,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:528,\&quot;transfer\&quot;:1,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:5430,\&quot;decodedBodySize\&quot;:5430},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/canvas/CanvasRendering.js\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:0,\&quot;startTime\&quot;:13153,\&quot;fetchStart\&quot;:13153,\&quot;requestStart\&quot;:13153,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:0,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:12647,\&quot;decodedBodySize\&quot;:12647},{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/ui-analytics-reporting/EclairNG.js\&quot;,\&quot;initiatorType\&quot;:\&quot;other\&quot;,\&quot;duration\&quot;:0,\&quot;startTime\&quot;:13153,\&quot;fetchStart\&quot;:13153,\&quot;requestStart\&quot;:13153,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:0,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:217460,\&quot;decodedBodySize\&quot;:217460}],\&quot;requestAuraJs\&quot;:{\&quot;name\&quot;:\&quot;/aura_\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:93,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:80,\&quot;transfer\&quot;:13,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:216275,\&quot;decodedBodySize\&quot;:689350,\&quot;serverTime\&quot;:7},\&quot;requestAppCoreJs\&quot;:{\&quot;name\&quot;:\&quot;appcore.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:94,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:80,\&quot;transfer\&quot;:14,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1004934,\&quot;decodedBodySize\&quot;:5476019},\&quot;requestAppJs\&quot;:{\&quot;name\&quot;:\&quot;app.js\&quot;,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:98,\&quot;startTime\&quot;:12819,\&quot;fetchStart\&quot;:12819,\&quot;requestStart\&quot;:12819,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:93,\&quot;transfer\&quot;:5,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:1270423,\&quot;decodedBodySize\&quot;:6098282},\&quot;requestLightningLayout\&quot;:{\&quot;name\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/aura?preloadActions\&quot;,\&quot;initiatorType\&quot;:\&quot;xmlhttprequest\&quot;,\&quot;duration\&quot;:601,\&quot;startTime\&quot;:12844,\&quot;fetchStart\&quot;:12844,\&quot;requestStart\&quot;:12862,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:1,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:583,\&quot;transferSize\&quot;:107468,\&quot;encodedBodySize\&quot;:106416,\&quot;decodedBodySize\&quot;:106416,\&quot;serverTime\&quot;:209},\&quot;lightningLayoutCreationStart\&quot;:13836,\&quot;lightningLayoutCreationEnd\&quot;:14649,\&quot;lightningLayoutRenderingStart\&quot;:14654,\&quot;lightningLayoutRenderingEnd\&quot;:14881,\&quot;visibilityStateEnd\&quot;:\&quot;visible\&quot;,\&quot;lightningEPT\&quot;:14885,\&quot;referer\&quot;:\&quot;Other\&quot;,\&quot;appRootRequestId\&quot;:\&quot;8d63d188187808f6\&quot;,\&quot;navbarCPUTime\&quot;:0,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;viewportHeight\&quot;:838,\&quot;viewportWidth\&quot;:1924,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14908,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90053M000000W0un50.0:globalValueProviders\&quot;,\&quot;elapsed\&quot;:1113,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14939,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90053M000000W0un50.0:_uri_defs_enabled\&quot;,\&quot;elapsed\&quot;:1141,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14888,\&quot;duration\&quot;:53,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[]},\&quot;owner\&quot;:\&quot;laf:appLayoutHost\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;loadClientLibrary\&quot;,\&quot;attributes\&quot;:{\&quot;library\&quot;:\&quot;canvasrendering\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14943,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1711,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14943,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1714,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14944,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1711,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14945,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14945,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:1381,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14945,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14947,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:14948,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:15013,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;markup://one:fp0M03M00000006DQSAY__pageWithoutSobject__1600945370000\&quot;,\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:15317,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;one:consolePersistenceManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-retrieve-consoleState\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consolePersistenceManager-retrieve\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;appId\&quot;:\&quot;${_appDefinition}\&quot;,\&quot;responseState\&quot;:\&quot;SUCCESS\&quot;,\&quot;category\&quot;:\&quot;Base\&quot;,\&quot;numWorkspaces\&quot;:0,\&quot;viewMode\&quot;:\&quot;split\&quot;,\&quot;leftContent\&quot;:\&quot;Account\&quot;}},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:15319,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;one:consolePersistenceManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-retrieve-consoleState\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consolePersistenceManager-retrieve\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;appId\&quot;:\&quot;${_appDefinition}\&quot;,\&quot;responseState\&quot;:\&quot;SUCCESS\&quot;,\&quot;category\&quot;:\&quot;mostRecentlyUsed\&quot;}},\&quot;sequence\&quot;:3,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:15652,\&quot;duration\&quot;:1011,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:1,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:15654,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://aura:component\&quot;,\&quot;markup://ui:virtualList\&quot;,\&quot;markup://ui:virtualDataGrid\&quot;,\&quot;markup://ui:virtualDataTable\&quot;,\&quot;markup://aura:application\&quot;,\&quot;markup://force:slds\&quot;,\&quot;markup://force:sldsDynamic\&quot;,\&quot;markup://one:one\&quot;,\&quot;markup://force:themeCssVarLoader\&quot;,\&quot;markup://aura:expression\&quot;,\&quot;markup://aura:html\&quot;,\&quot;markup://aura:text\&quot;,\&quot;markup://force:fingerprint\&quot;,\&quot;markup://force:defenseHook\&quot;,\&quot;markup://one:auraSystemErrorHandler\&quot;,\&quot;markup://one:auraCustomerErrorHandler\&quot;,\&quot;markup://force:downloadHandler\&quot;,\&quot;markup://force:hostConfig\&quot;,\&quot;markup://force:switchToNetworkHandler\&quot;,\&quot;markup://instrumentation:beacon\&quot;,\&quot;markup://laf:platformRouter\&quot;,\&quot;markup://laf:baseRouter\&quot;,\&quot;markup://laf:sObjectRouter\&quot;,\&quot;markup://force:setupRouter\&quot;,\&quot;markup://objectManager:objectManagerRouter\&quot;,\&quot;markup://force:personalSettingsPageRouter\&quot;,\&quot;markup://forceChatter:router\&quot;,\&quot;markup://laf:directCmpReferenceRouter\&quot;,\&quot;markup://laf:navigationServiceAPI\&quot;,\&quot;markup://laf:appContextService\&quot;,\&quot;markup://one:utils\&quot;,\&quot;markup://force:style\&quot;,\&quot;markup://force:access\&quot;,\&quot;markup://laf:appLayoutHost\&quot;,\&quot;markup://force:alohaUrlService\&quot;,\&quot;markup://force:quickActionHandler\&quot;,\&quot;markup://laf:layoutContainer\&quot;,\&quot;markup://laf:platformPageResolver\&quot;,\&quot;markup://force:adsBridge\&quot;,\&quot;markup://aura:if\&quot;,\&quot;markup://runtime_all_walkthroughs:player\&quot;,\&quot;markup://one:onboardingManagerWrapper\&quot;,\&quot;markup://lightning:navigation\&quot;,\&quot;markup://ui:image\&quot;,\&quot;markup://force:icon\&quot;,\&quot;markup://lightning:icon\&quot;,\&quot;markup://ui:datePickerManager\&quot;,\&quot;markup://support:outputPhoneManager\&quot;,\&quot;markup://emailStream:connectEmailWrapper\&quot;,\&quot;markup://emailStream:connectEmail\&quot;,\&quot;markup://one:sessionManager\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWarn\&quot;,\&quot;markup://salesforceIdentity:sessionTimeoutWatcher\&quot;,\&quot;markup://voice:getVendorLine\&quot;,\&quot;markup://one:establishVFSessionComponent\&quot;,\&quot;markup://one:consoleLayoutContainer2\&quot;,\&quot;markup://force:pageInfo\&quot;,\&quot;markup://laf:navEventManager\&quot;,\&quot;markup://laf:urlProcessor\&quot;,\&quot;markup://force:recordActionEventManager\&quot;,\&quot;markup://one:layoutContainerLib\&quot;,\&quot;markup://one:recordActionsLib\&quot;,\&quot;markup://force:dirtyStateManager\&quot;,\&quot;markup://one:consolePersistenceManager\&quot;,\&quot;markup://one:consoleAppCustomizationDefault\&quot;,\&quot;markup://laf:baseLayoutContainer\&quot;,\&quot;markup://support:crossFrameApiManager\&quot;,\&quot;markup://one:keyboardShortcutListener\&quot;,\&quot;markup://one:helpAndTrainingKeyboardShortcuts\&quot;,\&quot;markup://one:actionsManager\&quot;,\&quot;markup://force:targetInteractionHandler\&quot;,\&quot;markup://runtime_rtc:rtcDiscoveryBanner\&quot;,\&quot;markup://forceChatter:editManager\&quot;,\&quot;markup://forceContent:contentHubAuthenticationBanner\&quot;,\&quot;markup://force:quickActionManager\&quot;,\&quot;markup://one:panelService\&quot;,\&quot;markup://force:inlineSpinner\&quot;,\&quot;markup://force:loadingLaser\&quot;,\&quot;markup://force:localRecordChangeObserver\&quot;,\&quot;markup://forceChatter:feedEventsProcessor\&quot;,\&quot;markup://forceChatter:s1FeedsProxy\&quot;,\&quot;markup://one:iframeMessageManager\&quot;,\&quot;markup://lightning:messageDispatcher\&quot;,\&quot;markup://one:apiHandler\&quot;,\&quot;markup://force:userAssistancePlatform\&quot;,\&quot;markup://force:componentSpinner\&quot;,\&quot;markup://force:dotsSpinner\&quot;,\&quot;markup://one:header\&quot;,\&quot;markup://forceSearch:desktopHeaderManager\&quot;,\&quot;markup://forceSearch:base\&quot;,\&quot;markup://forceSearch:baseSearch\&quot;,\&quot;markup://forceSearch:desktopHeader\&quot;,\&quot;markup://forceSearch:groupContainer\&quot;,\&quot;markup://forceSearch:inputEntitySelector\&quot;,\&quot;markup://ui:dataProvider\&quot;,\&quot;markup://forceSearch:inputEntitySelectorDataProvider\&quot;,\&quot;markup://lightning:groupedCombobox\&quot;,\&quot;markup://forceSearch:baseSearchInput\&quot;,\&quot;markup://forceSearch:input\&quot;,\&quot;markup://forceSearch:inputDesktop\&quot;,\&quot;markup://forceSearch:optionDataProvider\&quot;,\&quot;markup://forceSearch:inputDataProvider\&quot;,\&quot;markup://forceSearch:inputDesktopDataProvider\&quot;,\&quot;markup://forceSearch:actionDataProvider\&quot;,\&quot;markup://forceSearch:mruDataProvider\&quot;,\&quot;markup://forceSearch:typeAheadDataProvider\&quot;,\&quot;markup://ui:resizeObserver\&quot;,\&quot;markup://forceSearch:inputDesktopPillWrapper\&quot;,\&quot;markup://ui:input\&quot;,\&quot;markup://ui:autocomplete\&quot;,\&quot;markup://forceSearch:searchInputListHeader\&quot;,\&quot;markup://forceSearch:inputDesktopListFooter\&quot;,\&quot;markup://ui:inputTextForAutocomplete\&quot;,\&quot;markup://forceSearch:searchGDP\&quot;,\&quot;markup://forceSearch:searchGDPCache\&quot;,\&quot;markup://forceSearch:searchGDPCacheActivity\&quot;,\&quot;markup://forceSearch:searchGDPCacheMrus\&quot;,\&quot;markup://forceSearch:searchGDPCachePermsAndPrefs\&quot;,\&quot;markup://forceSearch:searchGDPCacheResultsFilters\&quot;,\&quot;markup://forceSearch:searchGDPCacheScopes\&quot;,\&quot;markup://search_lightning:store\&quot;,\&quot;markup://forceSearch:experimentContextInitializer\&quot;,\&quot;markup://one:globalNav\&quot;,\&quot;markup://one:consoleNav\&quot;,\&quot;markup://one:appNavMenu\&quot;,\&quot;markup://lightning:buttonIcon\&quot;,\&quot;markup://lightning:tooltipLibrary\&quot;,\&quot;markup://lightning:primitiveIcon\&quot;,\&quot;markup://one:consoleTabContainer\&quot;,\&quot;markup://aura:iteration\&quot;,\&quot;markup://ui:popup\&quot;,\&quot;markup://ui:menu\&quot;,\&quot;markup://ui:interactive\&quot;,\&quot;markup://ui:popupTrigger\&quot;,\&quot;markup://ui:menuTriggerLink\&quot;,\&quot;markup://ui:popupTarget\&quot;,\&quot;markup://ui:menuList\&quot;,\&quot;markup://one:consoleLi\&quot;,\&quot;markup://salesforceIdentity:appLauncherManager\&quot;,\&quot;markup://salesforceIdentity:appLauncherHeader\&quot;,\&quot;markup://force:headerButton\&quot;,\&quot;markup://ui:button\&quot;,\&quot;markup://ui:tooltip\&quot;,\&quot;markup://force:skipLink\&quot;,\&quot;markup://force:onboardingManagerLib\&quot;,\&quot;markup://one:systemMessage\&quot;,\&quot;markup://one:ept\&quot;,\&quot;markup://auraStorage:fuelGauge\&quot;,\&quot;markup://one:favorites\&quot;,\&quot;markup://one:globalCreate\&quot;,\&quot;markup://one:globalCreateIcon\&quot;,\&quot;markup://one:helpAndTrainingExperience\&quot;,\&quot;markup://force:headerMenuTrigger\&quot;,\&quot;markup://setup:gear\&quot;,\&quot;markup://uns:notifications\&quot;,\&quot;markup://force:empApi\&quot;,\&quot;markup://one:userProfileCardTrigger\&quot;,\&quot;markup://force:record\&quot;,\&quot;markup://one:userProfileCardData\&quot;,\&quot;markup://one:leftContentWrapper\&quot;,\&quot;markup://laf:pageHost\&quot;,\&quot;markup://laf:pageCapability\&quot;,\&quot;markup://laf:windowUpdate\&quot;,\&quot;markup://one:workspaceCollection\&quot;,\&quot;markup://flexipage:page\&quot;,\&quot;markup://one:addressableModalManager\&quot;,\&quot;markup://lightning:workspaceAPI\&quot;,\&quot;markup://one:consoleEventBroker\&quot;,\&quot;markup://one:consoleTabScrollManager\&quot;,\&quot;markup://forceContent:filesManager\&quot;,\&quot;markup://forceContent:modalPreviewManager\&quot;,\&quot;markup://ui:containerManager\&quot;,\&quot;markup://ui:panelManager2\&quot;,\&quot;markup://one:panelManager\&quot;,\&quot;markup://force:modalSpinner\&quot;,\&quot;markup://notes:editPanelManager\&quot;,\&quot;markup://force:draggableResizablePanelManager\&quot;,\&quot;markup://ui:asyncComponentManager\&quot;,\&quot;markup://instrumentation:uiManager\&quot;,\&quot;markup://force:massErrorsManager\&quot;,\&quot;markup://force:hoverPrototypeManager\&quot;,\&quot;markup://force:hoverPrototype\&quot;,\&quot;markup://force:appMessageManager\&quot;,\&quot;markup://one:celebrationManager\&quot;,\&quot;markup://force:toastManager\&quot;,\&quot;markup://force:visualMessageQueue\&quot;,\&quot;markup://force:logoutHandler\&quot;,\&quot;markup://one:consolePersistenceForceLogoutPlugin\&quot;,\&quot;markup://ui:label\&quot;,\&quot;markup://one:fp0M03M00000006DQSAY__pageWithoutSobject__1600945370000\&quot;,\&quot;markup://flexipage:runtimeBackgroundComponentsWrapper\&quot;,\&quot;markup://one:utilityBar\&quot;,\&quot;markup://flexipage:runtimeComponent\&quot;,\&quot;markup://flexipage:componentDecorator\&quot;,\&quot;markup://one:utilityBarItem\&quot;,\&quot;markup://one:dockingPanelManager\&quot;,\&quot;markup://force:panelApi\&quot;,\&quot;markup://one:utilityBarContainer\&quot;,\&quot;markup://one:utilPanelManager\&quot;,\&quot;markup://force:dockingPanelOverflow\&quot;,\&quot;markup://uns:notificationsCounter\&quot;,\&quot;markup://isotope:headerButton\&quot;,\&quot;markup://lightning:spinner\&quot;,\&quot;markup://isotope:error\&quot;,\&quot;markup://isotope:subscriptionModal\&quot;,\&quot;markup://isotope:serviceAPI\&quot;],\&quot;pageCounter\&quot;:1,\&quot;phase\&quot;:\&quot;navFromPage\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;unknown\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;context\&quot;:\&quot;unknown\&quot;,\&quot;attributes\&quot;:{\&quot;tryToSetPageLater\&quot;:true}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:14642,\&quot;duration\&quot;:1007,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:15121,\&quot;context\&quot;:{\&quot;flexipageType\&quot;:\&quot;UtilityBar\&quot;,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;one:utilityBarTemplateDesktop\&quot;,\&quot;numVisibleRegions\&quot;:1,\&quot;flexipageRenderer\&quot;:\&quot;Aura\&quot;,\&quot;isCustom\&quot;:true,\&quot;numBackgroundRegions\&quot;:1,\&quot;flexipageName\&quot;:\&quot;0M03M00000006DQSAY\&quot;},\&quot;owner\&quot;:\&quot;flexipage:page\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:15023,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:1,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:39,\&quot;startTime\&quot;:15023,\&quot;fetchStart\&quot;:15023,\&quot;requestStart\&quot;:15023,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:39,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:137595,\&quot;decodedBodySize\&quot;:747963,\&quot;serverTime\&quot;:91,\&quot;defs\&quot;:[\&quot;markup://console:history\&quot;,\&quot;markup://flexipage:card\&quot;,\&quot;markup://flexipage:componentDecorator\&quot;,\&quot;markup://flexipage:filterListCard\&quot;,\&quot;markup://force:baseCard\&quot;,\&quot;markup://force:baseCardActionTriggered\&quot;,\&quot;markup://force:card\&quot;,\&quot;markup://force:copyToClipboard\&quot;,\&quot;markup://force:copyToClipboardButton\&quot;],\&quot;xhrDelay\&quot;:56},\&quot;duration\&quot;:95},{\&quot;ts\&quot;:15206,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:2,\&quot;auraXHRId\&quot;:2,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:36466,\&quot;xhrDuration\&quot;:375,\&quot;xhrStall\&quot;:15,\&quot;startTime\&quot;:14902,\&quot;fetchStart\&quot;:14902,\&quot;requestStart\&quot;:14917,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:360,\&quot;transferSize\&quot;:37517,\&quot;serverTime\&quot;:31,\&quot;xhrDelay\&quot;:-303},\&quot;duration\&quot;:72}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:14899,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;327;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:hostConfig\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:10,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:31,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:401},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;116;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:21,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:428},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;117;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:429},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;199;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:9,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:30,\&quot;duration\&quot;:459},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;217;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:6,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:461},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;236;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:462},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;240;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:463},{\&quot;ts\&quot;:14890,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;250;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:20,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:91,\&quot;boxCarCount\&quot;:7},\&quot;callbackTime\&quot;:137,\&quot;duration\&quot;:600}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:195,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:headerButton\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:71},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:14},{\&quot;name\&quot;:\&quot;one:fp0M03M00000006DQSAY__pageWithoutSobject__1600945370000\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:56},{\&quot;name\&quot;:\&quot;isotope:headerButton\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18},{\&quot;name\&quot;:\&quot;lightning:buttonIcon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15}]}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}},\&quot;attributes\&quot;:{\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:true,\&quot;eptDeviationReason\&quot;:\&quot;PageNotLoaded\&quot;,\&quot;backgroundTime\&quot;:0,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;bootstrapType\&quot;:\&quot;WARM\&quot;,\&quot;defaultCmp\&quot;:[\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;,\&quot;one:utilityBarItem\&quot;],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;sequence\&quot;:1,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:15913,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-load-workspaces\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleLayoutContainer-loadWorkspacesFromPersistence\&quot;,\&quot;scope\&quot;:\&quot;one-one\&quot;,\&quot;context\&quot;:{\&quot;numWorkspacesToLoad\&quot;:0,\&quot;numSubtabsToLoad\&quot;:0,\&quot;viewMode\&quot;:\&quot;split\&quot;,\&quot;previousViewMode\&quot;:\&quot;split\&quot;,\&quot;selectedList.type\&quot;:\&quot;standard__objectPage\&quot;,\&quot;selectedList.attributes.objectApiName\&quot;:\&quot;Account\&quot;,\&quot;selectedList.attributes.actionName\&quot;:\&quot;list\&quot;,\&quot;selectedList.componentDefRef.componentDef\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;selectedList.componentDefRef.attributes.scope\&quot;:\&quot;Account\&quot;,\&quot;selectedList.componentDefRef.attributes.filterName\&quot;:\&quot;Recent\&quot;,\&quot;selectedList.componentDefRef.attributes.isCompactView\&quot;:true,\&quot;selectedList.componentDefRef.attributes.refreshInBackground\&quot;:true,\&quot;selectedList.componentDefRef.attributes.retURL\&quot;:\&quot;${scheme}://alpha--qaall.lightning.force.com/lightning/o/Account/list?filterName=Recent\&quot;,\&quot;selectedList.state.filterName\&quot;:\&quot;Recent\&quot;}},\&quot;sequence\&quot;:5,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:15937,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-setItems-write-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;collected\&quot;:1,\&quot;storables\&quot;:1,\&quot;first_key\&quot;:\&quot;00D3M0000008my90053M000000W0un50.0:serviceComponent://ui.force.components.controllers.hostConfig.HostConfigController/ACTION$getConfigData:PARAMS_REMOVED\&quot;,\&quot;elapsed\&quot;:625,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:15938,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:972,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:15947,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;cryptoStorage-keymismatch\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:16820,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-walkInternal-read-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;count\&quot;:1,\&quot;size\&quot;:0,\&quot;elapsed\&quot;:847,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:17347,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;force:record\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0053M000000W0unQAC\&quot;,\&quot;recordType\&quot;:\&quot;User\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:6,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:17436,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-indexeddb-open-transaction\&quot;,\&quot;attributes\&quot;:{\&quot;wasBlocked\&quot;:false,\&quot;wasUpgraded\&quot;:true,\&quot;initSucceeded\&quot;:true,\&quot;elapsed\&quot;:635,\&quot;visibilityStateStart\&quot;:true,\&quot;visibilityStateEnd\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:17531,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-56446a367a5141622b733878526f396f464f424266513d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:17759,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;force:recordCollection\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;reads\&quot;,\&quot;attributes\&quot;:{\&quot;recordIds\&quot;:[\&quot;0013M0000059VLgQAM\&quot;,\&quot;0013M0000059VLlQAM\&quot;,\&quot;0013M0000059VLfQAM\&quot;,\&quot;0013M0000059VLeQAM\&quot;,\&quot;0013M0000059VUsQAM\&quot;,\&quot;0013M0000059VUrQAM\&quot;,\&quot;0013M0000059VUqQAM\&quot;,\&quot;0013M0000059VUpQAM\&quot;,\&quot;0013M0000059VUvQAM\&quot;,\&quot;0013M0000059VUuQAM\&quot;,\&quot;0013M0000059VUtQAM\&quot;,\&quot;0013M0000059VLmQAM\&quot;,\&quot;0013M0000059VLkQAM\&quot;,\&quot;0013M0000059VLhQAM\&quot;,\&quot;0013M0000059VLjQAM\&quot;,\&quot;0013M0000059VLiQAM\&quot;],\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;reads\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:7,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:17134,\&quot;duration\&quot;:649,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;listViewDataManager:handleLoadByOffset\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17760,\&quot;context\&quot;:{\&quot;recordIdsLength\&quot;:16,\&quot;totalItems\&quot;:16,\&quot;entityName\&quot;:\&quot;Account\&quot;,\&quot;filterName\&quot;:\&quot;Recent\&quot;,\&quot;layoutType\&quot;:\&quot;SEARCH\&quot;,\&quot;isLoadMore\&quot;:true,\&quot;isSearched\&quot;:false,\&quot;isFiltered\&quot;:false},\&quot;owner\&quot;:\&quot;force:listViewDataManager\&quot;},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:17135,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():30\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:642}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:17140,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;744;a\&quot;],\&quot;requestId\&quot;:\&quot;1714000000088a3cad\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:411,\&quot;xhrStall\&quot;:18,\&quot;startTime\&quot;:17141,\&quot;fetchStart\&quot;:17141,\&quot;requestStart\&quot;:17159,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:393,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:41,\&quot;xhrDelay\&quot;:16},\&quot;duration\&quot;:427},{\&quot;ts\&quot;:17534,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:25,\&quot;startTime\&quot;:17535,\&quot;fetchStart\&quot;:17535,\&quot;requestStart\&quot;:17535,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:25,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6040,\&quot;decodedBodySize\&quot;:42521,\&quot;serverTime\&quot;:14,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:148},\&quot;duration\&quot;:173},{\&quot;ts\&quot;:17238,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;773;a\&quot;],\&quot;requestId\&quot;:\&quot;17238000000b6d0636\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1815,\&quot;xhrDuration\&quot;:399,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:17239,\&quot;fetchStart\&quot;:17239,\&quot;requestStart\&quot;:17252,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:380,\&quot;transferSize\&quot;:2878,\&quot;serverTime\&quot;:47,\&quot;xhrDelay\&quot;:128},\&quot;duration\&quot;:527}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:17141,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;744;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:41,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:427}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:97,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:socialPhoto\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15},{\&quot;name\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:5},{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:50},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:26},{\&quot;name\&quot;:\&quot;ui:menuItem\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:1}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17785,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:18,\&quot;storeBroadcast\&quot;:2}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-fetch-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604224111132,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:3,\&quot;actionId\&quot;:\&quot;773;a\&quot;,\&quot;fetchedScopeMaps\&quot;:1,\&quot;tSending\&quot;:1604224111778,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1604224111778,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:646,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;entityNames:Account\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1604224111783,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:17387,\&quot;duration\&quot;:425,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;listViewDataManager:handleLoadByOffset\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17760,\&quot;context\&quot;:{\&quot;recordIdsLength\&quot;:16,\&quot;totalItems\&quot;:16,\&quot;entityName\&quot;:\&quot;Account\&quot;,\&quot;filterName\&quot;:\&quot;Recent\&quot;,\&quot;layoutType\&quot;:\&quot;SEARCH\&quot;,\&quot;isLoadMore\&quot;:true,\&quot;isSearched\&quot;:false,\&quot;isFiltered\&quot;:false},\&quot;owner\&quot;:\&quot;force:listViewDataManager\&quot;},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction794;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17812,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:17534,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:25,\&quot;startTime\&quot;:17535,\&quot;fetchStart\&quot;:17535,\&quot;requestStart\&quot;:17535,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:25,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6040,\&quot;decodedBodySize\&quot;:42521,\&quot;serverTime\&quot;:14,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:148},\&quot;duration\&quot;:173},{\&quot;ts\&quot;:17389,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;794;a\&quot;],\&quot;requestId\&quot;:\&quot;17388000000a289025\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1546,\&quot;xhrDuration\&quot;:348,\&quot;xhrStall\&quot;:19,\&quot;startTime\&quot;:17390,\&quot;fetchStart\&quot;:17390,\&quot;requestStart\&quot;:17409,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:329,\&quot;transferSize\&quot;:2597,\&quot;serverTime\&quot;:18,\&quot;xhrDelay\&quot;:63},\&quot;duration\&quot;:411}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:84,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:50},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:26},{\&quot;name\&quot;:\&quot;ui:menuItem\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:1},{\&quot;name\&quot;:\&quot;force:entityIcon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:7}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17812,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:17,\&quot;storeBroadcast\&quot;:2}}]},\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-socialPhotoBatchAction\&quot;,\&quot;attributes\&quot;:{\&quot;keyPrefixes\&quot;:[\&quot;005\&quot;],\&quot;transactionId\&quot;:\&quot;794;a\&quot;,\&quot;numProcessedIds\&quot;:1,\&quot;usageInfo\&quot;:{\&quot;sAction\&quot;:\&quot;resolvePhotos\&quot;,\&quot;gusTeamId\&quot;:\&quot;a00B0000003ZxZGIA0\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:17132,\&quot;duration\&quot;:1028,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;listViewDataManager:handleLoadByOffset\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17760,\&quot;context\&quot;:{\&quot;recordIdsLength\&quot;:16,\&quot;totalItems\&quot;:16,\&quot;entityName\&quot;:\&quot;Account\&quot;,\&quot;filterName\&quot;:\&quot;Recent\&quot;,\&quot;layoutType\&quot;:\&quot;SEARCH\&quot;,\&quot;isLoadMore\&quot;:true,\&quot;isSearched\&quot;:false,\&quot;isFiltered\&quot;:false},\&quot;owner\&quot;:\&quot;force:listViewDataManager\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.17909\&quot;,\&quot;ts\&quot;:17909,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1089:0\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-56446a367a5141622b733878526f396f464f424266513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:17135,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():30\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:642},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction794;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17812,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:17140,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;744;a\&quot;],\&quot;requestId\&quot;:\&quot;1714000000088a3cad\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:411,\&quot;xhrStall\&quot;:18,\&quot;startTime\&quot;:17141,\&quot;fetchStart\&quot;:17141,\&quot;requestStart\&quot;:17159,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:393,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:41,\&quot;xhrDelay\&quot;:16},\&quot;duration\&quot;:427},{\&quot;ts\&quot;:17534,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:25,\&quot;startTime\&quot;:17535,\&quot;fetchStart\&quot;:17535,\&quot;requestStart\&quot;:17535,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:25,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6040,\&quot;decodedBodySize\&quot;:42521,\&quot;serverTime\&quot;:14,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:148},\&quot;duration\&quot;:173},{\&quot;ts\&quot;:17238,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;773;a\&quot;],\&quot;requestId\&quot;:\&quot;17238000000b6d0636\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1815,\&quot;xhrDuration\&quot;:399,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:17239,\&quot;fetchStart\&quot;:17239,\&quot;requestStart\&quot;:17252,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:380,\&quot;transferSize\&quot;:2878,\&quot;serverTime\&quot;:47,\&quot;xhrDelay\&quot;:128},\&quot;duration\&quot;:527},{\&quot;ts\&quot;:17389,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;794;a\&quot;],\&quot;requestId\&quot;:\&quot;17388000000a289025\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1546,\&quot;xhrDuration\&quot;:348,\&quot;xhrStall\&quot;:19,\&quot;startTime\&quot;:17390,\&quot;fetchStart\&quot;:17390,\&quot;requestStart\&quot;:17409,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:329,\&quot;transferSize\&quot;:2597,\&quot;serverTime\&quot;:18,\&quot;xhrDelay\&quot;:63},\&quot;duration\&quot;:411}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:17141,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;744;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:41,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:427},{\&quot;ts\&quot;:17135,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;773;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:98,\&quot;enqueueWait\&quot;:5,\&quot;serverTime\&quot;:{\&quot;total\&quot;:30,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:47,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:14,\&quot;duration\&quot;:651},{\&quot;ts\&quot;:17387,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;794;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:18,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:425}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:155,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:socialPhoto\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:15},{\&quot;name\&quot;:\&quot;ui:scroller\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:51},{\&quot;name\&quot;:\&quot;one:actionsRibbon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:50},{\&quot;name\&quot;:\&quot;ui:menu\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:26},{\&quot;name\&quot;:\&quot;force:entityIcon\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:7}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:18162,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:18,\&quot;storeBroadcast\&quot;:2}}]},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604224111132,\&quot;cacheHit\&quot;:false,\&quot;etCacheGet\&quot;:3,\&quot;actionId\&quot;:\&quot;773;a\&quot;,\&quot;fetchedScopeMaps\&quot;:1,\&quot;tSending\&quot;:1604224111778,\&quot;etDataCopy\&quot;:0,\&quot;tEnd\&quot;:1604224112160,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1028,\&quot;requestId\&quot;:\&quot;forceSearchInputDesktop:125:0;p\&quot;,\&quot;requestCmp\&quot;:\&quot;forceSearchInputDesktop\&quot;,\&quot;requestCmpId\&quot;:\&quot;125:0;p\&quot;,\&quot;params\&quot;:[\&quot;0:entityNames:Account\&quot;],\&quot;etSendDataWait\&quot;:382,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1604224112161,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;sobjectType\&quot;:\&quot;Account\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:15656,\&quot;duration\&quot;:2599,\&quot;pageStartTime\&quot;:1604224094000,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:15687,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:190},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;force:listViewPicker.init\&quot;,\&quot;ts\&quot;:15765,\&quot;context\&quot;:{\&quot;listViewId\&quot;:\&quot;Recent\&quot;},\&quot;owner\&quot;:\&quot;force:listViewPicker\&quot;,\&quot;duration\&quot;:1402},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;actions:MRU_LIST-Account\&quot;,\&quot;ts\&quot;:17091,\&quot;context\&quot;:{\&quot;context\&quot;:\&quot;MRU_LIST\&quot;,\&quot;entityApiName\&quot;:\&quot;Account\&quot;,\&quot;recordId\&quot;:null,\&quot;listNameOrId\&quot;:\&quot;Recent\&quot;,\&quot;actionsNumber\&quot;:2,\&quot;standardActions\&quot;:[\&quot;New\&quot;,\&quot;Import\&quot;],\&quot;quickActions\&quot;:[],\&quot;customButtons\&quot;:[],\&quot;otherActions\&quot;:[],\&quot;enableActionsConfiguration\&quot;:false,\&quot;StandardButton\&quot;:2},\&quot;owner\&quot;:\&quot;force:actionsContainer\&quot;,\&quot;duration\&quot;:482},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;listViewDataManager:handleLoadByOffset\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17760,\&quot;context\&quot;:{\&quot;recordIdsLength\&quot;:16,\&quot;totalItems\&quot;:16,\&quot;entityName\&quot;:\&quot;Account\&quot;,\&quot;filterName\&quot;:\&quot;Recent\&quot;,\&quot;layoutType\&quot;:\&quot;SEARCH\&quot;,\&quot;isLoadMore\&quot;:true,\&quot;isSearched\&quot;:false,\&quot;isFiltered\&quot;:false},\&quot;owner\&quot;:\&quot;force:listViewDataManager\&quot;},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;recordLayout:initToAfterRender.17909\&quot;,\&quot;ts\&quot;:17909,\&quot;context\&quot;:{\&quot;globalId\&quot;:\&quot;1089:0\&quot;,\&quot;metaRecordLayoutQualifiedName\&quot;:\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-56446a367a5141622b733878526f396f464f424266513d3d.c\&quot;},\&quot;owner\&quot;:\&quot;force:recordLayout\&quot;,\&quot;duration\&quot;:7},{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-getScopeMaps\&quot;,\&quot;ts\&quot;:17135,\&quot;context\&quot;:{\&quot;times\&quot;:\&quot;SCC.getScopeMapsInternal():30\&quot;},\&quot;owner\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;duration\&quot;:642},{\&quot;ns\&quot;:\&quot;socialPhotoBatchAction794;a\&quot;,\&quot;name\&quot;:\&quot;SocialPhotoBatchAction is successful\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:17812,\&quot;context\&quot;:null,\&quot;owner\&quot;:\&quot;force:socialPhoto\&quot;}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:15951,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:3,\&quot;auraXHRId\&quot;:3,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2020,\&quot;xhrDuration\&quot;:516,\&quot;xhrStall\&quot;:15,\&quot;startTime\&quot;:15878,\&quot;fetchStart\&quot;:15878,\&quot;requestStart\&quot;:15893,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:15,\&quot;transfer\&quot;:501,\&quot;transferSize\&quot;:3156,\&quot;serverTime\&quot;:115,\&quot;xhrDelay\&quot;:355},\&quot;duration\&quot;:871},{\&quot;ts\&quot;:16598,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:4,\&quot;requestLength\&quot;:1267,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;640;a\&quot;,\&quot;649;a\&quot;],\&quot;requestId\&quot;:\&quot;1659800000093693b3\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1657,\&quot;xhrDuration\&quot;:397,\&quot;xhrStall\&quot;:12,\&quot;startTime\&quot;:16600,\&quot;fetchStart\&quot;:16600,\&quot;requestStart\&quot;:16612,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:12,\&quot;transfer\&quot;:385,\&quot;transferSize\&quot;:2715,\&quot;serverTime\&quot;:50,\&quot;xhrDelay\&quot;:238},\&quot;duration\&quot;:635},{\&quot;ts\&quot;:16813,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:5,\&quot;requestLength\&quot;:1490,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;703;a\&quot;,\&quot;704;a\&quot;,\&quot;705;a\&quot;],\&quot;requestId\&quot;:\&quot;16813000000d5b8de8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2104,\&quot;xhrDuration\&quot;:439,\&quot;xhrStall\&quot;:9,\&quot;startTime\&quot;:16815,\&quot;fetchStart\&quot;:16815,\&quot;requestStart\&quot;:16824,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:11,\&quot;transfer\&quot;:428,\&quot;transferSize\&quot;:3155,\&quot;serverTime\&quot;:69,\&quot;xhrDelay\&quot;:9},\&quot;duration\&quot;:448},{\&quot;ts\&quot;:16863,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:6,\&quot;requestLength\&quot;:1128,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;706;a\&quot;],\&quot;requestId\&quot;:\&quot;168630000007e6a5e7\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2173,\&quot;xhrDuration\&quot;:468,\&quot;xhrStall\&quot;:62,\&quot;startTime\&quot;:16863,\&quot;fetchStart\&quot;:16863,\&quot;requestStart\&quot;:16925,\&quot;dns\&quot;:6,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:73,\&quot;transfer\&quot;:395,\&quot;transferSize\&quot;:3229,\&quot;serverTime\&quot;:45,\&quot;xhrDelay\&quot;:11},\&quot;duration\&quot;:479},{\&quot;ts\&quot;:17008,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:7,\&quot;requestLength\&quot;:1828,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;721;a\&quot;,\&quot;724;a\&quot;],\&quot;requestId\&quot;:\&quot;17008000000dd363d2\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:46146,\&quot;xhrDuration\&quot;:455,\&quot;xhrStall\&quot;:16,\&quot;startTime\&quot;:17010,\&quot;fetchStart\&quot;:17010,\&quot;requestStart\&quot;:17026,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:439,\&quot;transferSize\&quot;:47473,\&quot;serverTime\&quot;:103,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:458},{\&quot;ts\&quot;:17140,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:8,\&quot;requestLength\&quot;:1382,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;744;a\&quot;],\&quot;requestId\&quot;:\&quot;1714000000088a3cad\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3047,\&quot;xhrDuration\&quot;:411,\&quot;xhrStall\&quot;:18,\&quot;startTime\&quot;:17141,\&quot;fetchStart\&quot;:17141,\&quot;requestStart\&quot;:17159,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:18,\&quot;transfer\&quot;:393,\&quot;transferSize\&quot;:4116,\&quot;serverTime\&quot;:41,\&quot;xhrDelay\&quot;:16},\&quot;duration\&quot;:427},{\&quot;ts\&quot;:17534,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:4,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:25,\&quot;startTime\&quot;:17535,\&quot;fetchStart\&quot;:17535,\&quot;requestStart\&quot;:17535,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:25,\&quot;transfer\&quot;:0,\&quot;transferSize\&quot;:0,\&quot;encodedBodySize\&quot;:6040,\&quot;decodedBodySize\&quot;:42521,\&quot;serverTime\&quot;:14,\&quot;defs\&quot;:[\&quot;markup://force:outputAddress\&quot;,\&quot;markup://force:outputField\&quot;,\&quot;markup://force:outputFieldInternal\&quot;,\&quot;markup://force:outputFile\&quot;,\&quot;markup://force:outputImage\&quot;,\&quot;markup://force:outputLocation\&quot;,\&quot;markup://force:outputName\&quot;,\&quot;markup://force:outputNameForUser\&quot;,\&quot;markup://force:outputNoteorAttachment\&quot;],\&quot;xhrDelay\&quot;:148},\&quot;duration\&quot;:173},{\&quot;ts\&quot;:17238,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:9,\&quot;requestLength\&quot;:1070,\&quot;background\&quot;:true,\&quot;actionDefs\&quot;:[\&quot;773;a\&quot;],\&quot;requestId\&quot;:\&quot;17238000000b6d0636\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1815,\&quot;xhrDuration\&quot;:399,\&quot;xhrStall\&quot;:13,\&quot;startTime\&quot;:17239,\&quot;fetchStart\&quot;:17239,\&quot;requestStart\&quot;:17252,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:380,\&quot;transferSize\&quot;:2878,\&quot;serverTime\&quot;:47,\&quot;xhrDelay\&quot;:128},\&quot;duration\&quot;:527},{\&quot;ts\&quot;:17389,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:10,\&quot;requestLength\&quot;:1119,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;794;a\&quot;],\&quot;requestId\&quot;:\&quot;17388000000a289025\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1546,\&quot;xhrDuration\&quot;:348,\&quot;xhrStall\&quot;:19,\&quot;startTime\&quot;:17390,\&quot;fetchStart\&quot;:17390,\&quot;requestStart\&quot;:17409,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:19,\&quot;transfer\&quot;:329,\&quot;transferSize\&quot;:2597,\&quot;serverTime\&quot;:18,\&quot;xhrDelay\&quot;:63},\&quot;duration\&quot;:411}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:15875,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;510;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManager.ListViewManagerController/ACTION$getMetadataInitialLoad\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:2,\&quot;serverTime\&quot;:{\&quot;total\&quot;:97,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:115,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:951},{\&quot;ts\&quot;:16409,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;640;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_liveagent:chatMessenger\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.ChatConfigController/ACTION$getChatConfiguration\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:189,\&quot;serverTime\&quot;:{\&quot;total\&quot;:19,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:49,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:827},{\&quot;ts\&quot;:16421,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;649;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:status\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.StatusController/ACTION$getStatuses\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:177,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:49,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:816},{\&quot;ts\&quot;:16801,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;703;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getSCRTInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:12,\&quot;serverTime\&quot;:{\&quot;total\&quot;:25,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:68,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:3,\&quot;duration\&quot;:463},{\&quot;ts\&quot;:16801,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;704;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$isDeclineReasonEnabled\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:12,\&quot;serverTime\&quot;:{\&quot;total\&quot;:15,\&quot;db\&quot;:6,\&quot;xhrServerTime\&quot;:68,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:463},{\&quot;ts\&quot;:16801,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;705;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.liveagent.components.aura.controller.OmniWidgetController/ACTION$getDeclineReasons\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:12,\&quot;serverTime\&quot;:{\&quot;total\&quot;:4,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:68,\&quot;boxCarCount\&quot;:3},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:464},{\&quot;ts\&quot;:16863,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;706;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:28,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:45,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:489},{\&quot;ts\&quot;:16992,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;721;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:virtualRecordList\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.virtualRecordList.VirtualRecordListController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:16,\&quot;serverTime\&quot;:{\&quot;total\&quot;:38,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:102,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:539},{\&quot;ts\&quot;:16995,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;724;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewDataManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewDataManager.ListViewDataManagerController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:13,\&quot;serverTime\&quot;:{\&quot;total\&quot;:42,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:102,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:536},{\&quot;ts\&quot;:17094,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;744;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;one:actionsManager\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.actionsManager.ActionsManagerController/ACTION$handleAction\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:46,\&quot;serverTime\&quot;:{\&quot;total\&quot;:24,\&quot;db\&quot;:5,\&quot;xhrServerTime\&quot;:41,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:474},{\&quot;ts\&quot;:17135,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;773;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:true,\&quot;cmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:98,\&quot;enqueueWait\&quot;:5,\&quot;serverTime\&quot;:{\&quot;total\&quot;:30,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:47,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:14,\&quot;duration\&quot;:651},{\&quot;ts\&quot;:17387,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;794;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:socialPhotoController\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.socialPhoto.SocialPhotoController/ACTION$resolvePhotos\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:2,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:18,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:11,\&quot;duration\&quot;:425}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:870,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:189},{\&quot;name\&quot;:\&quot;one:utilityBarContent\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:131},{\&quot;name\&quot;:\&quot;console:history\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:99},{\&quot;name\&quot;:\&quot;one:utilityBarPanel\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:54},{\&quot;name\&quot;:\&quot;runtime_service_omnichannel:omniWidget\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:147}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:18256,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:18,\&quot;storeBroadcast\&quot;:2}}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:2597,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;undefined\&quot;,\&quot;attributes\&quot;:{}},\&quot;attributes\&quot;:{\&quot;darkModeEnabled\&quot;:false,\&quot;numTotalLoadedTabs\&quot;:0,\&quot;numTotalWorkspaces\&quot;:0,\&quot;numTotalSubtabs\&quot;:0,\&quot;listViewIdOrName\&quot;:\&quot;Recent\&quot;,\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:true,\&quot;eptDeviationReason\&quot;:\&quot;PreviousPageNotLoaded\&quot;,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:2597,\&quot;defaultCmp\&quot;:[],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:6,\&quot;misses\&quot;:0},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraStorage_runtimeServiceOmniChannelStorage\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;AuraRecordStore_oneUserProfileCardTrigger\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore_bulkRecordRequestauraIf\&quot;:{\&quot;hits\&quot;:16,\&quot;misses\&quot;:0},\&quot;total\&quot;:{\&quot;hits\&quot;:22,\&quot;misses\&quot;:4}},\&quot;complexity\&quot;:{\&quot;ADS_records\&quot;:16,\&quot;ADS_fields\&quot;:176},\&quot;sequence\&quot;:2,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:18372,\&quot;pageStartTime\&quot;:1604224094000,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:consoleObjectHome\&quot;,\&quot;markup://force:listViewManager\&quot;,\&quot;markup://force:listViewManagerDisplayViewConfiguration\&quot;,\&quot;markup://force:listViewManagerDisplayDependencyConfiguration\&quot;,\&quot;markup://force:listViewManagerDisplayDependencyItem\&quot;,\&quot;markup://force:listViewManagerStateManager\&quot;,\&quot;markup://force:listViewManagerHeader\&quot;,\&quot;markup://aura:renderIf\&quot;,\&quot;markup://force:breadCrumbs\&quot;,\&quot;markup://force:listViewPicker\&quot;,\&quot;markup://ui:outputText\&quot;,\&quot;markup://force:listViewManagerPinButton\&quot;,\&quot;markup://force:placeholder\&quot;,\&quot;markup://force:actionsContainer\&quot;,\&quot;markup://aura:unescapedHtml\&quot;,\&quot;markup://force:listViewManagerStatusInfo\&quot;,\&quot;markup://force:listViewSettingsMenu\&quot;,\&quot;markup://force:listViewManagerButtonBar\&quot;,\&quot;markup://force:listViewManagerDisplaySwitcher\&quot;,\&quot;markup://lightning:buttonMenu\&quot;,\&quot;markup://lightning:positionLibrary\&quot;,\&quot;markup://force:listViewManagerPrimaryDisplayManager\&quot;,\&quot;markup://force:listViewManagerSecondaryDisplayManager\&quot;,\&quot;markup://one:utilityBarContent\&quot;,\&quot;markup://force:popOutManagerAura\&quot;,\&quot;markup://force:popOutManager\&quot;,\&quot;markup://laf:windowMessengerAura\&quot;,\&quot;markup://console:history\&quot;,\&quot;markup://laf:windowMessageLib\&quot;,\&quot;markup://lightning:utilityBarAPI\&quot;,\&quot;markup://force:virtualTreeGrid\&quot;,\&quot;markup://ui:dataGridColumn\&quot;,\&quot;markup://force:treeGridTriggerCell\&quot;,\&quot;markup://lightning:deprecatedIcon\&quot;,\&quot;markup://lightning:deprecatedPrimitiveIcon\&quot;,\&quot;markup://force:outputURL\&quot;,\&quot;markup://ui:outputURL\&quot;,\&quot;markup://force:copyToClipboardButton\&quot;,\&quot;markup://one:workspaceAPILoader\&quot;,\&quot;markup://one:utilityBarPanel\&quot;,\&quot;markup://one:utilityBarAPILoader\&quot;,\&quot;markup://runtime_service_omnichannel:omniWidget\&quot;,\&quot;markup://scrt:scrtConnector\&quot;,\&quot;markup://lightning:messageChannel\&quot;,\&quot;markup://lightning:messageServiceInternal\&quot;,\&quot;markup://force:salesforceScopedModuleResolver\&quot;,\&quot;markup://force:messageServiceUtils\&quot;,\&quot;markup://lightning:messageContextConsumer\&quot;,\&quot;markup://runtime_service_liveagent:chatMessenger\&quot;,\&quot;markup://runtime_service_liveagent:toolkitMessenger\&quot;,\&quot;markup://runtime_service_predictions:einsteinSuggestedResponseUrlObserver\&quot;,\&quot;markup://runtime_service_predictions:dockedComposerManager\&quot;,\&quot;markup://runtime_service_omnichannel:status\&quot;,\&quot;markup://runtime_service_omnichannel:message\&quot;,\&quot;markup://ui:tabset\&quot;,\&quot;markup://ui:tab\&quot;,\&quot;markup://runtime_service_omnichannel:currentWorkList\&quot;,\&quot;markup://ui:tabBar\&quot;,\&quot;markup://ui:tabItem\&quot;,\&quot;markup://force:recordGlobalValueProvider\&quot;,\&quot;markup://force:listViewManagerSplitViewList\&quot;,\&quot;markup://force:dataManager\&quot;,\&quot;markup://force:listViewDataManagerAdapter\&quot;,\&quot;markup://force:listViewDataManager\&quot;,\&quot;markup://force:recordCollection\&quot;,\&quot;markup://force:listViewManagerGridColumnHeaderConfiguration\&quot;,\&quot;markup://force:virtualRecordList\&quot;,\&quot;markup://force:listViewManagerSearchBar\&quot;,\&quot;markup://force:highlightsIcon\&quot;,\&quot;markup://force:breadCrumbItem\&quot;,\&quot;markup://force:socialPhoto\&quot;,\&quot;markup://force:socialPhotoController\&quot;,\&quot;markup://one:actionsRibbon\&quot;,\&quot;markup://one:actionsDropDown\&quot;,\&quot;markup://force:action\&quot;,\&quot;markup://force:actionLink\&quot;,\&quot;markup://force:actionEventLink\&quot;,\&quot;markup://force:actionsDropDownMenuList\&quot;,\&quot;markup://ui:menuItem\&quot;,\&quot;markup://ui:actionMenuItem\&quot;,\&quot;markup://force:entityIcon\&quot;,\&quot;markup://ui:scroller\&quot;,\&quot;markup://force:listLoadingTemplate\&quot;,\&quot;markup://force:recordLayout\&quot;,\&quot;layout://rl-Account-VIEW-SEARCH--Recent--force_listViewManagerSplitViewList-_1-0-56446a367a5141622b733878526f396f464f424266513d3d.c\&quot;,\&quot;markup://force:splitViewListRecord\&quot;,\&quot;markup://force:splitViewListRecordItem\&quot;,\&quot;markup://force:outputPicklist\&quot;,\&quot;markup://lst:recordHomePreloads\&quot;],\&quot;pageCounter\&quot;:2,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:8,\&quot;page\&quot;:{\&quot;entityType\&quot;:\&quot;Account\&quot;,\&quot;context\&quot;:\&quot;one:consoleObjectHome\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/o/Account/list?filterName=Recent\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224112373,\&quot;value\&quot;:[0,204]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224112373,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224112373,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224111512,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224111512,\&quot;value\&quot;:[1,1,2,2,2,1,1,0,1,2,1,0,1,0,0,0,1]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224112255,\&quot;value\&quot;:[216050,68566]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224112255,\&quot;value\&quot;:[5492,11790]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604224111512,\&quot;value\&quot;:[1,21]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=12&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">18450000000b62df85</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=13&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1-76" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1010;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.sgdp.ScopesCacheController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeTypes&quot;:[&quot;FILTER&quot;,&quot;SMART_SCOPE&quot;]}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=13&amp;ui-search-components-forcesearch-sgdp.ScopesCache.getScopeMaps=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">18454000000a2532a5</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-81" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;1&quot;,&quot;version&quot;:&quot;1.0&quot;,&quot;minimumVersion&quot;:&quot;1.0&quot;,&quot;channel&quot;:&quot;/meta/handshake&quot;,&quot;supportedConnectionTypes&quot;:[&quot;long-polling&quot;,&quot;callback-polling&quot;],&quot;advice&quot;:{&quot;timeout&quot;:110000},&quot;ext&quot;:{&quot;empJs&quot;:true,&quot;channelName&quot;:&quot;/s/notifications/notification&quot;}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_clientId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_clientId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;clientId&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_clientId</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=16&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1-82" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1027;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.setup.components.aura.components.gear.GearController/ACTION$getEntitySupport&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=16&amp;ui-setup-components-aura-components-gear.Gear.getEntitySupport=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">18905000000e177dd1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-84" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;4&quot;,&quot;channel&quot;:&quot;/meta/connect&quot;,&quot;connectionType&quot;:&quot;long-polling&quot;,&quot;advice&quot;:{&quot;timeout&quot;:0},&quot;clientId&quot;:&quot;${_clientId}&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-83" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;2&quot;,&quot;channel&quot;:&quot;/meta/subscribe&quot;,&quot;subscription&quot;:&quot;/s/notifications/notification&quot;,&quot;clientId&quot;:&quot;${_clientId}&quot;,&quot;ext&quot;:{&quot;replay&quot;:{&quot;/s/notifications/notification&quot;:-1}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-88" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;3&quot;,&quot;channel&quot;:&quot;/meta/subscribe&quot;,&quot;subscription&quot;:&quot;/s/notifications/readstate&quot;,&quot;clientId&quot;:&quot;${_clientId}&quot;,&quot;ext&quot;:{&quot;replay&quot;:{&quot;/s/notifications/readstate&quot;:-1}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=17&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1-86" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1095;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getActionOverrides&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;ALP360_Company__c&quot;,&quot;ALP360_Search_Field__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;AddOnDefinition&quot;,&quot;Additional_Communication_Channel__c&quot;,&quot;Address&quot;,&quot;AgentTraining&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AllergyIntolerance&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AttachedContentNote&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Banker&quot;,&quot;BasicDataRecord&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;BillingDistributionMethod&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingTreatment&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareSpecialty&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseMilestone&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;City__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;CloudServiceProvider&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;Connector_Settings__c&quot;,&quot;Consumer_Auditing__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Auditing__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;Custom_Log__c&quot;,&quot;CustomerProperty&quot;,&quot;Dashboard&quot;,&quot;DataConnectorS3&quot;,&quot;DataImportDefinition&quot;,&quot;DataSrcEnt&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;DistributorAuthorization&quot;,&quot;DocumentChecklistItem&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnghouseCustomer__c&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Enrollment__c&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvSettings__c&quot;,&quot;EnvironmentHubMember&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;FeedItem&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FlowDefinitionView&quot;,&quot;Folder&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;Global_By_Pass__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;In_App_Checklist_Settings__c&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InsightsApplication&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsuranceProfile&quot;,&quot;Interaction_Event__c&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceLine&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Lead&quot;,&quot;Lead_Capacity__c&quot;,&quot;Lead_Interaction__c&quot;,&quot;Lead_Routing__c&quot;,&quot;Lead_Settings__c&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyBenefit&quot;,&quot;LoyaltyBenefitType&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;Macro&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;Medication&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;NamespaceRegistry&quot;,&quot;Note&quot;,&quot;ObjectTerritory2Association&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Order&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderSummary&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTreatment&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;Polygon&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductTransfer&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Categories__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteLineItem&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;Related_Lead__c&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;SchedulingConstraint&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;SkillRequirement&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;StandardPermissionSet&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Topic&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;TrnCourse&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UpgradePlan__c&quot;,&quot;UpgradeStep__c&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;WarrantyTerm&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;lightningbuddy__Action_User_Preference__c&quot;,&quot;lightningbuddy__Actions__c&quot;,&quot;lightningbuddy__Carousel_Image__c&quot;,&quot;lightningbuddy__Record_Criteria__c&quot;,&quot;lightningbuddy__Toaster_Alert_Param__c&quot;,&quot;lightningbuddy__Welcome_Mat_Tile__c&quot;,&quot;trailheadapp__Badge__c&quot;,&quot;trailheadapp__Debug_Log__c&quot;,&quot;trailheadapp__Trail__c&quot;,&quot;trailheadapp__Trailhead_User_Data__c&quot;,&quot;trailheadapp__Trailmix_Assignment__c&quot;,&quot;trailheadapp__Trailmix__c&quot;,&quot;trailheadapp__User_Badge__c&quot;,&quot;trailheadapp__User_Trailmix__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotion__c&quot;,&quot;vlocity_cmt__AccountBalance__c&quot;,&quot;vlocity_cmt__AccountDiscountItem__c&quot;,&quot;vlocity_cmt__AccountDiscountPricing__c&quot;,&quot;vlocity_cmt__AccountDiscount__c&quot;,&quot;vlocity_cmt__AccountHold__c&quot;,&quot;vlocity_cmt__AccountOffer__c&quot;,&quot;vlocity_cmt__AccountPriceAdjustment__c&quot;,&quot;vlocity_cmt__ActivityContentDocument__c&quot;,&quot;vlocity_cmt__ActivityTemplate__c&quot;,&quot;vlocity_cmt__AdminTabLayout__c&quot;,&quot;vlocity_cmt__ApplicationPartyRelationship__c&quot;,&quot;vlocity_cmt__ApplicationTemplate__c&quot;,&quot;vlocity_cmt__Application__c&quot;,&quot;vlocity_cmt__AssessmentAnswer__c&quot;,&quot;vlocity_cmt__AssessmentQuestion__c&quot;,&quot;vlocity_cmt__Assessment__c&quot;,&quot;vlocity_cmt__AssetPricingAdjustment__c&quot;,&quot;vlocity_cmt__AssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignmentExport__c&quot;,&quot;vlocity_cmt__AttributeAssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignment__c&quot;,&quot;vlocity_cmt__AttributeBinding__c&quot;,&quot;vlocity_cmt__AttributeCategory__c&quot;,&quot;vlocity_cmt__Attribute__c&quot;,&quot;vlocity_cmt__BillingDataTrim__c&quot;,&quot;vlocity_cmt__BusinessSiteOffering__c&quot;,&quot;vlocity_cmt__BusinessSite__c&quot;,&quot;vlocity_cmt__CachedAPIChangeEntry__c&quot;,&quot;vlocity_cmt__CachedAPIChange__c&quot;,&quot;vlocity_cmt__CachedAPIMigrate__c&quot;,&quot;vlocity_cmt__CachedAPIResponseOffers__c&quot;,&quot;vlocity_cmt__CachedAPIResponse__c&quot;,&quot;vlocity_cmt__CachedFilterableAttribute__c&quot;,&quot;vlocity_cmt__CachedKeyMapping__c&quot;,&quot;vlocity_cmt__CachedPriceBookEntryAttributeValue__c&quot;,&quot;vlocity_cmt__CachedProduct2Translation__c&quot;,&quot;vlocity_cmt__CachedPromotionTranslation__c&quot;,&quot;vlocity_cmt__CalculationMatrixColumn__c&quot;,&quot;vlocity_cmt__CalculationMatrixDimension__c&quot;,&quot;vlocity_cmt__CalculationMatrixRow__c&quot;,&quot;vlocity_cmt__CalculationMatrixVersion__c&quot;,&quot;vlocity_cmt__CalculationMatrix__c&quot;,&quot;vlocity_cmt__CalculationProcedureStep__c&quot;,&quot;vlocity_cmt__CalculationProcedureVariable__c&quot;,&quot;vlocity_cmt__CalculationProcedureVersion__c&quot;,&quot;vlocity_cmt__CalculationProcedure__c&quot;,&quot;vlocity_cmt__CallbackURI__c&quot;,&quot;vlocity_cmt__CampaignContentDocument__c&quot;,&quot;vlocity_cmt__CampaignMemberActionLog__c&quot;,&quot;vlocity_cmt__CardFrameworkConfiguration__c&quot;,&quot;vlocity_cmt__CartItem__c&quot;,&quot;vlocity_cmt__Cart__c&quot;,&quot;vlocity_cmt__CatalogProductRelationship__c&quot;,&quot;vlocity_cmt__CatalogRelationship__c&quot;,&quot;vlocity_cmt__Catalog__c&quot;,&quot;vlocity_cmt__ChargeMeasurement__c&quot;,&quot;vlocity_cmt__CompiledAttributeOverride__c&quot;,&quot;vlocity_cmt__ConsoleActionLog__c&quot;,&quot;vlocity_cmt__ContextAction__c&quot;,&quot;vlocity_cmt__ContextDimension__c&quot;,&quot;vlocity_cmt__ContextMappingArgument__c&quot;,&quot;vlocity_cmt__ContextMapping__c&quot;,&quot;vlocity_cmt__ContextRule__c&quot;,&quot;vlocity_cmt__ContextRuleset__c&quot;,&quot;vlocity_cmt__ContextScope__c&quot;,&quot;vlocity_cmt__ContractDocumentAccessControl__c&quot;,&quot;vlocity_cmt__ContractDocumentCollection__c&quot;,&quot;vlocity_cmt__ContractEnvelope__c&quot;,&quot;vlocity_cmt__ContractLineItem__c&quot;,&quot;vlocity_cmt__ContractManagementConfigurationSetup__c&quot;,&quot;vlocity_cmt__ContractRecipient__c&quot;,&quot;vlocity_cmt__ContractSection__c&quot;,&quot;vlocity_cmt__ContractTerm__c&quot;,&quot;vlocity_cmt__ContractTypeSetting__c&quot;,&quot;vlocity_cmt__ContractTypeTerm__c&quot;,&quot;vlocity_cmt__ContractType__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountItem__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountPricing__c&quot;,&quot;vlocity_cmt__ContractVersionDiscount__c&quot;,&quot;vlocity_cmt__ContractVersion__c&quot;,&quot;vlocity_cmt__CpqConfigurationSetup__c&quot;,&quot;vlocity_cmt__CustomClassImplementation__c&quot;,&quot;vlocity_cmt__CustomFieldMap__c&quot;,&quot;vlocity_cmt__CustomFilterFormula__c&quot;,&quot;vlocity_cmt__CustomFilter__c&quot;,&quot;vlocity_cmt__CustomObjectMap__c&quot;,&quot;vlocity_cmt__CustomerInteractionTopic__c&quot;,&quot;vlocity_cmt__CustomerInteraction__c&quot;,&quot;vlocity_cmt__DRBatchQueue__c&quot;,&quot;vlocity_cmt__DRBulkData__c&quot;,&quot;vlocity_cmt__DRBundle__c&quot;,&quot;vlocity_cmt__DREncryption__c&quot;,&quot;vlocity_cmt__DRMapItem__c&quot;,&quot;vlocity_cmt__DRWorker__c&quot;,&quot;vlocity_cmt__Datastore__c&quot;,&quot;vlocity_cmt__DecompositionRelationship__c&quot;,&quot;vlocity_cmt__DocuSignAnchorTabSetting__c&quot;,&quot;vlocity_cmt__DocuSignCalloutConfigurationSetup__c&quot;,&quot;vlocity_cmt__DocuSignEnvelopeObjectSetting__c&quot;,&quot;vlocity_cmt__DocumentClause__c&quot;,&quot;vlocity_cmt__DocumentSection__c&quot;,&quot;vlocity_cmt__DocumentTemplateElement__c&quot;,&quot;vlocity_cmt__DocumentTemplateSectionCondition__c&quot;,&quot;vlocity_cmt__DocumentTemplateSection__c&quot;,&quot;vlocity_cmt__DocumentTemplate__c&quot;,&quot;vlocity_cmt__DocumentToken__c&quot;,&quot;vlocity_cmt__Document__c&quot;,&quot;vlocity_cmt__Dunning__c&quot;,&quot;vlocity_cmt__Element__c&quot;,&quot;vlocity_cmt__EntityFilterConditionArgument__c&quot;,&quot;vlocity_cmt__EntityFilterCondition__c&quot;,&quot;vlocity_cmt__EntityFilterMember__c&quot;,&quot;vlocity_cmt__EntityFilter__c&quot;,&quot;vlocity_cmt__ErrorCodeNamespace__c&quot;,&quot;vlocity_cmt__ErrorCode__c&quot;,&quot;vlocity_cmt__Error_Code_Namespace__c&quot;,&quot;vlocity_cmt__Error_Code__c&quot;,&quot;vlocity_cmt__EventDuringInteraction__c&quot;,&quot;vlocity_cmt__EventMessage__c&quot;,&quot;vlocity_cmt__ExpandedInteractionLog__c&quot;,&quot;vlocity_cmt__FieldSettings__c&quot;,&quot;vlocity_cmt__FieldsConfiguration__c&quot;,&quot;vlocity_cmt__FieldsLookupConfiguration__c&quot;,&quot;vlocity_cmt__FlowStepFields__c&quot;,&quot;vlocity_cmt__FulfilmentRequestDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineSourceRootOrderItem__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLine__c&quot;,&quot;vlocity_cmt__FulfilmentRequest__c&quot;,&quot;vlocity_cmt__GeneralSettings__c&quot;,&quot;vlocity_cmt__GlobalAutoNumberSetting__c&quot;,&quot;vlocity_cmt__GraphCloneSpecial__c&quot;,&quot;vlocity_cmt__GraphClone__c&quot;,&quot;vlocity_cmt__HouseholdAddressMatch__c&quot;,&quot;vlocity_cmt__Household__c&quot;,&quot;vlocity_cmt__InboundRESTInterface__c&quot;,&quot;vlocity_cmt__IntegrationRetryPolicy__c&quot;,&quot;vlocity_cmt__InteractionLauncherConfiguration__c&quot;,&quot;vlocity_cmt__InterfaceImplementationDetail__c&quot;,&quot;vlocity_cmt__InterfaceImplementation__c&quot;,&quot;vlocity_cmt__Interface_BillingInfo__c&quot;,&quot;vlocity_cmt__Interface_DRGeneric__c&quot;,&quot;vlocity_cmt__Interface_ProductAttribute__c&quot;,&quot;vlocity_cmt__InventoryItemDecompositionRelationship__c&quot;,&quot;vlocity_cmt__InventoryItem__c&quot;,&quot;vlocity_cmt__ItemImplementation__c&quot;,&quot;vlocity_cmt__Jurisdiction__c&quot;,&quot;vlocity_cmt__LargeDataStore__c&quot;,&quot;vlocity_cmt__LineOfBusiness__c&quot;,&quot;vlocity_cmt__ManualQueueMember__c&quot;,&quot;vlocity_cmt__ManualQueue__c&quot;,&quot;vlocity_cmt__MobileConfiguration__c&quot;,&quot;vlocity_cmt__ObjectClass__c&quot;,&quot;vlocity_cmt__ObjectElement__c&quot;,&quot;vlocity_cmt__ObjectFacet__c&quot;,&quot;vlocity_cmt__ObjectFieldAttribute__c&quot;,&quot;vlocity_cmt__ObjectLayout__c&quot;,&quot;vlocity_cmt__ObjectRuleAssignment__c&quot;,&quot;vlocity_cmt__ObjectSection__c&quot;,&quot;vlocity_cmt__OfferMigrationComponentMapping__c&quot;,&quot;vlocity_cmt__OfferMigrationPlan__c&quot;,&quot;vlocity_cmt__OfferPricingComponent__c&quot;,&quot;vlocity_cmt__OfferingProcedure__c&quot;,&quot;vlocity_cmt__OmniScriptDefinition__c&quot;,&quot;vlocity_cmt__OmniScriptInstance__c&quot;,&quot;vlocity_cmt__OmniScript__c&quot;,&quot;vlocity_cmt__OperatingHoursEntry__c&quot;,&quot;vlocity_cmt__OperatingHours__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotion__c&quot;,&quot;vlocity_cmt__OpportunityDiscountItem__c&quot;,&quot;vlocity_cmt__OpportunityDiscountPricing__c&quot;,&quot;vlocity_cmt__OpportunityDiscount__c&quot;,&quot;vlocity_cmt__OpportunityLineItemRelationship__c&quot;,&quot;vlocity_cmt__OpportunityPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrchestrationDependencyDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationDependency__c&quot;,&quot;vlocity_cmt__OrchestrationItemDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationItemSource__c&quot;,&quot;vlocity_cmt__OrchestrationItem__c&quot;,&quot;vlocity_cmt__OrchestrationPlanDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationPlan__c&quot;,&quot;vlocity_cmt__OrchestrationQueueAssignmentRule__c&quot;,&quot;vlocity_cmt__OrchestrationQueue__c&quot;,&quot;vlocity_cmt__OrchestrationScenario__c&quot;,&quot;vlocity_cmt__OrchestrationSchedulerImplementation__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotion__c&quot;,&quot;vlocity_cmt__OrderDiscountItem__c&quot;,&quot;vlocity_cmt__OrderDiscountPricing__c&quot;,&quot;vlocity_cmt__OrderDiscount__c&quot;,&quot;vlocity_cmt__OrderGroup__c&quot;,&quot;vlocity_cmt__OrderItemPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderItemRelationship__c&quot;,&quot;vlocity_cmt__OrderPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderRelationship__c&quot;,&quot;vlocity_cmt__OutboundConfiguration__c&quot;,&quot;vlocity_cmt__OverrideDefinition__c&quot;,&quot;vlocity_cmt__PDFDocumentTemplate__c&quot;,&quot;vlocity_cmt__PartyMaintenanceJobConfiguration__c&quot;,&quot;vlocity_cmt__PartyMergeMetadata__c&quot;,&quot;vlocity_cmt__PartyMergeRequest__c&quot;,&quot;vlocity_cmt__PartyRelationshipType__c&quot;,&quot;vlocity_cmt__PartyRelationship__c&quot;,&quot;vlocity_cmt__Party_Association__c&quot;,&quot;vlocity_cmt__Party__c&quot;,&quot;vlocity_cmt__PaymentAdjustment__c&quot;,&quot;vlocity_cmt__PaymentMethod__c&quot;,&quot;vlocity_cmt__PaymentPlan__c&quot;,&quot;vlocity_cmt__PersonAccountSettings__c&quot;,&quot;vlocity_cmt__PicklistSelectionEntry__c&quot;,&quot;vlocity_cmt__PicklistValue__c&quot;,&quot;vlocity_cmt__Picklist__c&quot;,&quot;vlocity_cmt__PremisesPartyRelationship__c&quot;,&quot;vlocity_cmt__Premises__c&quot;,&quot;vlocity_cmt__PriceListEntry__c&quot;,&quot;vlocity_cmt__PriceList__c&quot;,&quot;vlocity_cmt__PricingComponentRelationship__c&quot;,&quot;vlocity_cmt__PricingComponent__c&quot;,&quot;vlocity_cmt__PricingElement__c&quot;,&quot;vlocity_cmt__PricingPlanStep__c&quot;,&quot;vlocity_cmt__PricingPlan__c&quot;,&quot;vlocity_cmt__PricingVariableBinding__c&quot;,&quot;vlocity_cmt__PricingVariable__c&quot;,&quot;vlocity_cmt__ProductAttribXN__c&quot;,&quot;vlocity_cmt__ProductAvailability__c&quot;,&quot;vlocity_cmt__ProductChildItem__c&quot;,&quot;vlocity_cmt__ProductConfigurationProcedure__c&quot;,&quot;vlocity_cmt__ProductEligibility__c&quot;,&quot;vlocity_cmt__ProductManagementConfiguration__c&quot;,&quot;vlocity_cmt__ProductRelationshipType__c&quot;,&quot;vlocity_cmt__ProductRelationship__c&quot;,&quot;vlocity_cmt__ProductTemplate__c&quot;,&quot;vlocity_cmt__ProfileCategoryAssignment__c&quot;,&quot;vlocity_cmt__ProfilingSegmentCategory__c&quot;,&quot;vlocity_cmt__ProfilingSegment__c&quot;,&quot;vlocity_cmt__ProjectItem__c&quot;,&quot;vlocity_cmt__Project__c&quot;,&quot;vlocity_cmt__PromotionApplicableProduct__c&quot;,&quot;vlocity_cmt__PromotionIncludedProduct__c&quot;,&quot;vlocity_cmt__PromotionItem__c&quot;,&quot;vlocity_cmt__PromotionPricingAlteration__c&quot;,&quot;vlocity_cmt__Promotion__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotion__c&quot;,&quot;vlocity_cmt__QuoteDiscountItem__c&quot;,&quot;vlocity_cmt__QuoteDiscountPricing__c&quot;,&quot;vlocity_cmt__QuoteDiscount__c&quot;,&quot;vlocity_cmt__QuoteGroup__c&quot;,&quot;vlocity_cmt__QuoteLineItemPricingAdjustment__c&quot;,&quot;vlocity_cmt__QuoteLineItemRelationship__c&quot;,&quot;vlocity_cmt__QuotePricingAdjustment__c&quot;,&quot;vlocity_cmt__RelationshipGraphConfigurationSetup__c&quot;,&quot;vlocity_cmt__RelationshipGraphDetails__c&quot;,&quot;vlocity_cmt__RelationshipGraphNodeType__c&quot;,&quot;vlocity_cmt__RelationshipGraphTraversal__c&quot;,&quot;vlocity_cmt__RelationshipGraph__c&quot;,&quot;vlocity_cmt__RemoteUrlTemplate__c&quot;,&quot;vlocity_cmt__RuleAction__c&quot;,&quot;vlocity_cmt__RuleAssignment__c&quot;,&quot;vlocity_cmt__RuleFilter__c&quot;,&quot;vlocity_cmt__RuleProperty__c&quot;,&quot;vlocity_cmt__RuleVariable__c&quot;,&quot;vlocity_cmt__Rule__c&quot;,&quot;vlocity_cmt__RunTriggerAndWorkFlow__c&quot;,&quot;vlocity_cmt__ScreeningRuleGroup__c&quot;,&quot;vlocity_cmt__ScreeningRule__c&quot;,&quot;vlocity_cmt__SecurityDeposit__c&quot;,&quot;vlocity_cmt__ServicePoint__c&quot;,&quot;vlocity_cmt__SpecTemplateAttributeMapping__c&quot;,&quot;vlocity_cmt__SpecTemplateMapping__c&quot;,&quot;vlocity_cmt__Stage__c&quot;,&quot;vlocity_cmt__StateTransition__c&quot;,&quot;vlocity_cmt__StatementLineItem__c&quot;,&quot;vlocity_cmt__Statement__c&quot;,&quot;vlocity_cmt__StoryListPageLimit__c&quot;,&quot;vlocity_cmt__StoryObjectConfiguration__c&quot;,&quot;vlocity_cmt__StringTranslation__c&quot;,&quot;vlocity_cmt__String__c&quot;,&quot;vlocity_cmt__Subscription__c&quot;,&quot;vlocity_cmt__SyncDeltaControl__c&quot;,&quot;vlocity_cmt__SyncDeltaObject__c&quot;,&quot;vlocity_cmt__SyncDeltaSnapshot__c&quot;,&quot;vlocity_cmt__SystemInterface__c&quot;,&quot;vlocity_cmt__System__c&quot;,&quot;vlocity_cmt__TemplateDesignerConfiguration__c&quot;,&quot;vlocity_cmt__ThorOrchestrationQueue__c&quot;,&quot;vlocity_cmt__TimePlan__c&quot;,&quot;vlocity_cmt__TimePolicy__c&quot;,&quot;vlocity_cmt__TriggerSetup__c&quot;,&quot;vlocity_cmt__UICustomization__c&quot;,&quot;vlocity_cmt__UIFacet__c&quot;,&quot;vlocity_cmt__UISection__c&quot;,&quot;vlocity_cmt__UISettings__c&quot;,&quot;vlocity_cmt__UserCalendar__c&quot;,&quot;vlocity_cmt__VlocityAPIMetadata__c&quot;,&quot;vlocity_cmt__VlocityAction__c&quot;,&quot;vlocity_cmt__VlocityAttachment__c&quot;,&quot;vlocity_cmt__VlocityCard__c&quot;,&quot;vlocity_cmt__VlocityDataCache__c&quot;,&quot;vlocity_cmt__VlocityDataPack__c&quot;,&quot;vlocity_cmt__VlocityDocuSignBranding__c&quot;,&quot;vlocity_cmt__VlocityDocuSignTemplate__c&quot;,&quot;vlocity_cmt__VlocityErrorLogEntry__c&quot;,&quot;vlocity_cmt__VlocityFunctionArgument__c&quot;,&quot;vlocity_cmt__VlocityFunction__c&quot;,&quot;vlocity_cmt__VlocityLibraryOrganization__c&quot;,&quot;vlocity_cmt__VlocityScheduledJob__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetActionsSetup__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetSetup__c&quot;,&quot;vlocity_cmt__VlocityStateModelVersion__c&quot;,&quot;vlocity_cmt__VlocityStateModel__c&quot;,&quot;vlocity_cmt__VlocityStateTransition__c&quot;,&quot;vlocity_cmt__VlocityState__c&quot;,&quot;vlocity_cmt__VlocitySystemLog__c&quot;,&quot;vlocity_cmt__VlocityTrackingEntry__c&quot;,&quot;vlocity_cmt__VlocityUILayout__c&quot;,&quot;vlocity_cmt__VlocityUITemplate__c&quot;,&quot;vlocity_cmt__VqMachineResource__c&quot;,&quot;vlocity_cmt__VqMachine__c&quot;,&quot;vlocity_cmt__VqResource__c&quot;,&quot;vlocity_cmt__WorkSetSettings__c&quot;,&quot;vlocity_cmt__XLIBatchValidationSetting__c&quot;,&quot;vlocity_cmt__XOMCustomLabelsCache__c&quot;,&quot;vlocity_cmt__XOMParameter__c&quot;,&quot;vlocity_cmt__XOMSetup__c&quot;],&quot;appId&quot;:&quot;${_appDefinition}&quot;},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1096;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getKeyPrefixesWithRecordTypes&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1097;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getIsLWCFlexipageEnabled&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;sObjectNames&quot;:[&quot;ALP360_Company__c&quot;,&quot;ALP360_Search_Field__c&quot;,&quot;Account&quot;,&quot;AccountBrand&quot;,&quot;AccountContactRelation&quot;,&quot;AccountForecast&quot;,&quot;AccountForecastAdjustment&quot;,&quot;AccountForecastPeriodMetric&quot;,&quot;AccountInsight&quot;,&quot;AccountParticipant&quot;,&quot;AccountPartner&quot;,&quot;AccountProductForecast&quot;,&quot;AccountProductPeriodForecast&quot;,&quot;AccountRelationship&quot;,&quot;AccountTeamMember&quot;,&quot;AccountUserTerritory2View&quot;,&quot;Accreditation&quot;,&quot;AcctMgrPeriodicTargetDstr&quot;,&quot;AcctMgrTarget&quot;,&quot;AcctMgrTargetDstr&quot;,&quot;ActionCadence&quot;,&quot;ActionPlan&quot;,&quot;ActionPlanItem&quot;,&quot;ActionPlanTemplate&quot;,&quot;ActionPlanTemplateItem&quot;,&quot;ActionPlanTemplateItemValue&quot;,&quot;ActionPlanTemplateVersion&quot;,&quot;ActionPlanTmplItmAssessmentInd&quot;,&quot;ActivationTarget&quot;,&quot;ActiveScratchOrg&quot;,&quot;ActivityHistory&quot;,&quot;AddOnDefinition&quot;,&quot;Additional_Communication_Channel__c&quot;,&quot;Address&quot;,&quot;AgentTraining&quot;,&quot;AiDataset&quot;,&quot;AiImageDetectedObject&quot;,&quot;AiImageObject&quot;,&quot;AiImageTrainingObject&quot;,&quot;AiVisionModel&quot;,&quot;AiVisionModelMetric&quot;,&quot;AiVisionModelObjectMetric&quot;,&quot;AiVisitRecommendRequest&quot;,&quot;AiVisitRecommendation&quot;,&quot;AiVisitSummary&quot;,&quot;AllergyIntolerance&quot;,&quot;ApiAnomalyEventStore&quot;,&quot;AppAnalyticsQueryRequest&quot;,&quot;AppMenuItem&quot;,&quot;AppUsageAssignment&quot;,&quot;AssessmentIndDefinedValue&quot;,&quot;AssessmentIndValue&quot;,&quot;AssessmentIndicatorDefinition&quot;,&quot;AssessmentTask&quot;,&quot;AssessmentTaskContentDocument&quot;,&quot;AssessmentTaskDefinition&quot;,&quot;AssessmentTaskIndDefinition&quot;,&quot;AssessmentTaskOrder&quot;,&quot;Asset&quot;,&quot;AssetAction&quot;,&quot;AssetActionSource&quot;,&quot;AssetDowntimePeriod&quot;,&quot;AssetRelationship&quot;,&quot;AssetStatePeriod&quot;,&quot;AssetWarranty&quot;,&quot;AssignedResource&quot;,&quot;AssistantText&quot;,&quot;AssociatedLocation&quot;,&quot;Assortment&quot;,&quot;AssortmentProduct&quot;,&quot;AttachedContentNote&quot;,&quot;AuthApplicationAsset&quot;,&quot;AuthApplicationPlace&quot;,&quot;AuthLocationAccessSchedule&quot;,&quot;AuthorizationForm&quot;,&quot;AuthorizationFormConsent&quot;,&quot;AuthorizationFormDataUse&quot;,&quot;AuthorizationFormText&quot;,&quot;AuthorizedInsuranceLine&quot;,&quot;Award&quot;,&quot;BCEntityPermission&quot;,&quot;BCEntityPermissionSet&quot;,&quot;BCFieldPermission&quot;,&quot;BCParticipant&quot;,&quot;BCParticipantAccess&quot;,&quot;BCPermissionSet&quot;,&quot;BCRecordAccess&quot;,&quot;BCRecordAccessApproval&quot;,&quot;BCRelatedParticipant&quot;,&quot;Banker&quot;,&quot;BasicDataRecord&quot;,&quot;BatchJob&quot;,&quot;BatchJobPart&quot;,&quot;BatchJobPartFailedRecord&quot;,&quot;BillingDistributionMethod&quot;,&quot;BillingPeriodItem&quot;,&quot;BillingPeriodTaxItem&quot;,&quot;BillingPolicy&quot;,&quot;BillingSchedule&quot;,&quot;BillingScheduleCreationStatus&quot;,&quot;BillingTreatment&quot;,&quot;BlockchainAppMember&quot;,&quot;BlockchainApplication&quot;,&quot;BlockchainEntity&quot;,&quot;BlockchainField&quot;,&quot;BlockchainMember&quot;,&quot;BoardCertification&quot;,&quot;BranchUnit&quot;,&quot;BusRegAuthTypeDependency&quot;,&quot;BusRegAuthorizationType&quot;,&quot;BusinessLicense&quot;,&quot;BusinessLicenseApplication&quot;,&quot;BusinessMilestone&quot;,&quot;BusinessProfile&quot;,&quot;BusinessType&quot;,&quot;BusinessUnitMember&quot;,&quot;BuyerAccount&quot;,&quot;BuyerGroup&quot;,&quot;BuyerGroupMember&quot;,&quot;BuyerGroupPricebook&quot;,&quot;CallTemplate&quot;,&quot;Campaign&quot;,&quot;CampaignInfluence&quot;,&quot;CampaignInsight&quot;,&quot;CampaignMember&quot;,&quot;CampaignMemberStatus&quot;,&quot;CardPaymentMethod&quot;,&quot;CareBarrier&quot;,&quot;CareBarrierDeterminant&quot;,&quot;CareBarrierType&quot;,&quot;CareDeterminant&quot;,&quot;CareDeterminantType&quot;,&quot;CareDiagnosis&quot;,&quot;CareInterventionType&quot;,&quot;CareMetricTarget&quot;,&quot;CareObservation&quot;,&quot;CarePgmProvHealthcareProvider&quot;,&quot;CarePreauth&quot;,&quot;CarePreauthItem&quot;,&quot;CareProgram&quot;,&quot;CareProgramCampaign&quot;,&quot;CareProgramEligibilityRule&quot;,&quot;CareProgramEnrollee&quot;,&quot;CareProgramEnrolleeProduct&quot;,&quot;CareProgramEnrollmentCard&quot;,&quot;CareProgramGoal&quot;,&quot;CareProgramProduct&quot;,&quot;CareProgramProvider&quot;,&quot;CareProgramTeamMember&quot;,&quot;CareProviderAdverseAction&quot;,&quot;CareProviderFacilitySpecialty&quot;,&quot;CareProviderSearchableField&quot;,&quot;CareRegisteredDevice&quot;,&quot;CareRequest&quot;,&quot;CareRequestDrug&quot;,&quot;CareRequestExtension&quot;,&quot;CareRequestItem&quot;,&quot;CareSpecialty&quot;,&quot;CareTaxonomy&quot;,&quot;CartItem&quot;,&quot;Case&quot;,&quot;CaseComment&quot;,&quot;CaseContactRole&quot;,&quot;CaseMilestone&quot;,&quot;ChannelObjectLinkingRule&quot;,&quot;ChannelProgram&quot;,&quot;ChannelProgramLevel&quot;,&quot;ChannelProgramMember&quot;,&quot;City__c&quot;,&quot;Claim&quot;,&quot;ClaimCase&quot;,&quot;ClaimItem&quot;,&quot;ClaimParticipant&quot;,&quot;CloudServiceProvider&quot;,&quot;CodeSet&quot;,&quot;CodeSetBundle&quot;,&quot;CollaborationGroup&quot;,&quot;CommSubscription&quot;,&quot;CommSubscriptionChannelType&quot;,&quot;CommSubscriptionConsent&quot;,&quot;CommSubscriptionTiming&quot;,&quot;CommerceEntitlementBuyerGroup&quot;,&quot;CommerceEntitlementPolicy&quot;,&quot;CommerceEntitlementProduct&quot;,&quot;Connector_Settings__c&quot;,&quot;Consumer_Auditing__c&quot;,&quot;ConsumptionRate&quot;,&quot;ConsumptionSchedule&quot;,&quot;Contact&quot;,&quot;ContactEncounter&quot;,&quot;ContactEncounterParticipant&quot;,&quot;ContactPointAddress&quot;,&quot;ContactPointConsent&quot;,&quot;ContactPointEmail&quot;,&quot;ContactPointPhone&quot;,&quot;ContactPointTypeConsent&quot;,&quot;ContactRequest&quot;,&quot;ContactSuggestionInsight&quot;,&quot;Contact_Auditing__c&quot;,&quot;ContentDocument&quot;,&quot;ContentDocumentListViewMapping&quot;,&quot;ContentNote&quot;,&quot;ContentVersion&quot;,&quot;ContentWorkspace&quot;,&quot;Contract&quot;,&quot;ContractContactRole&quot;,&quot;ContractLineItem&quot;,&quot;ConversationBroadcast&quot;,&quot;ConversationBroadcastEntry&quot;,&quot;CourseOffering&quot;,&quot;CoverageBenefit&quot;,&quot;CoverageBenefitItem&quot;,&quot;CoverageLimit&quot;,&quot;CoverageType&quot;,&quot;CredentialStuffingEventStore&quot;,&quot;CreditMemo&quot;,&quot;CreditMemoInvApplication&quot;,&quot;CreditMemoLine&quot;,&quot;Crisis&quot;,&quot;Custom_Log__c&quot;,&quot;CustomerProperty&quot;,&quot;Dashboard&quot;,&quot;DataConnectorS3&quot;,&quot;DataImportDefinition&quot;,&quot;DataSrcEnt&quot;,&quot;DataStream&quot;,&quot;DataUseLegalBasis&quot;,&quot;DataUsePurpose&quot;,&quot;DelegatedAccount&quot;,&quot;DeleteEvent&quot;,&quot;DeliveryTask&quot;,&quot;DigitalSignature&quot;,&quot;DigitalWallet&quot;,&quot;DistributorAuthorization&quot;,&quot;DocumentChecklistItem&quot;,&quot;DuplicateRecordItem&quot;,&quot;DuplicateRecordSet&quot;,&quot;EdgeMart&quot;,&quot;EditionDefinition&quot;,&quot;ElectronicMediaGroup&quot;,&quot;EmailContent&quot;,&quot;EmailMessage&quot;,&quot;EmailMessageRelation&quot;,&quot;EmailTemplate&quot;,&quot;EmbeddedServiceConfig&quot;,&quot;EmbeddedServiceLiveAgent&quot;,&quot;EmbeddedServiceMenuSettings&quot;,&quot;Employee&quot;,&quot;EmployeeAsset&quot;,&quot;EmployeeContact&quot;,&quot;EmployeeCrisisAssessment&quot;,&quot;EmployeeJob&quot;,&quot;EmployeeJobPosition&quot;,&quot;EngagementChannelType&quot;,&quot;EngagementProgram&quot;,&quot;EngagementProgramVersion&quot;,&quot;EnghouseCustomer__c&quot;,&quot;EnhancedEmailTemplate&quot;,&quot;EnhancedLetterhead&quot;,&quot;EnrollmentEligibilityCriteria&quot;,&quot;Enrollment__c&quot;,&quot;Entitlement&quot;,&quot;EntityArchivingException&quot;,&quot;EntityArchivingJob&quot;,&quot;EntityArchivingSetup&quot;,&quot;EntityMilestone&quot;,&quot;EnvSettings__c&quot;,&quot;EnvironmentHubMember&quot;,&quot;Event&quot;,&quot;Examination&quot;,&quot;Expense&quot;,&quot;ExpenseReport&quot;,&quot;ExpenseReportEntry&quot;,&quot;ExternalAccountHierarchy&quot;,&quot;FeedItem&quot;,&quot;FinanceBalanceSnapshot&quot;,&quot;FinanceTransaction&quot;,&quot;FinanceTransactionErrorLog&quot;,&quot;FlowDefinitionView&quot;,&quot;Folder&quot;,&quot;FtestAllContactPoint&quot;,&quot;FtestApplication2CInterface&quot;,&quot;FtestConcrete&quot;,&quot;FtestConcrete6&quot;,&quot;FtestConcrete7&quot;,&quot;FtestConcrete8&quot;,&quot;FtestContactPointEmail&quot;,&quot;FtestContactPointPhone&quot;,&quot;FtestZosUiPrototypeChild1&quot;,&quot;FtestZosUiPrototypeChild2&quot;,&quot;FtestZosUiPrototypeParent&quot;,&quot;FulfillmentOrder&quot;,&quot;FulfillmentOrderLineItem&quot;,&quot;Global_By_Pass__c&quot;,&quot;HealthCareDiagnosis&quot;,&quot;HealthCareProcedure&quot;,&quot;HealthCondition&quot;,&quot;HealthcareFacilityNetwork&quot;,&quot;HealthcarePayerNetwork&quot;,&quot;HealthcarePractitionerFacility&quot;,&quot;HealthcareProvider&quot;,&quot;HealthcareProviderNpi&quot;,&quot;HealthcareProviderSpecialty&quot;,&quot;HealthcareProviderTaxonomy&quot;,&quot;Identifier&quot;,&quot;IdentityDocument&quot;,&quot;Image&quot;,&quot;InStoreLocation&quot;,&quot;In_App_Checklist_Settings__c&quot;,&quot;IncludedLicenseDefinition&quot;,&quot;Individual&quot;,&quot;IndividualApplication&quot;,&quot;InsightsApplication&quot;,&quot;InspectionAssessmentInd&quot;,&quot;InspectionType&quot;,&quot;InspectionViolation&quot;,&quot;InsuranceClaimAsset&quot;,&quot;InsurancePolicy&quot;,&quot;InsurancePolicyAsset&quot;,&quot;InsurancePolicyCoverage&quot;,&quot;InsurancePolicyMemberAsset&quot;,&quot;InsurancePolicyOwner&quot;,&quot;InsurancePolicyParticipant&quot;,&quot;InsuranceProfile&quot;,&quot;Interaction_Event__c&quot;,&quot;InternalOrganizationUnit&quot;,&quot;Invoice&quot;,&quot;InvoiceLine&quot;,&quot;JobFamily&quot;,&quot;JobPosition&quot;,&quot;JobProfile&quot;,&quot;JournalSubType&quot;,&quot;JournalType&quot;,&quot;KnowledgeArticleVersion&quot;,&quot;LandingPage&quot;,&quot;LandingPageContent&quot;,&quot;Lead&quot;,&quot;Lead_Capacity__c&quot;,&quot;Lead_Interaction__c&quot;,&quot;Lead_Routing__c&quot;,&quot;Lead_Settings__c&quot;,&quot;LegalEntity&quot;,&quot;Lens&quot;,&quot;LicensingError&quot;,&quot;LicensingRequest&quot;,&quot;ListEmail&quot;,&quot;ListEmailSentResult&quot;,&quot;LiveAgentSession&quot;,&quot;LiveChatSensitiveDataRule&quot;,&quot;LiveChatTranscript&quot;,&quot;LiveChatVisitor&quot;,&quot;LoanApplicant&quot;,&quot;LoanApplicantAddress&quot;,&quot;LoanApplicantAsset&quot;,&quot;LoanApplicantDeclaration&quot;,&quot;LoanApplicantEmployment&quot;,&quot;LoanApplicantIncome&quot;,&quot;LoanApplicantLiability&quot;,&quot;LoanApplicationAsset&quot;,&quot;LoanApplicationFinancial&quot;,&quot;LoanApplicationLiability&quot;,&quot;LoanApplicationProperty&quot;,&quot;LoanApplicationTitleHolder&quot;,&quot;LocWaitlistMsgTemplate&quot;,&quot;Location&quot;,&quot;LocationGroup&quot;,&quot;LocationGroupAssignment&quot;,&quot;LocationTrustMeasure&quot;,&quot;LocationWaitlist&quot;,&quot;LocationWaitlistedParty&quot;,&quot;LoyaltyBenefit&quot;,&quot;LoyaltyBenefitType&quot;,&quot;LoyaltyLedger&quot;,&quot;LoyaltyMemberCurrency&quot;,&quot;LoyaltyMemberTier&quot;,&quot;LoyaltyPartnerProduct&quot;,&quot;LoyaltyProgram&quot;,&quot;LoyaltyProgramCurrency&quot;,&quot;LoyaltyProgramMember&quot;,&quot;LoyaltyProgramPartner&quot;,&quot;LoyaltyTier&quot;,&quot;LoyaltyTierBenefit&quot;,&quot;LoyaltyTierGroup&quot;,&quot;Macro&quot;,&quot;MaintenanceAsset&quot;,&quot;MaintenancePlan&quot;,&quot;MaintenanceWorkRule&quot;,&quot;MarketSegment&quot;,&quot;MarketSegmentActivation&quot;,&quot;MarketingForm&quot;,&quot;MarketingLink&quot;,&quot;MarketingLinkContent&quot;,&quot;Medication&quot;,&quot;MemberPlan&quot;,&quot;MessagingChannel&quot;,&quot;MessagingDeliveryError&quot;,&quot;MessagingEndUser&quot;,&quot;MessagingSession&quot;,&quot;MessagingTemplate&quot;,&quot;NamespaceRegistry&quot;,&quot;Note&quot;,&quot;ObjectTerritory2Association&quot;,&quot;OccupationLicenseApplication&quot;,&quot;OcrDocumentScanResult&quot;,&quot;OpenActivity&quot;,&quot;OperatingHours&quot;,&quot;OperatingHoursHoliday&quot;,&quot;Opportunity&quot;,&quot;OpportunityContactRole&quot;,&quot;OpportunityContactRoleSuggestionInsight&quot;,&quot;OpportunityInsight&quot;,&quot;OpportunityLineItem&quot;,&quot;OpportunityLineItemSchedule&quot;,&quot;OpportunityParticipant&quot;,&quot;OpportunityPartner&quot;,&quot;OpportunitySplit&quot;,&quot;OpportunityTeamMember&quot;,&quot;Order&quot;,&quot;OrderAdjustmentGroup&quot;,&quot;OrderAdjustmentGroupSummary&quot;,&quot;OrderChangeLog&quot;,&quot;OrderDeliveryGroup&quot;,&quot;OrderDeliveryGroupSummary&quot;,&quot;OrderDeliveryMethod&quot;,&quot;OrderItem&quot;,&quot;OrderItemAdjustmentLineItem&quot;,&quot;OrderItemAdjustmentLineSummary&quot;,&quot;OrderItemConsumptionRate&quot;,&quot;OrderItemConsumptionSchedule&quot;,&quot;OrderItemSummary&quot;,&quot;OrderItemSummaryChange&quot;,&quot;OrderItemTaxLineItem&quot;,&quot;OrderItemTaxLineItemSummary&quot;,&quot;OrderPaymentSummary&quot;,&quot;OrderSummary&quot;,&quot;OrgMetric&quot;,&quot;OrgMetricScanResult&quot;,&quot;OrgMetricScanSummary&quot;,&quot;OtherComponentTask&quot;,&quot;PartnerFundAllocation&quot;,&quot;PartnerFundClaim&quot;,&quot;PartnerFundRequest&quot;,&quot;PartnerMarketingBudget&quot;,&quot;PartyConsent&quot;,&quot;PatientImmunization&quot;,&quot;PatientMedicalProcedure&quot;,&quot;PatientMedicationDosage&quot;,&quot;Payment&quot;,&quot;PaymentApplicationMethod&quot;,&quot;PaymentAuthorization&quot;,&quot;PaymentBatchRun&quot;,&quot;PaymentGateway&quot;,&quot;PaymentGatewayLog&quot;,&quot;PaymentLineInvoice&quot;,&quot;PaymentPolicy&quot;,&quot;PaymentSchedule&quot;,&quot;PaymentScheduleItem&quot;,&quot;PaymentTreatment&quot;,&quot;PersonAccount&quot;,&quot;PersonEducation&quot;,&quot;PersonEmployment&quot;,&quot;PersonExamination&quot;,&quot;PersonLanguage&quot;,&quot;PersonLifeEvent&quot;,&quot;PersonList&quot;,&quot;PersonListMember&quot;,&quot;PersonName&quot;,&quot;PgmRebateTypBnftMapping&quot;,&quot;PlanBenefit&quot;,&quot;PlanBenefitItem&quot;,&quot;PlatformLicenseDefinition&quot;,&quot;Polygon&quot;,&quot;PreliminaryApplicationRef&quot;,&quot;PriceAdjustmentSchedule&quot;,&quot;Pricebook2&quot;,&quot;PricebookEntry&quot;,&quot;ProcessException&quot;,&quot;ProcessInstanceHistory&quot;,&quot;ProcessInstanceStep&quot;,&quot;ProcessInstanceWorkitem&quot;,&quot;Producer&quot;,&quot;ProducerPolicyAssignment&quot;,&quot;Product2&quot;,&quot;Product2DataTranslation&quot;,&quot;ProductAttribute&quot;,&quot;ProductAttributeSet&quot;,&quot;ProductAttributeSetItem&quot;,&quot;ProductAttributeSetProduct&quot;,&quot;ProductAvailabilityProjection&quot;,&quot;ProductCatalog&quot;,&quot;ProductCategory&quot;,&quot;ProductCategoryDataTranslation&quot;,&quot;ProductCategoryMedia&quot;,&quot;ProductCategoryProduct&quot;,&quot;ProductConsumed&quot;,&quot;ProductConsumptionSchedule&quot;,&quot;ProductCoverage&quot;,&quot;ProductCoverageLimit&quot;,&quot;ProductFulfillmentLocation&quot;,&quot;ProductItem&quot;,&quot;ProductItemTransaction&quot;,&quot;ProductLicenseMap&quot;,&quot;ProductMedia&quot;,&quot;ProductRequest&quot;,&quot;ProductRequestLineItem&quot;,&quot;ProductRequired&quot;,&quot;ProductServiceCampaign&quot;,&quot;ProductTransfer&quot;,&quot;ProductWarrantyTerm&quot;,&quot;Product_Categories__c&quot;,&quot;ProgramRebateTypPayoutSrc&quot;,&quot;ProgramRebateType&quot;,&quot;ProgramRebateTypeBenefit&quot;,&quot;ProgramRebateTypeFilter&quot;,&quot;ProgramRebateTypePayout&quot;,&quot;Promotion&quot;,&quot;PromotionChannel&quot;,&quot;PromotionProduct&quot;,&quot;PromotionProductCategory&quot;,&quot;ProviderSearchSyncLog&quot;,&quot;ProvisioningRun&quot;,&quot;ProvisioningRunEvent&quot;,&quot;PublicComplaint&quot;,&quot;PurchaserPlan&quot;,&quot;PurchaserPlanAssn&quot;,&quot;QuickText&quot;,&quot;Quote&quot;,&quot;QuoteLineItem&quot;,&quot;RebateMemberProductAggregate&quot;,&quot;RebatePayment&quot;,&quot;RebatePayoutAdjustment&quot;,&quot;RebateProgram&quot;,&quot;RebateProgramMember&quot;,&quot;RebateProgramMemberPayout&quot;,&quot;RebateProgramPayoutPeriod&quot;,&quot;ReceivedDocument&quot;,&quot;Recommendation&quot;,&quot;RecordAction&quot;,&quot;RecordMergeHistory&quot;,&quot;RecordType&quot;,&quot;RecordsetFilterCriteria&quot;,&quot;RecordsetFilterCriteriaRule&quot;,&quot;Refund&quot;,&quot;RefundLinePayment&quot;,&quot;RegAuthorizationTypeProduct&quot;,&quot;RegulatoryAuthority&quot;,&quot;RegulatoryAuthorizationType&quot;,&quot;RegulatoryCode&quot;,&quot;RegulatoryCodeAssessmentInd&quot;,&quot;RegulatoryCodeViolation&quot;,&quot;Related_Lead__c&quot;,&quot;ReplyText&quot;,&quot;Report&quot;,&quot;ReportAnomalyEventStore&quot;,&quot;ResidentialLoanApplication&quot;,&quot;ResourceAbsence&quot;,&quot;ResourcePreference&quot;,&quot;RetailLocationGroup&quot;,&quot;RetailStore&quot;,&quot;RetailStoreKpi&quot;,&quot;RetailVisitKpi&quot;,&quot;ReturnOrder&quot;,&quot;ReturnOrderItemAdjustment&quot;,&quot;ReturnOrderItemTax&quot;,&quot;ReturnOrderLineItem&quot;,&quot;RevenueDistributionMethod&quot;,&quot;RevenueElement&quot;,&quot;RevenueRecognitionPolicy&quot;,&quot;RevenueRecognitionTreatment&quot;,&quot;SalesAgreement&quot;,&quot;SalesAgreementProduct&quot;,&quot;SalesAgreementProductSchedule&quot;,&quot;SalesChannel&quot;,&quot;SchedulingConstraint&quot;,&quot;Scorecard&quot;,&quot;ScorecardAssociation&quot;,&quot;ScorecardMetric&quot;,&quot;ScratchOrgInfo&quot;,&quot;SearchPromotionRule&quot;,&quot;SecuritiesHolding&quot;,&quot;SerializedProduct&quot;,&quot;SerializedProductTransaction&quot;,&quot;ServiceAppointment&quot;,&quot;ServiceAppointmentCapacityUsage&quot;,&quot;ServiceContract&quot;,&quot;ServiceCrew&quot;,&quot;ServiceCrewMember&quot;,&quot;ServiceResource&quot;,&quot;ServiceResourceCapacity&quot;,&quot;ServiceResourceSkill&quot;,&quot;ServiceTerritory&quot;,&quot;ServiceTerritoryLocation&quot;,&quot;ServiceTerritoryMember&quot;,&quot;ServiceTerritoryWorkType&quot;,&quot;SessionHijackingEventStore&quot;,&quot;SettingUsageDefinition&quot;,&quot;SettingUsageMap&quot;,&quot;SetupAssistantStep&quot;,&quot;SharingRecordCollection&quot;,&quot;SharingRecordCollectionItem&quot;,&quot;Shift&quot;,&quot;ShiftPattern&quot;,&quot;ShiftTemplate&quot;,&quot;Shipment&quot;,&quot;SignatureTask&quot;,&quot;SignatureTaskLineItem&quot;,&quot;SiqExchangeConnection&quot;,&quot;SkillRequirement&quot;,&quot;Snippet&quot;,&quot;SnippetAssignment&quot;,&quot;SocialPersona&quot;,&quot;SocialPost&quot;,&quot;StandardPermissionSet&quot;,&quot;StoreActionPlanTemplate&quot;,&quot;StoreAssortment&quot;,&quot;StoreProduct&quot;,&quot;StreamingChannel&quot;,&quot;Survey&quot;,&quot;SurveyEmailBranding&quot;,&quot;SurveyInvitation&quot;,&quot;SurveyQuestion&quot;,&quot;SurveyQuestionChoice&quot;,&quot;SurveyQuestionResponse&quot;,&quot;SurveyResponse&quot;,&quot;SurveyVersion&quot;,&quot;TabDefinition&quot;,&quot;Task&quot;,&quot;TaxCertificate&quot;,&quot;TaxEngine&quot;,&quot;TaxEngineInteractionLog&quot;,&quot;Tenant&quot;,&quot;TenantParameterMap&quot;,&quot;ThreatDetectionFeedback&quot;,&quot;TimeSheet&quot;,&quot;TimeSheetEntry&quot;,&quot;TimeSheetTemplate&quot;,&quot;TimeSlot&quot;,&quot;Topic&quot;,&quot;TrainingCourseParticipant&quot;,&quot;TransactionJournal&quot;,&quot;TrialEnvironmentSignup&quot;,&quot;TrnCourse&quot;,&quot;UnifiedEmail&quot;,&quot;UnitOfMeasure&quot;,&quot;UpgradePlan__c&quot;,&quot;UpgradeStep__c&quot;,&quot;UsageEntitlement&quot;,&quot;UsageEntitlementPeriod&quot;,&quot;UsageEntitlementUsage&quot;,&quot;UsageFactor&quot;,&quot;User&quot;,&quot;UserAppMenuItem&quot;,&quot;UserLicenseDefinition&quot;,&quot;ViolationEnforcementAction&quot;,&quot;ViolationInspAssessmentInd&quot;,&quot;ViolationType&quot;,&quot;ViolationTypeAssessmentInd&quot;,&quot;VisionPredictionSettings&quot;,&quot;Visit&quot;,&quot;VisitedParty&quot;,&quot;Visitor&quot;,&quot;VoiceCall&quot;,&quot;VolunteerProject&quot;,&quot;WarrantyTerm&quot;,&quot;WaveAutoInstallRequest&quot;,&quot;WebCart&quot;,&quot;WebStore&quot;,&quot;WebStoreBuyerGroup&quot;,&quot;WebStoreCatalog&quot;,&quot;WebStorePricebook&quot;,&quot;WebStoreSearchProdSettings&quot;,&quot;WorkCapacityLimit&quot;,&quot;WorkCapacityUsage&quot;,&quot;WorkContract&quot;,&quot;WorkForecastRun&quot;,&quot;WorkOrder&quot;,&quot;WorkOrderLineItem&quot;,&quot;WorkPlan&quot;,&quot;WorkPlanSelectionRule&quot;,&quot;WorkPlanTemplate&quot;,&quot;WorkPlanTemplateEntry&quot;,&quot;WorkSkillRouting&quot;,&quot;WorkStep&quot;,&quot;WorkStepTemplate&quot;,&quot;WorkType&quot;,&quot;WorkTypeGroup&quot;,&quot;WorkTypeGroupMember&quot;,&quot;WorkerCompCoverageClass&quot;,&quot;lightningbuddy__Action_User_Preference__c&quot;,&quot;lightningbuddy__Actions__c&quot;,&quot;lightningbuddy__Carousel_Image__c&quot;,&quot;lightningbuddy__Record_Criteria__c&quot;,&quot;lightningbuddy__Toaster_Alert_Param__c&quot;,&quot;lightningbuddy__Welcome_Mat_Tile__c&quot;,&quot;trailheadapp__Badge__c&quot;,&quot;trailheadapp__Debug_Log__c&quot;,&quot;trailheadapp__Trail__c&quot;,&quot;trailheadapp__Trailhead_User_Data__c&quot;,&quot;trailheadapp__Trailmix_Assignment__c&quot;,&quot;trailheadapp__Trailmix__c&quot;,&quot;trailheadapp__User_Badge__c&quot;,&quot;trailheadapp__User_Trailmix__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__AccountAppliedPromotion__c&quot;,&quot;vlocity_cmt__AccountBalance__c&quot;,&quot;vlocity_cmt__AccountDiscountItem__c&quot;,&quot;vlocity_cmt__AccountDiscountPricing__c&quot;,&quot;vlocity_cmt__AccountDiscount__c&quot;,&quot;vlocity_cmt__AccountHold__c&quot;,&quot;vlocity_cmt__AccountOffer__c&quot;,&quot;vlocity_cmt__AccountPriceAdjustment__c&quot;,&quot;vlocity_cmt__ActivityContentDocument__c&quot;,&quot;vlocity_cmt__ActivityTemplate__c&quot;,&quot;vlocity_cmt__AdminTabLayout__c&quot;,&quot;vlocity_cmt__ApplicationPartyRelationship__c&quot;,&quot;vlocity_cmt__ApplicationTemplate__c&quot;,&quot;vlocity_cmt__Application__c&quot;,&quot;vlocity_cmt__AssessmentAnswer__c&quot;,&quot;vlocity_cmt__AssessmentQuestion__c&quot;,&quot;vlocity_cmt__Assessment__c&quot;,&quot;vlocity_cmt__AssetPricingAdjustment__c&quot;,&quot;vlocity_cmt__AssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignmentExport__c&quot;,&quot;vlocity_cmt__AttributeAssignmentRule__c&quot;,&quot;vlocity_cmt__AttributeAssignment__c&quot;,&quot;vlocity_cmt__AttributeBinding__c&quot;,&quot;vlocity_cmt__AttributeCategory__c&quot;,&quot;vlocity_cmt__Attribute__c&quot;,&quot;vlocity_cmt__BillingDataTrim__c&quot;,&quot;vlocity_cmt__BusinessSiteOffering__c&quot;,&quot;vlocity_cmt__BusinessSite__c&quot;,&quot;vlocity_cmt__CachedAPIChangeEntry__c&quot;,&quot;vlocity_cmt__CachedAPIChange__c&quot;,&quot;vlocity_cmt__CachedAPIMigrate__c&quot;,&quot;vlocity_cmt__CachedAPIResponseOffers__c&quot;,&quot;vlocity_cmt__CachedAPIResponse__c&quot;,&quot;vlocity_cmt__CachedFilterableAttribute__c&quot;,&quot;vlocity_cmt__CachedKeyMapping__c&quot;,&quot;vlocity_cmt__CachedPriceBookEntryAttributeValue__c&quot;,&quot;vlocity_cmt__CachedProduct2Translation__c&quot;,&quot;vlocity_cmt__CachedPromotionTranslation__c&quot;,&quot;vlocity_cmt__CalculationMatrixColumn__c&quot;,&quot;vlocity_cmt__CalculationMatrixDimension__c&quot;,&quot;vlocity_cmt__CalculationMatrixRow__c&quot;,&quot;vlocity_cmt__CalculationMatrixVersion__c&quot;,&quot;vlocity_cmt__CalculationMatrix__c&quot;,&quot;vlocity_cmt__CalculationProcedureStep__c&quot;,&quot;vlocity_cmt__CalculationProcedureVariable__c&quot;,&quot;vlocity_cmt__CalculationProcedureVersion__c&quot;,&quot;vlocity_cmt__CalculationProcedure__c&quot;,&quot;vlocity_cmt__CallbackURI__c&quot;,&quot;vlocity_cmt__CampaignContentDocument__c&quot;,&quot;vlocity_cmt__CampaignMemberActionLog__c&quot;,&quot;vlocity_cmt__CardFrameworkConfiguration__c&quot;,&quot;vlocity_cmt__CartItem__c&quot;,&quot;vlocity_cmt__Cart__c&quot;,&quot;vlocity_cmt__CatalogProductRelationship__c&quot;,&quot;vlocity_cmt__CatalogRelationship__c&quot;,&quot;vlocity_cmt__Catalog__c&quot;,&quot;vlocity_cmt__ChargeMeasurement__c&quot;,&quot;vlocity_cmt__CompiledAttributeOverride__c&quot;,&quot;vlocity_cmt__ConsoleActionLog__c&quot;,&quot;vlocity_cmt__ContextAction__c&quot;,&quot;vlocity_cmt__ContextDimension__c&quot;,&quot;vlocity_cmt__ContextMappingArgument__c&quot;,&quot;vlocity_cmt__ContextMapping__c&quot;,&quot;vlocity_cmt__ContextRule__c&quot;,&quot;vlocity_cmt__ContextRuleset__c&quot;,&quot;vlocity_cmt__ContextScope__c&quot;,&quot;vlocity_cmt__ContractDocumentAccessControl__c&quot;,&quot;vlocity_cmt__ContractDocumentCollection__c&quot;,&quot;vlocity_cmt__ContractEnvelope__c&quot;,&quot;vlocity_cmt__ContractLineItem__c&quot;,&quot;vlocity_cmt__ContractManagementConfigurationSetup__c&quot;,&quot;vlocity_cmt__ContractRecipient__c&quot;,&quot;vlocity_cmt__ContractSection__c&quot;,&quot;vlocity_cmt__ContractTerm__c&quot;,&quot;vlocity_cmt__ContractTypeSetting__c&quot;,&quot;vlocity_cmt__ContractTypeTerm__c&quot;,&quot;vlocity_cmt__ContractType__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountItem__c&quot;,&quot;vlocity_cmt__ContractVersionDiscountPricing__c&quot;,&quot;vlocity_cmt__ContractVersionDiscount__c&quot;,&quot;vlocity_cmt__ContractVersion__c&quot;,&quot;vlocity_cmt__CpqConfigurationSetup__c&quot;,&quot;vlocity_cmt__CustomClassImplementation__c&quot;,&quot;vlocity_cmt__CustomFieldMap__c&quot;,&quot;vlocity_cmt__CustomFilterFormula__c&quot;,&quot;vlocity_cmt__CustomFilter__c&quot;,&quot;vlocity_cmt__CustomObjectMap__c&quot;,&quot;vlocity_cmt__CustomerInteractionTopic__c&quot;,&quot;vlocity_cmt__CustomerInteraction__c&quot;,&quot;vlocity_cmt__DRBatchQueue__c&quot;,&quot;vlocity_cmt__DRBulkData__c&quot;,&quot;vlocity_cmt__DRBundle__c&quot;,&quot;vlocity_cmt__DREncryption__c&quot;,&quot;vlocity_cmt__DRMapItem__c&quot;,&quot;vlocity_cmt__DRWorker__c&quot;,&quot;vlocity_cmt__Datastore__c&quot;,&quot;vlocity_cmt__DecompositionRelationship__c&quot;,&quot;vlocity_cmt__DocuSignAnchorTabSetting__c&quot;,&quot;vlocity_cmt__DocuSignCalloutConfigurationSetup__c&quot;,&quot;vlocity_cmt__DocuSignEnvelopeObjectSetting__c&quot;,&quot;vlocity_cmt__DocumentClause__c&quot;,&quot;vlocity_cmt__DocumentSection__c&quot;,&quot;vlocity_cmt__DocumentTemplateElement__c&quot;,&quot;vlocity_cmt__DocumentTemplateSectionCondition__c&quot;,&quot;vlocity_cmt__DocumentTemplateSection__c&quot;,&quot;vlocity_cmt__DocumentTemplate__c&quot;,&quot;vlocity_cmt__DocumentToken__c&quot;,&quot;vlocity_cmt__Document__c&quot;,&quot;vlocity_cmt__Dunning__c&quot;,&quot;vlocity_cmt__Element__c&quot;,&quot;vlocity_cmt__EntityFilterConditionArgument__c&quot;,&quot;vlocity_cmt__EntityFilterCondition__c&quot;,&quot;vlocity_cmt__EntityFilterMember__c&quot;,&quot;vlocity_cmt__EntityFilter__c&quot;,&quot;vlocity_cmt__ErrorCodeNamespace__c&quot;,&quot;vlocity_cmt__ErrorCode__c&quot;,&quot;vlocity_cmt__Error_Code_Namespace__c&quot;,&quot;vlocity_cmt__Error_Code__c&quot;,&quot;vlocity_cmt__EventDuringInteraction__c&quot;,&quot;vlocity_cmt__EventMessage__c&quot;,&quot;vlocity_cmt__ExpandedInteractionLog__c&quot;,&quot;vlocity_cmt__FieldSettings__c&quot;,&quot;vlocity_cmt__FieldsConfiguration__c&quot;,&quot;vlocity_cmt__FieldsLookupConfiguration__c&quot;,&quot;vlocity_cmt__FlowStepFields__c&quot;,&quot;vlocity_cmt__FulfilmentRequestDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineDecompRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineRelationship__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLineSourceRootOrderItem__c&quot;,&quot;vlocity_cmt__FulfilmentRequestLine__c&quot;,&quot;vlocity_cmt__FulfilmentRequest__c&quot;,&quot;vlocity_cmt__GeneralSettings__c&quot;,&quot;vlocity_cmt__GlobalAutoNumberSetting__c&quot;,&quot;vlocity_cmt__GraphCloneSpecial__c&quot;,&quot;vlocity_cmt__GraphClone__c&quot;,&quot;vlocity_cmt__HouseholdAddressMatch__c&quot;,&quot;vlocity_cmt__Household__c&quot;,&quot;vlocity_cmt__InboundRESTInterface__c&quot;,&quot;vlocity_cmt__IntegrationRetryPolicy__c&quot;,&quot;vlocity_cmt__InteractionLauncherConfiguration__c&quot;,&quot;vlocity_cmt__InterfaceImplementationDetail__c&quot;,&quot;vlocity_cmt__InterfaceImplementation__c&quot;,&quot;vlocity_cmt__Interface_BillingInfo__c&quot;,&quot;vlocity_cmt__Interface_DRGeneric__c&quot;,&quot;vlocity_cmt__Interface_ProductAttribute__c&quot;,&quot;vlocity_cmt__InventoryItemDecompositionRelationship__c&quot;,&quot;vlocity_cmt__InventoryItem__c&quot;,&quot;vlocity_cmt__ItemImplementation__c&quot;,&quot;vlocity_cmt__Jurisdiction__c&quot;,&quot;vlocity_cmt__LargeDataStore__c&quot;,&quot;vlocity_cmt__LineOfBusiness__c&quot;,&quot;vlocity_cmt__ManualQueueMember__c&quot;,&quot;vlocity_cmt__ManualQueue__c&quot;,&quot;vlocity_cmt__MobileConfiguration__c&quot;,&quot;vlocity_cmt__ObjectClass__c&quot;,&quot;vlocity_cmt__ObjectElement__c&quot;,&quot;vlocity_cmt__ObjectFacet__c&quot;,&quot;vlocity_cmt__ObjectFieldAttribute__c&quot;,&quot;vlocity_cmt__ObjectLayout__c&quot;,&quot;vlocity_cmt__ObjectRuleAssignment__c&quot;,&quot;vlocity_cmt__ObjectSection__c&quot;,&quot;vlocity_cmt__OfferMigrationComponentMapping__c&quot;,&quot;vlocity_cmt__OfferMigrationPlan__c&quot;,&quot;vlocity_cmt__OfferPricingComponent__c&quot;,&quot;vlocity_cmt__OfferingProcedure__c&quot;,&quot;vlocity_cmt__OmniScriptDefinition__c&quot;,&quot;vlocity_cmt__OmniScriptInstance__c&quot;,&quot;vlocity_cmt__OmniScript__c&quot;,&quot;vlocity_cmt__OperatingHoursEntry__c&quot;,&quot;vlocity_cmt__OperatingHours__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OpportunityAppliedPromotion__c&quot;,&quot;vlocity_cmt__OpportunityDiscountItem__c&quot;,&quot;vlocity_cmt__OpportunityDiscountPricing__c&quot;,&quot;vlocity_cmt__OpportunityDiscount__c&quot;,&quot;vlocity_cmt__OpportunityLineItemRelationship__c&quot;,&quot;vlocity_cmt__OpportunityPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrchestrationDependencyDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationDependency__c&quot;,&quot;vlocity_cmt__OrchestrationItemDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationItemSource__c&quot;,&quot;vlocity_cmt__OrchestrationItem__c&quot;,&quot;vlocity_cmt__OrchestrationPlanDefinition__c&quot;,&quot;vlocity_cmt__OrchestrationPlan__c&quot;,&quot;vlocity_cmt__OrchestrationQueueAssignmentRule__c&quot;,&quot;vlocity_cmt__OrchestrationQueue__c&quot;,&quot;vlocity_cmt__OrchestrationScenario__c&quot;,&quot;vlocity_cmt__OrchestrationSchedulerImplementation__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__OrderAppliedPromotion__c&quot;,&quot;vlocity_cmt__OrderDiscountItem__c&quot;,&quot;vlocity_cmt__OrderDiscountPricing__c&quot;,&quot;vlocity_cmt__OrderDiscount__c&quot;,&quot;vlocity_cmt__OrderGroup__c&quot;,&quot;vlocity_cmt__OrderItemPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderItemRelationship__c&quot;,&quot;vlocity_cmt__OrderPriceAdjustment__c&quot;,&quot;vlocity_cmt__OrderRelationship__c&quot;,&quot;vlocity_cmt__OutboundConfiguration__c&quot;,&quot;vlocity_cmt__OverrideDefinition__c&quot;,&quot;vlocity_cmt__PDFDocumentTemplate__c&quot;,&quot;vlocity_cmt__PartyMaintenanceJobConfiguration__c&quot;,&quot;vlocity_cmt__PartyMergeMetadata__c&quot;,&quot;vlocity_cmt__PartyMergeRequest__c&quot;,&quot;vlocity_cmt__PartyRelationshipType__c&quot;,&quot;vlocity_cmt__PartyRelationship__c&quot;,&quot;vlocity_cmt__Party_Association__c&quot;,&quot;vlocity_cmt__Party__c&quot;,&quot;vlocity_cmt__PaymentAdjustment__c&quot;,&quot;vlocity_cmt__PaymentMethod__c&quot;,&quot;vlocity_cmt__PaymentPlan__c&quot;,&quot;vlocity_cmt__PersonAccountSettings__c&quot;,&quot;vlocity_cmt__PicklistSelectionEntry__c&quot;,&quot;vlocity_cmt__PicklistValue__c&quot;,&quot;vlocity_cmt__Picklist__c&quot;,&quot;vlocity_cmt__PremisesPartyRelationship__c&quot;,&quot;vlocity_cmt__Premises__c&quot;,&quot;vlocity_cmt__PriceListEntry__c&quot;,&quot;vlocity_cmt__PriceList__c&quot;,&quot;vlocity_cmt__PricingComponentRelationship__c&quot;,&quot;vlocity_cmt__PricingComponent__c&quot;,&quot;vlocity_cmt__PricingElement__c&quot;,&quot;vlocity_cmt__PricingPlanStep__c&quot;,&quot;vlocity_cmt__PricingPlan__c&quot;,&quot;vlocity_cmt__PricingVariableBinding__c&quot;,&quot;vlocity_cmt__PricingVariable__c&quot;,&quot;vlocity_cmt__ProductAttribXN__c&quot;,&quot;vlocity_cmt__ProductAvailability__c&quot;,&quot;vlocity_cmt__ProductChildItem__c&quot;,&quot;vlocity_cmt__ProductConfigurationProcedure__c&quot;,&quot;vlocity_cmt__ProductEligibility__c&quot;,&quot;vlocity_cmt__ProductManagementConfiguration__c&quot;,&quot;vlocity_cmt__ProductRelationshipType__c&quot;,&quot;vlocity_cmt__ProductRelationship__c&quot;,&quot;vlocity_cmt__ProductTemplate__c&quot;,&quot;vlocity_cmt__ProfileCategoryAssignment__c&quot;,&quot;vlocity_cmt__ProfilingSegmentCategory__c&quot;,&quot;vlocity_cmt__ProfilingSegment__c&quot;,&quot;vlocity_cmt__ProjectItem__c&quot;,&quot;vlocity_cmt__Project__c&quot;,&quot;vlocity_cmt__PromotionApplicableProduct__c&quot;,&quot;vlocity_cmt__PromotionIncludedProduct__c&quot;,&quot;vlocity_cmt__PromotionItem__c&quot;,&quot;vlocity_cmt__PromotionPricingAlteration__c&quot;,&quot;vlocity_cmt__Promotion__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotionItem__c&quot;,&quot;vlocity_cmt__QuoteAppliedPromotion__c&quot;,&quot;vlocity_cmt__QuoteDiscountItem__c&quot;,&quot;vlocity_cmt__QuoteDiscountPricing__c&quot;,&quot;vlocity_cmt__QuoteDiscount__c&quot;,&quot;vlocity_cmt__QuoteGroup__c&quot;,&quot;vlocity_cmt__QuoteLineItemPricingAdjustment__c&quot;,&quot;vlocity_cmt__QuoteLineItemRelationship__c&quot;,&quot;vlocity_cmt__QuotePricingAdjustment__c&quot;,&quot;vlocity_cmt__RelationshipGraphConfigurationSetup__c&quot;,&quot;vlocity_cmt__RelationshipGraphDetails__c&quot;,&quot;vlocity_cmt__RelationshipGraphNodeType__c&quot;,&quot;vlocity_cmt__RelationshipGraphTraversal__c&quot;,&quot;vlocity_cmt__RelationshipGraph__c&quot;,&quot;vlocity_cmt__RemoteUrlTemplate__c&quot;,&quot;vlocity_cmt__RuleAction__c&quot;,&quot;vlocity_cmt__RuleAssignment__c&quot;,&quot;vlocity_cmt__RuleFilter__c&quot;,&quot;vlocity_cmt__RuleProperty__c&quot;,&quot;vlocity_cmt__RuleVariable__c&quot;,&quot;vlocity_cmt__Rule__c&quot;,&quot;vlocity_cmt__RunTriggerAndWorkFlow__c&quot;,&quot;vlocity_cmt__ScreeningRuleGroup__c&quot;,&quot;vlocity_cmt__ScreeningRule__c&quot;,&quot;vlocity_cmt__SecurityDeposit__c&quot;,&quot;vlocity_cmt__ServicePoint__c&quot;,&quot;vlocity_cmt__SpecTemplateAttributeMapping__c&quot;,&quot;vlocity_cmt__SpecTemplateMapping__c&quot;,&quot;vlocity_cmt__Stage__c&quot;,&quot;vlocity_cmt__StateTransition__c&quot;,&quot;vlocity_cmt__StatementLineItem__c&quot;,&quot;vlocity_cmt__Statement__c&quot;,&quot;vlocity_cmt__StoryListPageLimit__c&quot;,&quot;vlocity_cmt__StoryObjectConfiguration__c&quot;,&quot;vlocity_cmt__StringTranslation__c&quot;,&quot;vlocity_cmt__String__c&quot;,&quot;vlocity_cmt__Subscription__c&quot;,&quot;vlocity_cmt__SyncDeltaControl__c&quot;,&quot;vlocity_cmt__SyncDeltaObject__c&quot;,&quot;vlocity_cmt__SyncDeltaSnapshot__c&quot;,&quot;vlocity_cmt__SystemInterface__c&quot;,&quot;vlocity_cmt__System__c&quot;,&quot;vlocity_cmt__TemplateDesignerConfiguration__c&quot;,&quot;vlocity_cmt__ThorOrchestrationQueue__c&quot;,&quot;vlocity_cmt__TimePlan__c&quot;,&quot;vlocity_cmt__TimePolicy__c&quot;,&quot;vlocity_cmt__TriggerSetup__c&quot;,&quot;vlocity_cmt__UICustomization__c&quot;,&quot;vlocity_cmt__UIFacet__c&quot;,&quot;vlocity_cmt__UISection__c&quot;,&quot;vlocity_cmt__UISettings__c&quot;,&quot;vlocity_cmt__UserCalendar__c&quot;,&quot;vlocity_cmt__VlocityAPIMetadata__c&quot;,&quot;vlocity_cmt__VlocityAction__c&quot;,&quot;vlocity_cmt__VlocityAttachment__c&quot;,&quot;vlocity_cmt__VlocityCard__c&quot;,&quot;vlocity_cmt__VlocityDataCache__c&quot;,&quot;vlocity_cmt__VlocityDataPack__c&quot;,&quot;vlocity_cmt__VlocityDocuSignBranding__c&quot;,&quot;vlocity_cmt__VlocityDocuSignTemplate__c&quot;,&quot;vlocity_cmt__VlocityErrorLogEntry__c&quot;,&quot;vlocity_cmt__VlocityFunctionArgument__c&quot;,&quot;vlocity_cmt__VlocityFunction__c&quot;,&quot;vlocity_cmt__VlocityLibraryOrganization__c&quot;,&quot;vlocity_cmt__VlocityScheduledJob__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetActionsSetup__c&quot;,&quot;vlocity_cmt__VlocitySearchWidgetSetup__c&quot;,&quot;vlocity_cmt__VlocityStateModelVersion__c&quot;,&quot;vlocity_cmt__VlocityStateModel__c&quot;,&quot;vlocity_cmt__VlocityStateTransition__c&quot;,&quot;vlocity_cmt__VlocityState__c&quot;,&quot;vlocity_cmt__VlocitySystemLog__c&quot;,&quot;vlocity_cmt__VlocityTrackingEntry__c&quot;,&quot;vlocity_cmt__VlocityUILayout__c&quot;,&quot;vlocity_cmt__VlocityUITemplate__c&quot;,&quot;vlocity_cmt__VqMachineResource__c&quot;,&quot;vlocity_cmt__VqMachine__c&quot;,&quot;vlocity_cmt__VqResource__c&quot;,&quot;vlocity_cmt__WorkSetSettings__c&quot;,&quot;vlocity_cmt__XLIBatchValidationSetting__c&quot;,&quot;vlocity_cmt__XOMCustomLabelsCache__c&quot;,&quot;vlocity_cmt__XOMParameter__c&quot;,&quot;vlocity_cmt__XOMSetup__c&quot;]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=17&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getActionOverrides=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getIsLWCFlexipageEnabled=1&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getKeyPrefixesWithRecordTypes=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">19400000000f5e5767</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=20&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-91" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1106;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;],&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=20&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">20026000000020e4d4</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=18&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-89" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1104;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;],&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=18&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">20019000000082e1f9</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=19&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1-90" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1105;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.platformStateManager.PlatformStateManagerController/ACTION$getFlexipageInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;flexipageOverrides&quot;:{&quot;Account&quot;:[&quot;Billing_Screen_YES&quot;,&quot;Billing_Screen_BBL&quot;,&quot;Billing_Screen_PEL&quot;,&quot;Consumer_Screen&quot;],&quot;vlocity_cmt__DecompositionRelationship__c&quot;:[&quot;vlocity_cmt__DefaultDecompositionRelationshipRecordPage&quot;],&quot;Contact&quot;:[&quot;Contact_Record_Page&quot;],&quot;Opportunity&quot;:[&quot;Opportunity_Record_Page&quot;],&quot;Lead&quot;:[&quot;B2CLeadBeforeConversion&quot;,&quot;B2CLeadClosedLost_Record_Page&quot;,&quot;B2CLeadAfterConversion_Record_Page&quot;,&quot;B2CLeadBeforeConversion&quot;]}},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=19&amp;ui-force-components-controllers-platformStateManager.PlatformStateManager.getFlexipageInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">200230000008175f0e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=21&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1-92" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1107;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.systemMessage.SystemMessageController/ACTION$getSystemMessages&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;isExtensiveMessage&quot;:true}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=21&amp;ui-global-components-one-systemMessage.SystemMessage.getSystemMessages=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">20363000000c374c91</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chat/rest/console-94" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">version</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="chatUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">chatUrl</stringProp>
                  <stringProp name="Argument.value">${scheme}://d.la1-c1cs-lo2.salesforceliveagent.com/chat</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="contentUrl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">contentUrl</stringProp>
                  <stringProp name="Argument.value">${scheme}://c.la1-c1cs-lo2.salesforceliveagent.com/content</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">d.la1-c1cs-lo2.salesforceliveagent.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/chat/rest/console</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/chat/rest/cdm-99" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="version" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">version</stringProp>
                  <stringProp name="Argument.value">50</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="redirect" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">redirect</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">d.la1-c1cs-lo2.salesforceliveagent.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/chat/rest/cdm</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://d.la1-c1cs-lo2.salesforceliveagent.com/chat/rest/console?version=50&amp;chatUrl=${scheme}%3A%2F%2Fd.la1-c1cs-lo2.salesforceliveagent.com%2Fchat&amp;contentUrl=${scheme}%3A%2F%2Fc.la1-c1cs-lo2.salesforceliveagent.com%2Fcontent</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cometd/40.0-87" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;id&quot;:&quot;5&quot;,&quot;channel&quot;:&quot;/meta/connect&quot;,&quot;connectionType&quot;:&quot;long-polling&quot;,&quot;clientId&quot;:&quot;${_clientId}&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cometd/40.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/jslibrary/1604022292000/streaming-v2/CometdWorkerJs.js</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">OAuth ${_sessionKey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="04. Search Customer" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <URLRewritingModifier guiclass="URLRewritingModifierGui" testclass="URLRewritingModifier" testname="HTTP URL Re-writing Modifier" enabled="true">
            <stringProp name="argument_name">searchDialogSessionId</stringProp>
            <boolProp name="path_extension">true</boolProp>
            <boolProp name="path_extension_no_equals">false</boolProp>
            <boolProp name="path_extension_no_questionmark">true</boolProp>
            <boolProp name="cache_value">true</boolProp>
            <boolProp name="encode">false</boolProp>
          </URLRewritingModifier>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=53&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1&amp;ui-search-components-forcesearch-typeaheaddataprovider.TypeAheadDataProvider.getTypeaheadItems=1-457" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;5688;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.experiment.ExperimentController/ACTION$startExperiment&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;searchDialogSessionId&quot;:&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2&quot;}},{&quot;id&quot;:&quot;5721;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.typeaheaddataprovider.TypeAheadDataProviderController/ACTION$getTypeaheadItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;scopeMap&quot;:{&quot;type&quot;:&quot;TOP_RESULTS&quot;},&quot;context&quot;:{&quot;disableSpellCorrection&quot;:false,&quot;disableIntentQuery&quot;:false,&quot;permsAndPrefs&quot;:{&quot;OrgPermissions.UnionAppNavSmartScope&quot;:false,&quot;SearchUi.feedbackComponentEnabled&quot;:false,&quot;OrgPermissions.EinsteinSearchApps&quot;:false,&quot;OrgPreferences.ChatterEnabled&quot;:true,&quot;Search.crossObjectsAutoSuggestEnabled&quot;:true,&quot;SearchUi.searchUIInteractionLoggingEnabled&quot;:false,&quot;MySearch.userCanHaveMySearchBestResult&quot;:false,&quot;SearchResultsLVM.lvmEnabledForTopResults&quot;:false},&quot;searchDialogSessionId&quot;:&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724&quot;,&quot;searchSource&quot;:&quot;INPUT_DESKTOP&quot;},&quot;maxResults&quot;:5,&quot;term&quot;:&quot;${term}&quot;,&quot;scopeNames&quot;:[],&quot;scopeSetTypes&quot;:[&quot;SMART_SCOPE&quot;],&quot;queryMaps&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Owner.Alias&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;חשבונות&quot;,&quot;label&quot;:&quot;חשבון&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Account.Name&quot;,&quot;disambiguationFieldType&quot;:&quot;NESTED&quot;,&quot;labelPlural&quot;:&quot;אנשי קשר&quot;,&quot;label&quot;:&quot;איש קשר&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;nameField&quot;:&quot;Name&quot;,&quot;disambiguationField&quot;:&quot;Title&quot;,&quot;disambiguationFieldType&quot;:&quot;STRING&quot;,&quot;labelPlural&quot;:&quot;לידים&quot;,&quot;label&quot;:&quot;ליד&quot;}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=53&amp;ui-search-components-forcesearch-experiment.Experiment.startExperiment=1&amp;ui-search-components-forcesearch-typeaheaddataprovider.TypeAheadDataProvider.getTypeaheadItems=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">33492780000000336c</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=54&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-459" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;5756;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3316729,\&quot;duration\&quot;:1,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604238996362,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1604238996362,\&quot;etDataCopy\&quot;:1,\&quot;tEnd\&quot;:1604238996363,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:c21d048f-a421-ac71-b3b9-2d40d7dcacc6\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;c21d048f-a421-ac71-b3b9-2d40d7dcacc6\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:MASKED_SEARCH_INFO\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1604238996363,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;878a47ac-4f2a-45d6-b690-939031689758\&quot;,\&quot;searchId\&quot;:\&quot;cf9a7653-c8a6-7fad-6b3f-23de02ae5e8b\&quot;,\&quot;searchStartTime\&quot;:1604237465970,\&quot;searchElapsedTime\&quot;:1530393,\&quot;searchDialogSessionId\&quot;:\&quot;96957f01-6f6c-ebeb-2701-2047cec504c4\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3316729,\&quot;duration\&quot;:9,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;startTime\&quot;:1604238996361,\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;endTime\&quot;:1604238996370,\&quot;totalTime\&quot;:9,\&quot;numTotalItems\&quot;:0,\&quot;numGlobalItems\&quot;:0,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:true,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1604238996371,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;878a47ac-4f2a-45d6-b690-939031689758\&quot;,\&quot;searchId\&quot;:\&quot;cf9a7653-c8a6-7fad-6b3f-23de02ae5e8b\&quot;,\&quot;searchStartTime\&quot;:1604237465970,\&quot;searchElapsedTime\&quot;:1530401,\&quot;searchDialogSessionId\&quot;:\&quot;96957f01-6f6c-ebeb-2701-2047cec504c4\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3316748,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:2,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724_2\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604238996380,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:49,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3316741,\&quot;duration\&quot;:637,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3316770,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:50,\&quot;requestLength\&quot;:4089,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5036;a\&quot;,\&quot;5153;a\&quot;],\&quot;requestId\&quot;:\&quot;3316770000000e7f61\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1402,\&quot;xhrDuration\&quot;:599,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:3316771,\&quot;fetchStart\&quot;:3316771,\&quot;requestStart\&quot;:3316791,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:579,\&quot;transferSize\&quot;:2454,\&quot;serverTime\&quot;:256,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:601}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3316770,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5036;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:256,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:603}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:5,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:5}]}]},\&quot;owner\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideTypeAheadOptions\&quot;,\&quot;attributes\&quot;:{\&quot;startTime\&quot;:1604238996374,\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;actionId\&quot;:\&quot;5153;a\&quot;,\&quot;isFromStorage\&quot;:false,\&quot;queryId\&quot;:\&quot;-qp6sk78f3fae\&quot;,\&quot;searchTimes\&quot;:[\&quot;SSU.getRecordSuggestions():226\&quot;,\&quot;SFU.addFields:0\&quot;],\&quot;serverTime\&quot;:226,\&quot;numItems\&quot;:0,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;endTime\&quot;:1604238997008,\&quot;totalTime\&quot;:634,\&quot;transportTime\&quot;:408,\&quot;sourceCmp\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;time\&quot;:1604238997008,\&quot;queryLength\&quot;:5,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;878a47ac-4f2a-45d6-b690-939031689758\&quot;,\&quot;searchId\&quot;:\&quot;cf9a7653-c8a6-7fad-6b3f-23de02ae5e8b\&quot;,\&quot;searchStartTime\&quot;:1604237465970,\&quot;searchElapsedTime\&quot;:1531038,\&quot;searchDialogSessionId\&quot;:\&quot;96957f01-6f6c-ebeb-2701-2047cec504c4\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3317380,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:3,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724_3\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604238997013,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:50,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3316720,\&quot;duration\&quot;:668,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3316770,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:50,\&quot;requestLength\&quot;:4089,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5036;a\&quot;,\&quot;5153;a\&quot;],\&quot;requestId\&quot;:\&quot;3316770000000e7f61\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1402,\&quot;xhrDuration\&quot;:599,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:3316771,\&quot;fetchStart\&quot;:3316771,\&quot;requestStart\&quot;:3316791,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:579,\&quot;transferSize\&quot;:2454,\&quot;serverTime\&quot;:256,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:601}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3316770,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5036;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:256,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:603}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:5,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:5}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideInputOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;crossEntityTypeAheadEnabled\&quot;:true,\&quot;startTime\&quot;:1604238996352,\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;headerActionTime\&quot;:1,\&quot;mruTime\&quot;:9,\&quot;typeAheadTime\&quot;:634,\&quot;typeAheadFromStorage\&quot;:false,\&quot;typeAheadActionId\&quot;:\&quot;5153;a\&quot;,\&quot;endTime\&quot;:1604238997020,\&quot;totalTime\&quot;:668,\&quot;numTotalItems\&quot;:1,\&quot;numGlobalMruItems\&quot;:0,\&quot;numGlobalMruItemsRequested\&quot;:5,\&quot;numScopedMruItems\&quot;:0,\&quot;numScopedMruItemsRequested\&quot;:0,\&quot;numScopedTypeAheadItems\&quot;:0,\&quot;numHeaderActionItems\&quot;:1,\&quot;numFooterActionItems\&quot;:0,\&quot;typeAheadQueryId\&quot;:\&quot;-qp6sk78f3fae\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;records\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktopDataProvider\&quot;,\&quot;time\&quot;:1604238997021,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;878a47ac-4f2a-45d6-b690-939031689758\&quot;,\&quot;searchId\&quot;:\&quot;cf9a7653-c8a6-7fad-6b3f-23de02ae5e8b\&quot;,\&quot;searchStartTime\&quot;:1604237465970,\&quot;searchElapsedTime\&quot;:1531051,\&quot;searchDialogSessionId\&quot;:\&quot;96957f01-6f6c-ebeb-2701-2047cec504c4\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3318042,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;aura:html\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;context\&quot;:{},\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;},\&quot;sequence\&quot;:51,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3318078,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;method\&quot;:\&quot;click\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;type\&quot;:\&quot;SEARCH_OPTION\&quot;,\&quot;prescoping\&quot;:false,\&quot;suggestionId\&quot;:\&quot;ac61b6f1-fb60-862e-edb4-4073385ae8e3\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724_3\&quot;,\&quot;position\&quot;:1,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604238997711,\&quot;queryLength\&quot;:5,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-mru-action-item\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:52,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318126,\&quot;duration\&quot;:51,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-search\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1604238997810,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;36d239e5-1338-c6a6-9be1-46c88f79b1b7\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:96,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318088,\&quot;duration\&quot;:129,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:9,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:9}]}]},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-newSearch\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;time\&quot;:1604238997849,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;36d239e5-1338-c6a6-9be1-46c88f79b1b7\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:135,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318242,\&quot;duration\&quot;:3,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-search\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1604238997878,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:164,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318173,\&quot;duration\&quot;:682,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3318246,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:51,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5239;a\&quot;,\&quot;5274;a\&quot;],\&quot;requestId\&quot;:\&quot;33182460000008267a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5246,\&quot;xhrDuration\&quot;:601,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:3318248,\&quot;fetchStart\&quot;:3318248,\&quot;requestStart\&quot;:3318265,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:17,\&quot;transfer\&quot;:584,\&quot;transferSize\&quot;:6351,\&quot;serverTime\&quot;:252,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:605}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideResults\&quot;,\&quot;attributes\&quot;:{\&quot;scopeNames\&quot;:[],\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;enableRowActions\&quot;:false,\&quot;withSingleSOSL\&quot;:true,\&quot;withEntityPrediction\&quot;:true,\&quot;batchSize\&quot;:3,\&quot;batchingTimeout\&quot;:2500,\&quot;searchTimes\&quot;:[\&quot;SEU.getSearchableEntitiesName():1\&quot;,\&quot;SEP.getPredictedEntities():102\&quot;,\&quot;TRDP.getScopeMapsToSearch():0\&quot;,\&quot;TRDP.getItems()search:126\&quot;,\&quot;TRDP.getItems():229\&quot;,\&quot;XHR.duration:680\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;time\&quot;:1604238998486,\&quot;queryLength\&quot;:5,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3319145,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;sortBy\&quot;:\&quot;__relevancy__\&quot;,\&quot;queryId\&quot;:\&quot;adaopg9jh6o2\&quot;,\&quot;numResults\&quot;:1,\&quot;queryIds\&quot;:[\&quot;adaopg9jh6o2\&quot;],\&quot;page\&quot;:1,\&quot;inMultiScope\&quot;:true,\&quot;resultType\&quot;:\&quot;KEYWORD_RESULTS\&quot;,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1604238998779,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:1065,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-grid-lvm\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:53,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:newDefs\&quot;,\&quot;ts\&quot;:3320018,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;one:one\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;newDefs\&quot;,\&quot;attributes\&quot;:{\&quot;componentDefs\&quot;:[\&quot;layout://rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-3855372b6b67703658597934363138664977327332513d3d.c\&quot;],\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3320371,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;adaopg9jh6o2\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:18|RCC.buildSearchRecords():0|RCC.buildScopedResponse():18|RCC.buildSearchRequest():0|SS.runSearch():66|RCC.getRecords():84\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1489,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;qd2a2ycwmiwe\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1kp3ew933vgkl\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():19|RCC.getRecords():19\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;queryIds\&quot;:[\&quot;adaopg9jh6o2\&quot;,\&quot;qd2a2ycwmiwe\&quot;,\&quot;-1kp3ew933vgkl\&quot;],\&quot;inMultiScope\&quot;:false,\&quot;numResults\&quot;:1,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239000003,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2289,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-multi-scope\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:54,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318132,\&quot;duration\&quot;:2246,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:3318874,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1489},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:3320273,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;4136:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:71}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3318246,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:51,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5239;a\&quot;,\&quot;5274;a\&quot;],\&quot;requestId\&quot;:\&quot;33182460000008267a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5246,\&quot;xhrDuration\&quot;:601,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:3318248,\&quot;fetchStart\&quot;:3318248,\&quot;requestStart\&quot;:3318265,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:17,\&quot;transfer\&quot;:584,\&quot;transferSize\&quot;:6351,\&quot;serverTime\&quot;:252,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:605},{\&quot;ts\&quot;:3319199,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:52,\&quot;requestLength\&quot;:2429,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5418;a\&quot;],\&quot;requestId\&quot;:\&quot;3319198000000146e9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18622,\&quot;xhrDuration\&quot;:815,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:3319199,\&quot;fetchStart\&quot;:3319199,\&quot;requestStart\&quot;:3319219,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:795,\&quot;transferSize\&quot;:19909,\&quot;serverTime\&quot;:471,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:817}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3318173,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5239;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:19,\&quot;enqueueWait\&quot;:54,\&quot;serverTime\&quot;:{\&quot;total\&quot;:230,\&quot;db\&quot;:57,\&quot;xhrServerTime\&quot;:252,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:6,\&quot;duration\&quot;:686},{\&quot;ts\&quot;:3318216,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5274;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:30,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:252,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:645},{\&quot;ts\&quot;:3319186,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5418;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:12,\&quot;serverTime\&quot;:{\&quot;total\&quot;:448,\&quot;db\&quot;:14,\&quot;xhrServerTime\&quot;:471,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:335,\&quot;duration\&quot;:1169}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:379,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:223},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-3855372b6b67703658597934363138664977327332513d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:60},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:73},{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:6,\&quot;createTimeTotal\&quot;:22},{\&quot;name\&quot;:\&quot;search_lightning:searchMoreBox\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPT\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1604238997765,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:1,\&quot;totalTime\&quot;:2238,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:680,\&quot;serverTime\&quot;:229,\&quot;networkTime\&quot;:451,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:126,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:1558},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;adaopg9jh6o2\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:18|RCC.buildSearchRecords():0|RCC.buildScopedResponse():18|RCC.buildSearchRequest():0|SS.runSearch():66|RCC.getRecords():84\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1489,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;qd2a2ycwmiwe\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1kp3ew933vgkl\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():19|RCC.getRecords():19\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:680,\&quot;serverTime\&quot;:229,\&quot;startTime\&quot;:11,\&quot;networkTime\&quot;:451,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():1|SEP.getPredictedEntities():102|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:126|TRDP.getItems():229|XHR.duration:680|LVS.getListViewDefinition:18|RCC.buildSearchRecords():0|RCC.buildScopedResponse():18|RCC.buildSearchRequest():0|SS.runSearch():108|RCC.getRecords():126\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:126,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;1\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;102\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;126\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;229\&quot;,\&quot;XHR_duration\&quot;:\&quot;680\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;18\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;18\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;108\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;126\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239000006,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2292,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318080,\&quot;duration\&quot;:2300,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:3318874,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:1489},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:3320273,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;4136:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:71}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3318246,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:51,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5239;a\&quot;,\&quot;5274;a\&quot;],\&quot;requestId\&quot;:\&quot;33182460000008267a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5246,\&quot;xhrDuration\&quot;:601,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:3318248,\&quot;fetchStart\&quot;:3318248,\&quot;requestStart\&quot;:3318265,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:17,\&quot;transfer\&quot;:584,\&quot;transferSize\&quot;:6351,\&quot;serverTime\&quot;:252,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:605},{\&quot;ts\&quot;:3319199,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:52,\&quot;requestLength\&quot;:2429,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5418;a\&quot;],\&quot;requestId\&quot;:\&quot;3319198000000146e9\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:18622,\&quot;xhrDuration\&quot;:815,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:3319199,\&quot;fetchStart\&quot;:3319199,\&quot;requestStart\&quot;:3319219,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:795,\&quot;transferSize\&quot;:19909,\&quot;serverTime\&quot;:471,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:817}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3318173,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5239;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:19,\&quot;enqueueWait\&quot;:54,\&quot;serverTime\&quot;:{\&quot;total\&quot;:230,\&quot;db\&quot;:57,\&quot;xhrServerTime\&quot;:252,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:6,\&quot;duration\&quot;:686},{\&quot;ts\&quot;:3318216,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5274;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:30,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:252,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:2,\&quot;duration\&quot;:645},{\&quot;ts\&quot;:3319186,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5418;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:12,\&quot;serverTime\&quot;:{\&quot;total\&quot;:448,\&quot;db\&quot;:14,\&quot;xhrServerTime\&quot;:471,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:335,\&quot;duration\&quot;:1169}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:388,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:9},{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:223},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-3855372b6b67703658597934363138664977327332513d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:60},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:73},{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:6,\&quot;createTimeTotal\&quot;:22}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPTE2E\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1604238997765,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:1,\&quot;totalTime\&quot;:2238,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:680,\&quot;serverTime\&quot;:229,\&quot;networkTime\&quot;:451,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:126,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:1558},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;adaopg9jh6o2\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:18|RCC.buildSearchRecords():0|RCC.buildScopedResponse():18|RCC.buildSearchRequest():0|SS.runSearch():66|RCC.getRecords():84\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:1489,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;qd2a2ycwmiwe\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():23|RCC.getRecords():23\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1kp3ew933vgkl\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():19|RCC.getRecords():19\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:680,\&quot;serverTime\&quot;:229,\&quot;startTime\&quot;:11,\&quot;networkTime\&quot;:451,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():1|SEP.getPredictedEntities():102|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:126|TRDP.getItems():229|XHR.duration:680|LVS.getListViewDefinition:18|RCC.buildSearchRecords():0|RCC.buildScopedResponse():18|RCC.buildSearchRequest():0|SS.runSearch():108|RCC.getRecords():126\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:126,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;1\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;102\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;126\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;229\&quot;,\&quot;XHR_duration\&quot;:\&quot;680\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;18\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;18\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;108\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;126\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239000013,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2299,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3320387,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getScopeMaps\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604239000020,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1604239000020,\&quot;etDataCopy\&quot;:1,\&quot;tEnd\&quot;:1604239000021,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getScopeMaps\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:47c0f638-5188-c978-07b3-a52a5cf9d3b5\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;47c0f638-5188-c978-07b3-a52a5cf9d3b5\&quot;,\&quot;params\&quot;:[\&quot;entityNames:Account,Contact,Lead\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheScopes\&quot;,\&quot;time\&quot;:1604239000021,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2307,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3320387,\&quot;duration\&quot;:3,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesList-getScopeMaps-entityPrediction\&quot;,\&quot;attributes\&quot;:{\&quot;sourceCmp\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;time\&quot;:1604239000023,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2309,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3320382,\&quot;duration\&quot;:213,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:84,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:10,\&quot;createTimeTotal\&quot;:84}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-scopeItemsReorderingOn\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239000228,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:2514,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3318040,\&quot;duration\&quot;:2751,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;pageContext\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;pageUrl\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3349191,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239028824,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-input\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:55,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3349210,\&quot;duration\&quot;:11,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604239028843,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:1,\&quot;tSending\&quot;:1604239028844,\&quot;etDataCopy\&quot;:9,\&quot;tEnd\&quot;:1604239028853,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:10,\&quot;requestId\&quot;:\&quot;cacheBridge:b59ca64f-0297-55a1-bd28-c5b0a00830d2\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;b59ca64f-0297-55a1-bd28-c5b0a00830d2\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:MASKED_SEARCH_INFO\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1604239028853,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:31139,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3349209,\&quot;duration\&quot;:19,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;startTime\&quot;:1604239028842,\&quot;suggestionId\&quot;:\&quot;6af2f73b-1481-d94a-b6b7-4d058a9bd61d\&quot;,\&quot;endTime\&quot;:1604239028859,\&quot;totalTime\&quot;:17,\&quot;numTotalItems\&quot;:0,\&quot;numGlobalItems\&quot;:0,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:true,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1604239028860,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:31146,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3349245,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:1,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;6af2f73b-1481-d94a-b6b7-4d058a9bd61d\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2_1\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239028879,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:56,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3349241,\&quot;duration\&quot;:525,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3349278,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:53,\&quot;requestLength\&quot;:4089,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5688;a\&quot;,\&quot;5721;a\&quot;],\&quot;requestId\&quot;:\&quot;33492780000000336c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1397,\&quot;xhrDuration\&quot;:481,\&quot;xhrStall\&quot;:14,\&quot;startTime\&quot;:3349279,\&quot;fetchStart\&quot;:3349279,\&quot;requestStart\&quot;:3349293,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:467,\&quot;transferSize\&quot;:2448,\&quot;serverTime\&quot;:65,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:483}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3349278,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5688;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:65,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:484}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:18,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideTypeAheadOptions\&quot;,\&quot;attributes\&quot;:{\&quot;startTime\&quot;:1604239028875,\&quot;suggestionId\&quot;:\&quot;6af2f73b-1481-d94a-b6b7-4d058a9bd61d\&quot;,\&quot;actionId\&quot;:\&quot;5721;a\&quot;,\&quot;isFromStorage\&quot;:false,\&quot;queryId\&quot;:\&quot;172ba75skvvh9\&quot;,\&quot;searchTimes\&quot;:[\&quot;SSU.getRecordSuggestions():34\&quot;,\&quot;SFU.addFields:0\&quot;],\&quot;serverTime\&quot;:34,\&quot;numItems\&quot;:0,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;endTime\&quot;:1604239029398,\&quot;totalTime\&quot;:523,\&quot;transportTime\&quot;:489,\&quot;sourceCmp\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;time\&quot;:1604239029399,\&quot;queryLength\&quot;:5,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:31685,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3349774,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:2,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;6af2f73b-1481-d94a-b6b7-4d058a9bd61d\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2_2\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239029407,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:57,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3349203,\&quot;duration\&quot;:577,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3349278,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:53,\&quot;requestLength\&quot;:4089,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5688;a\&quot;,\&quot;5721;a\&quot;],\&quot;requestId\&quot;:\&quot;33492780000000336c\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1397,\&quot;xhrDuration\&quot;:481,\&quot;xhrStall\&quot;:14,\&quot;startTime\&quot;:3349279,\&quot;fetchStart\&quot;:3349279,\&quot;requestStart\&quot;:3349293,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:14,\&quot;transfer\&quot;:467,\&quot;transferSize\&quot;:2448,\&quot;serverTime\&quot;:65,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:483}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3349278,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5688;a\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:7,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:65,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:484}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:18,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideInputOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;crossEntityTypeAheadEnabled\&quot;:true,\&quot;startTime\&quot;:1604239028836,\&quot;suggestionId\&quot;:\&quot;6af2f73b-1481-d94a-b6b7-4d058a9bd61d\&quot;,\&quot;headerActionTime\&quot;:1,\&quot;mruTime\&quot;:17,\&quot;typeAheadTime\&quot;:523,\&quot;typeAheadFromStorage\&quot;:false,\&quot;typeAheadActionId\&quot;:\&quot;5721;a\&quot;,\&quot;endTime\&quot;:1604239029412,\&quot;totalTime\&quot;:576,\&quot;numTotalItems\&quot;:1,\&quot;numGlobalMruItems\&quot;:0,\&quot;numGlobalMruItemsRequested\&quot;:5,\&quot;numScopedMruItems\&quot;:0,\&quot;numScopedMruItemsRequested\&quot;:0,\&quot;numScopedTypeAheadItems\&quot;:0,\&quot;numHeaderActionItems\&quot;:1,\&quot;numFooterActionItems\&quot;:0,\&quot;typeAheadQueryId\&quot;:\&quot;172ba75skvvh9\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;records\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktopDataProvider\&quot;,\&quot;time\&quot;:1604239029412,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:31698,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;LWCMarksEnabled\&quot;:false}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239029504,\&quot;value\&quot;:[204]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239029504,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239029504,\&quot;value\&quot;:[0]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239000423,\&quot;value\&quot;:[2750]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=54&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">33501040000002d0a1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=55&amp;ui-federated-search-components-federatedsearch-externalscopeslistdataprovider.ExternalScopesListDataProvider.getScopeMaps=1&amp;ui-search-components-forcesearch-topresultsdataprovider.TopResultsDataProvider.getItems=1-461" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;5857;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;topResultsRequestModel&quot;:{&quot;scopeNames&quot;:[],&quot;term&quot;:&quot;${term}&quot;,&quot;pageSize&quot;:5,&quot;enableRowActions&quot;:false,&quot;withSingleSOSL&quot;:true,&quot;withEntityPrediction&quot;:true,&quot;batchSize&quot;:3,&quot;batchingTimeout&quot;:2500,&quot;scopeMap&quot;:{&quot;type&quot;:&quot;TOP_RESULTS&quot;},&quot;context&quot;:{&quot;eventId&quot;:&quot;47f2f68c-2268-ac7a-a7b7-dff00d6cbeb9&quot;,&quot;disableSpellCorrection&quot;:false,&quot;disableIntentQuery&quot;:false,&quot;searchDialogSessionId&quot;:&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2&quot;,&quot;searchSource&quot;:&quot;INPUT_DESKTOP&quot;,&quot;scopeSets&quot;:{&quot;SMART_SCOPE&quot;:[{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Account&quot;,&quot;labelPlural&quot;:&quot;חשבונות&quot;,&quot;fields&quot;:&quot;Name\nOwner.Alias\nvlocity_cmt__Status__c\ntoLabel(vlocity_cmt__Status__c) vlocity_cmt__Status__c__l\nType\ntoLabel(Type) Type__l\nOwnerId\nLastModifiedDate\nRecordTypeId\nCreatedDate\nId\nLastModifiedById\nSystemModstamp&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Contact&quot;,&quot;labelPlural&quot;:&quot;אנשי קשר&quot;,&quot;fields&quot;:&quot;LastModifiedDate\nEmail\nAccountId\nFirstName\nMiddleName\nvlocity_cmt__ContactNumber__c\nMobilePhone\nName\nSystemModstamp\nSuffix\nPhone\nRecordTypeId\nCreatedDate\nAccount.Name\nId\nLastName\nLastModifiedById&quot;},{&quot;cacheable&quot;:&quot;Y&quot;,&quot;name&quot;:&quot;Lead&quot;,&quot;labelPlural&quot;:&quot;לידים&quot;,&quot;fields&quot;:&quot;Status\ntoLabel(Status) Status__l\nLastModifiedDate\nCompany\nEmail\nFirstName\nTitle\nMiddleName\nMobilePhone\nName\nSystemModstamp\nSuffix\nOwnerId\nPhone\nRecordTypeId\nCreatedDate\nOwner.NameOrAlias\nId\nLastName\nLastModifiedById&quot;}]}},&quot;withSpellCorrection&quot;:true,&quot;withIntentQuery&quot;:true}}},{&quot;id&quot;:&quot;5909;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=55&amp;ui-federated-search-components-federatedsearch-externalscopeslistdataprovider.ExternalScopesListDataProvider.getScopeMaps=1&amp;ui-search-components-forcesearch-topresultsdataprovider.TopResultsDataProvider.getItems=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3354599000000494a8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="_recordId" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">_recordId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;recordId&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NULL</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
              <stringProp name="Scope.variable">_QCQQ</stringProp>
              <stringProp name="Sample.scope">all</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2407815">NULL</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">20</intProp>
              <stringProp name="Assertion.scope">variable</stringProp>
              <stringProp name="Scope.variable">_recordId</stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="05. Customer Details" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
          <stringProp name="TestPlan.comments">/lightning/r/Account/0013M0000059VUvQAM/view</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=56&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1-468" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6268;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordDescriptor&quot;:&quot;0013M0000059VUrQAM.0123M0000000FKyQAM.null.null.null.Id,RecordTypeId.VIEW.true.null.vlocity_cmt__Status__c,LastModifiedDate,Owner;2LastModifiedDate,Owner;2Name,Owner;2LastModifiedById,Owner;2Id,Owner;2CreatedDate,Name,SystemModstamp,Type,Owner;2SystemModstamp,Owner;2Alias,OwnerId,RecordTypeId,CreatedDate,Id,LastModifiedById.null&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=56&amp;ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">/lightning/r/Account/0013M0000059VUvQAM/view    ~~~&gt;    /lightning/r/Account/${_recordId}/view </stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">337179600000085e05</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=59&amp;aura.RecordUi.getObjectInfo=1-471" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6428;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getObjectInfo&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;objectApiName&quot;:&quot;Account&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=59&amp;aura.RecordUi.getObjectInfo=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">33726580000002f81d</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=58&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-470" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6427;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__highlightsPanel_Account___0123M0000000FKyQAM___Compact___View&quot;,&quot;adgModuleType&quot;:&quot;component&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=58&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3372607000000afe71</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=57&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1-469" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6426;a&quot;,&quot;descriptor&quot;:&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;Bundle&quot;,&quot;templateReferences&quot;:[{&quot;type&quot;:&quot;AdgRollup&quot;,&quot;attributes&quot;:{&quot;targetModule&quot;:&quot;forceGenerated__flexipage_RecordPage___Billing_Screen_PEL___Account___VIEW&quot;,&quot;adgModuleType&quot;:&quot;template&quot;}}]},&quot;storable&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=57&amp;aura.DynamicComponent.getTemplateDescriptorWithExpansionBundle=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">3372601000000e7477</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-472" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="force" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">force</stringProp>
                  <stringProp name="Argument.value">socialRecordAvatarWrapper</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sfa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sfa</stringProp>
                  <stringProp name="Argument.value">outputNameWithHierarchyIconAccount,outputNameWithHierarchyIconWrapper</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">171053874</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/auraCmpDef-473" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">alp360BaIndicator,alp360BaNboData,alp360BillingIndicator,alp360BillingIndicatorPartTwo,alp360BillingInfo,alp360BillingInvoicesData,alp360CommonBillingData,alp360CommonBillingDataRows,alp360CountCasesBA,alp360CountLeadsBA,alp360CountNboBA,alp360ErrorHandling,alp360HeaderContainerBA,alp360LeadsBA,alp360MainOpenCasesBA,alp360NboDetails,alp360SecurityGuidelinesPelpehoneBA,lib_Utils,toastService</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">-1948713388</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/cs127/auraCmpDef-474" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="aura.app" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.app</stringProp>
                  <stringProp name="Argument.value">markup://one:one</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_au" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_au</stringProp>
                  <stringProp name="Argument.value">Vb1ZsrqgswXUHT9OdA_hBw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ff" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ff</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_l10n" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_l10n</stringProp>
                  <stringProp name="Argument.value">iw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_c</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_style" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_style</stringProp>
                  <stringProp name="Argument.value">-264843540</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_density" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_density</stringProp>
                  <stringProp name="Argument.value">VIEW_ONE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_def" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_def</stringProp>
                  <stringProp name="Argument.value">markup://flexipage:recordHomeSimpleViewTemplate2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_uid</stringProp>
                  <stringProp name="Argument.value">UHp1UsK3ijznTGGp7ChBUA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">static.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/cs127/auraCmpDef</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=34&amp;aura.ApexAction.execute=2-333" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1134;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;FINANCIAL_ACTIVITY_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1135;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;SPECIAL_DIRECTIVES_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=34&amp;aura.ApexAction.execute=2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">11525000000abb0421</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=33&amp;aura.ApexAction.execute=1-332" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1133;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;EXTENSION_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=33&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">109100000001377ca6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=31&amp;aura.ApexAction.execute=1-330" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1131;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;POTENTIAL2_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=31&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">10907000000c9289df</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=29&amp;aura.ApexAction.execute=1-328" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1129;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;BLACKLIST_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=29&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">1090300000011a9cdd</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=30&amp;aura.ApexAction.execute=1-329" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1130;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;POTENTIAL3_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=30&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">109050000000cda7da</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=32&amp;aura.ApexAction.execute=1-331" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1132;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;POTENTIAL1_BILL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=32&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">109090000009b8dccf</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=28&amp;aura.ApexAction.execute=1-327" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;1128;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorCode&quot;:&quot;DEB_LAW_BILL_PEL&quot;,&quot;billingId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=28&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">109010000001bdf475</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=24&amp;aura.ApexAction.execute=1-320" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;997;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getBaHeaderIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorID&quot;:&quot;DIGITAL&quot;,&quot;accountID&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=24&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9473000000d62c5a0e</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=23&amp;aura.ApexAction.execute=1-319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;996;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;getBaHeaderIndicatorData&quot;,&quot;params&quot;:{&quot;indicatorID&quot;:&quot;NEW&quot;,&quot;accountID&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=23&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9468000000eea52593</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=25&amp;aura.ApexAction.execute=1-321" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;998;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_MainController&quot;,&quot;method&quot;:&quot;getBillingAccountCountCases&quot;,&quot;params&quot;:{&quot;serviceName&quot;:&quot;Open_Cases_Counters&quot;,&quot;companyCode&quot;:&quot;PEL&quot;,&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=25&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">947800000005ccd22f</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=21&amp;aura.ApexAction.execute=1-317" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;994;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_BillingController&quot;,&quot;method&quot;:&quot;retBillingInfo&quot;,&quot;params&quot;:{&quot;accountId&quot;:&quot;0013M000006LIzdQAG&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=21&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9460000000570c86e6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=22&amp;aura.ApexAction.execute=1-318" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;995;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;Ctrl_OpenScreenPel&quot;,&quot;method&quot;:&quot;invokeNamedCreds&quot;,&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=22&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">94620000009e8fb417</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=20&amp;aura.ApexAction.execute=1-316" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;993;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_BillingController&quot;,&quot;method&quot;:&quot;getConsumerId&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=20&amp;aura.ApexAction.execute=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">944800000060a079b3</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/pelephone.svg-484" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/pelephone.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/customer-no.svg-485" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/customer-no.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/one/one.app</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/hi.svg-486" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/hi.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/digital.svg-488" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/digital.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/customer-debt.svg-496" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/customer-debt.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/customer-finance.svg-498" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/customer-finance.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resource/1603993242000/alp360_ux_src/assets/icons/customer-special.svg-499" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resource/1603993242000/alp360_ux_src/assets/icons/customer-special.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/webp,*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=75&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-501" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6641;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3380384,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;componentTracker\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;default\&quot;,\&quot;scope\&quot;:\&quot;component\&quot;,\&quot;context\&quot;:{\&quot;devNameOrId\&quot;:[\&quot;c:alp360HeaderContainerBA\&quot;,\&quot;c:alp360BillingIndicatorPartTwo\&quot;,\&quot;c:alp360SecurityGuidelinesPelpehoneBA\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:alp360CommonBillingData\&quot;,\&quot;c:alp360CommonBillingDataRows\&quot;,\&quot;c:alp360ErrorHandling\&quot;]}},\&quot;sequence\&quot;:75,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPageView&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:pageView\&quot;,\&quot;ts\&quot;:3371788,\&quot;duration\&quot;:8596,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;flexipageInfo\&quot;,\&quot;name\&quot;:\&quot;info\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:3374053,\&quot;context\&quot;:{\&quot;flexipageName\&quot;:\&quot;0M03M00000006YySAI\&quot;,\&quot;flexipageType\&quot;:\&quot;RecordPage\&quot;,\&quot;isCustom\&quot;:true,\&quot;isCustomTemplate\&quot;:false,\&quot;templateName\&quot;:\&quot;flexipage:recordHomeSimpleViewTemplate2\&quot;,\&quot;parentFlexipage\&quot;:\&quot;null\&quot;,\&quot;flexipageRenderer\&quot;:\&quot;LWC\&quot;,\&quot;numberOfFieldInstances\&quot;:0,\&quot;Mode\&quot;:\&quot;View\&quot;}},{\&quot;ns\&quot;:\&quot;S1PERF\&quot;,\&quot;name\&quot;:\&quot;pageHost:loadContent\&quot;,\&quot;ts\&quot;:3372525,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;laf:pageHost\&quot;,\&quot;duration\&quot;:17},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:3373731,\&quot;context\&quot;:{\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;objectApiName\&quot;:\&quot;Account\&quot;,\&quot;mode\&quot;:\&quot;View\&quot;,\&quot;layoutType\&quot;:\&quot;Compact\&quot;,\&quot;dynamicComponentType\&quot;:\&quot;HighlightsPanel\&quot;}},{\&quot;ns\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-resolution-start\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:3374042,\&quot;context\&quot;:{\&quot;objectApiName\&quot;:\&quot;Account\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;recordTypeId\&quot;:\&quot;0123M0000000FKyQAM\&quot;}}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3371796,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:56,\&quot;requestLength\&quot;:2355,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6268;a\&quot;],\&quot;requestId\&quot;:\&quot;337179600000085e05\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3694,\&quot;xhrDuration\&quot;:444,\&quot;xhrStall\&quot;:16,\&quot;startTime\&quot;:3371796,\&quot;fetchStart\&quot;:3371796,\&quot;requestStart\&quot;:3371812,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:16,\&quot;transfer\&quot;:428,\&quot;transferSize\&quot;:4768,\&quot;serverTime\&quot;:94,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:446},{\&quot;ts\&quot;:3372658,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:59,\&quot;requestLength\&quot;:1914,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6428;a\&quot;],\&quot;requestId\&quot;:\&quot;33726580000002f81d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:111078,\&quot;xhrDuration\&quot;:380,\&quot;xhrStall\&quot;:8,\&quot;startTime\&quot;:3372658,\&quot;fetchStart\&quot;:3372658,\&quot;requestStart\&quot;:3372666,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:8,\&quot;transfer\&quot;:372,\&quot;transferSize\&quot;:112656,\&quot;serverTime\&quot;:38,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:382},{\&quot;ts\&quot;:3372607,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:58,\&quot;requestLength\&quot;:2205,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6427;a\&quot;],\&quot;requestId\&quot;:\&quot;3372607000000afe71\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:20770,\&quot;xhrDuration\&quot;:464,\&quot;xhrStall\&quot;:26,\&quot;startTime\&quot;:3372608,\&quot;fetchStart\&quot;:3372608,\&quot;requestStart\&quot;:3372634,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:31,\&quot;transfer\&quot;:433,\&quot;transferSize\&quot;:22006,\&quot;serverTime\&quot;:109,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:467},{\&quot;ts\&quot;:3372601,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:57,\&quot;requestLength\&quot;:2201,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6426;a\&quot;],\&quot;requestId\&quot;:\&quot;3372601000000e7477\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:30536,\&quot;xhrDuration\&quot;:685,\&quot;xhrStall\&quot;:17,\&quot;startTime\&quot;:3372602,\&quot;fetchStart\&quot;:3372602,\&quot;requestStart\&quot;:3372619,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:17,\&quot;transfer\&quot;:668,\&quot;transferSize\&quot;:32007,\&quot;serverTime\&quot;:325,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:687},{\&quot;ts\&quot;:3373077,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:6,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:634,\&quot;startTime\&quot;:3373078,\&quot;fetchStart\&quot;:3373078,\&quot;requestStart\&quot;:3373098,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:614,\&quot;transferSize\&quot;:14630,\&quot;encodedBodySize\&quot;:13131,\&quot;decodedBodySize\&quot;:13131,\&quot;serverTime\&quot;:16,\&quot;defs\&quot;:[\&quot;markup://force:socialRecordAvatarWrapper\&quot;,\&quot;markup://sfa:outputNameWithHierarchyIconAccount\&quot;,\&quot;markup://sfa:outputNameWithHierarchyIconWrapper\&quot;],\&quot;xhrDelay\&quot;:5},\&quot;duration\&quot;:639},{\&quot;ts\&quot;:3373293,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:7,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:483,\&quot;startTime\&quot;:3373294,\&quot;fetchStart\&quot;:3373294,\&quot;requestStart\&quot;:3373307,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:13,\&quot;transfer\&quot;:470,\&quot;transferSize\&quot;:74672,\&quot;encodedBodySize\&quot;:73552,\&quot;decodedBodySize\&quot;:73552,\&quot;serverTime\&quot;:64,\&quot;defs\&quot;:[\&quot;markup://c:alp360BaIndicator\&quot;,\&quot;markup://c:alp360BaNboData\&quot;,\&quot;markup://c:alp360BillingIndicator\&quot;,\&quot;markup://c:alp360BillingIndicatorPartTwo\&quot;,\&quot;markup://c:alp360BillingInfo\&quot;,\&quot;markup://c:alp360BillingInvoicesData\&quot;,\&quot;markup://c:alp360CommonBillingData\&quot;,\&quot;markup://c:alp360CommonBillingDataRows\&quot;,\&quot;markup://c:alp360CountCasesBA\&quot;],\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:489},{\&quot;ts\&quot;:3373294,\&quot;context\&quot;:{\&quot;defLoaderId\&quot;:8,\&quot;initiatorType\&quot;:\&quot;script\&quot;,\&quot;duration\&quot;:659,\&quot;startTime\&quot;:3373295,\&quot;fetchStart\&quot;:3373295,\&quot;requestStart\&quot;:3373322,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:4,\&quot;redirect\&quot;:0,\&quot;ttfb\&quot;:27,\&quot;transfer\&quot;:632,\&quot;transferSize\&quot;:3304,\&quot;encodedBodySize\&quot;:1807,\&quot;decodedBodySize\&quot;:1807,\&quot;serverTime\&quot;:9,\&quot;defs\&quot;:[\&quot;markup://flexipage:recordHomeSimpleViewTemplate2\&quot;],\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:663},{\&quot;ts\&quot;:3373745,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:60,\&quot;requestLength\&quot;:2484,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6433;a\&quot;],\&quot;requestId\&quot;:\&quot;33737440000006b1ed\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3248,\&quot;xhrDuration\&quot;:400,\&quot;xhrStall\&quot;:6,\&quot;startTime\&quot;:3373745,\&quot;fetchStart\&quot;:3373745,\&quot;requestStart\&quot;:3373751,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:6,\&quot;transfer\&quot;:394,\&quot;transferSize\&quot;:4317,\&quot;serverTime\&quot;:78,\&quot;xhrDelay\&quot;:261},\&quot;duration\&quot;:661},{\&quot;ts\&quot;:3373749,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:61,\&quot;requestLength\&quot;:1965,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6434;a\&quot;],\&quot;requestId\&quot;:\&quot;33737490000003dde8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:3992,\&quot;xhrDuration\&quot;:418,\&quot;xhrStall\&quot;:26,\&quot;startTime\&quot;:3373749,\&quot;fetchStart\&quot;:3373749,\&quot;requestStart\&quot;:3373775,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:4,\&quot;ttfb\&quot;:29,\&quot;transfer\&quot;:389,\&quot;transferSize\&quot;:5079,\&quot;serverTime\&quot;:70,\&quot;xhrDelay\&quot;:312},\&quot;duration\&quot;:730},{\&quot;ts\&quot;:3374067,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:62,\&quot;requestLength\&quot;:2109,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6435;a\&quot;],\&quot;requestId\&quot;:\&quot;3374067000000f025b\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1257,\&quot;xhrDuration\&quot;:388,\&quot;xhrStall\&quot;:5,\&quot;startTime\&quot;:3374068,\&quot;fetchStart\&quot;:3374068,\&quot;requestStart\&quot;:3374073,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:5,\&quot;transfer\&quot;:383,\&quot;transferSize\&quot;:2308,\&quot;serverTime\&quot;:62,\&quot;xhrDelay\&quot;:33},\&quot;duration\&quot;:421},{\&quot;ts\&quot;:3374080,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:64,\&quot;requestLength\&quot;:2041,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6437;a\&quot;],\&quot;requestId\&quot;:\&quot;3374080000000ccd79\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1285,\&quot;xhrDuration\&quot;:404,\&quot;xhrStall\&quot;:24,\&quot;startTime\&quot;:3374080,\&quot;fetchStart\&quot;:3374080,\&quot;requestStart\&quot;:3374104,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:6,\&quot;ttfb\&quot;:24,\&quot;transfer\&quot;:380,\&quot;transferSize\&quot;:2373,\&quot;serverTime\&quot;:49,\&quot;xhrDelay\&quot;:6},\&quot;duration\&quot;:410},{\&quot;ts\&quot;:3374078,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:63,\&quot;requestLength\&quot;:2111,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6436;a\&quot;],\&quot;requestId\&quot;:\&quot;3374078000000c13c1\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1434,\&quot;xhrDuration\&quot;:535,\&quot;xhrStall\&quot;:12,\&quot;startTime\&quot;:3374078,\&quot;fetchStart\&quot;:3374078,\&quot;requestStart\&quot;:3374090,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:26,\&quot;transfer\&quot;:509,\&quot;transferSize\&quot;:2513,\&quot;serverTime\&quot;:189,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:536},{\&quot;ts\&quot;:3374091,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:65,\&quot;requestLength\&quot;:2187,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6438;a\&quot;],\&quot;requestId\&quot;:\&quot;337409100000018b7a\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1667,\&quot;xhrDuration\&quot;:1716,\&quot;xhrStall\&quot;:61,\&quot;startTime\&quot;:3374091,\&quot;fetchStart\&quot;:3374091,\&quot;requestStart\&quot;:3374152,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:61,\&quot;transfer\&quot;:1655,\&quot;transferSize\&quot;:2720,\&quot;serverTime\&quot;:1326,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1717},{\&quot;ts\&quot;:3374409,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:66,\&quot;requestLength\&quot;:5391,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6439;a\&quot;,\&quot;6440;a\&quot;,\&quot;6441;a\&quot;,\&quot;6442;a\&quot;,\&quot;6443;a\&quot;,\&quot;6444;a\&quot;,\&quot;6449;a\&quot;,\&quot;6450;a\&quot;,\&quot;6451;a\&quot;,\&quot;6452;a\&quot;],\&quot;requestId\&quot;:\&quot;3374409000000dcb24\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:8772,\&quot;xhrDuration\&quot;:3710,\&quot;xhrStall\&quot;:53,\&quot;startTime\&quot;:3374410,\&quot;fetchStart\&quot;:3374410,\&quot;requestStart\&quot;:3374463,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:53,\&quot;transfer\&quot;:3657,\&quot;transferSize\&quot;:10476,\&quot;serverTime\&quot;:2915,\&quot;xhrDelay\&quot;:3},\&quot;duration\&quot;:3713},{\&quot;ts\&quot;:3378155,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:68,\&quot;requestLength\&quot;:1307,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6632;a\&quot;],\&quot;requestId\&quot;:\&quot;33781550000008409e\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1578,\&quot;xhrDuration\&quot;:864,\&quot;xhrStall\&quot;:48,\&quot;startTime\&quot;:3378155,\&quot;fetchStart\&quot;:3378155,\&quot;requestStart\&quot;:3378203,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:8,\&quot;ttfb\&quot;:80,\&quot;transfer\&quot;:784,\&quot;transferSize\&quot;:2630,\&quot;serverTime\&quot;:452,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:865},{\&quot;ts\&quot;:3378157,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:70,\&quot;requestLength\&quot;:1308,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6634;a\&quot;],\&quot;requestId\&quot;:\&quot;33781570000001ed94\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1579,\&quot;xhrDuration\&quot;:877,\&quot;xhrStall\&quot;:77,\&quot;startTime\&quot;:3378158,\&quot;fetchStart\&quot;:3378158,\&quot;requestStart\&quot;:3378235,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:9,\&quot;ttfb\&quot;:77,\&quot;transfer\&quot;:800,\&quot;transferSize\&quot;:2631,\&quot;serverTime\&quot;:455,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:879},{\&quot;ts\&quot;:3378152,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:67,\&quot;requestLength\&quot;:1309,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6631;a\&quot;],\&quot;requestId\&quot;:\&quot;337815200000003190\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1662,\&quot;xhrDuration\&quot;:912,\&quot;xhrStall\&quot;:35,\&quot;startTime\&quot;:3378153,\&quot;fetchStart\&quot;:3378153,\&quot;requestStart\&quot;:3378188,\&quot;dns\&quot;:4,\&quot;tcp\&quot;:7,\&quot;ttfb\&quot;:82,\&quot;transfer\&quot;:830,\&quot;transferSize\&quot;:2723,\&quot;serverTime\&quot;:500,\&quot;xhrDelay\&quot;:2},\&quot;duration\&quot;:914},{\&quot;ts\&quot;:3378156,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:69,\&quot;requestLength\&quot;:1308,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6633;a\&quot;],\&quot;requestId\&quot;:\&quot;33781550000005ad4b\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1580,\&quot;xhrDuration\&quot;:933,\&quot;xhrStall\&quot;:63,\&quot;startTime\&quot;:3378156,\&quot;fetchStart\&quot;:3378156,\&quot;requestStart\&quot;:3378219,\&quot;dns\&quot;:3,\&quot;tcp\&quot;:8,\&quot;ttfb\&quot;:79,\&quot;transfer\&quot;:854,\&quot;transferSize\&quot;:2632,\&quot;serverTime\&quot;:506,\&quot;xhrDelay\&quot;:8},\&quot;duration\&quot;:941},{\&quot;ts\&quot;:3378160,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:71,\&quot;requestLength\&quot;:1308,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6635;a\&quot;],\&quot;requestId\&quot;:\&quot;33781600000004d55d\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1579,\&quot;xhrDuration\&quot;:1081,\&quot;xhrStall\&quot;:334,\&quot;startTime\&quot;:3378160,\&quot;fetchStart\&quot;:3378160,\&quot;requestStart\&quot;:3378494,\&quot;dns\&quot;:1,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:334,\&quot;transfer\&quot;:747,\&quot;transferSize\&quot;:2631,\&quot;serverTime\&quot;:407,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1082},{\&quot;ts\&quot;:3378161,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:72,\&quot;requestLength\&quot;:1307,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6636;a\&quot;],\&quot;requestId\&quot;:\&quot;337816100000056718\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:1578,\&quot;xhrDuration\&quot;:1620,\&quot;xhrStall\&quot;:863,\&quot;startTime\&quot;:3378162,\&quot;fetchStart\&quot;:3378162,\&quot;requestStart\&quot;:3379025,\&quot;dns\&quot;:2,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:863,\&quot;transfer\&quot;:757,\&quot;transferSize\&quot;:2630,\&quot;serverTime\&quot;:433,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1621},{\&quot;ts\&quot;:3379021,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:73,\&quot;requestLength\&quot;:1822,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;6637;a\&quot;,\&quot;6638;a\&quot;],\&quot;requestId\&quot;:\&quot;3379021000000debdb\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:2218,\&quot;xhrDuration\&quot;:1288,\&quot;xhrStall\&quot;:20,\&quot;startTime\&quot;:3379021,\&quot;fetchStart\&quot;:3379021,\&quot;requestStart\&quot;:3379041,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:0,\&quot;ttfb\&quot;:20,\&quot;transfer\&quot;:1268,\&quot;transferSize\&quot;:3296,\&quot;serverTime\&quot;:955,\&quot;xhrDelay\&quot;:1},\&quot;duration\&quot;:1289}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3371795,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6268;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:recordGlobalValueProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.recordGlobalValueProvider.RecordGvpController/ACTION$getRecord\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:71,\&quot;db\&quot;:26,\&quot;xhrServerTime\&quot;:94,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:461},{\&quot;ts\&quot;:3372489,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6370;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:2,\&quot;enqueueWait\&quot;:59,\&quot;duration\&quot;:61},{\&quot;ts\&quot;:3372657,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6428;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getObjectInfo\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:15,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:37,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:385},{\&quot;ts\&quot;:3372607,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6427;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__highlightsPanel_Account___0123M0000000FKyQAM___Compact___View\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;component\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:88,\&quot;db\&quot;:2,\&quot;xhrServerTime\&quot;:109,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:468},{\&quot;ts\&quot;:3372601,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6426;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://DynamicComponentController/ACTION$getTemplateDescriptorWithExpansionBundle\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;params\&quot;:{\&quot;type\&quot;:\&quot;Bundle\&quot;,\&quot;templateReferences\&quot;:\&quot;[{\\\&quot;type\\\&quot;:\\\&quot;AdgRollup\\\&quot;,\\\&quot;attributes\\\&quot;:{\\\&quot;targetModule\\\&quot;:\\\&quot;forceGenerated__flexipage_RecordPage___Billing_Screen_PEL___Account___VIEW\\\&quot;,\\\&quot;adgModuleType\\\&quot;:\\\&quot;template\\\&quot;}}]\&quot;},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:263,\&quot;db\&quot;:50,\&quot;xhrServerTime\&quot;:324,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:690},{\&quot;ts\&quot;:3373744,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6433;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://RecordUiController/ACTION$getRecordWithFields\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:60,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:78,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:664},{\&quot;ts\&quot;:3373748,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6434;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ActionsController/ACTION$getRecordActions\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:50,\&quot;db\&quot;:17,\&quot;xhrServerTime\&quot;:70,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:731},{\&quot;ts\&quot;:3374066,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6435;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:39,\&quot;db\&quot;:10,\&quot;xhrServerTime\&quot;:62,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:423},{\&quot;ts\&quot;:3374079,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6437;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:28,\&quot;db\&quot;:8,\&quot;xhrServerTime\&quot;:49,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:412},{\&quot;ts\&quot;:3374078,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6436;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:170,\&quot;db\&quot;:90,\&quot;xhrServerTime\&quot;:189,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:536},{\&quot;ts\&quot;:3374091,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6438;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:1307,\&quot;db\&quot;:98,\&quot;xhrServerTime\&quot;:1326,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1719},{\&quot;ts\&quot;:3374098,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6439;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:311,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:508,\&quot;db\&quot;:62,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:4026},{\&quot;ts\&quot;:3374104,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6440;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:305,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:419,\&quot;db\&quot;:96,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:4020},{\&quot;ts\&quot;:3374106,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6441;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:303,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:22,\&quot;db\&quot;:4,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:4018},{\&quot;ts\&quot;:3374122,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6442;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:286,\&quot;enqueueWait\&quot;:1,\&quot;serverTime\&quot;:{\&quot;total\&quot;:41,\&quot;db\&quot;:3,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:4002},{\&quot;ts\&quot;:3374148,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6443;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:261,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:11,\&quot;db\&quot;:1,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3976},{\&quot;ts\&quot;:3374153,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6444;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:256,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:407,\&quot;db\&quot;:78,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3971},{\&quot;ts\&quot;:3374223,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6449;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;one:workspaceTabWrapper\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.global.components.one.workspaceTabWrapper.WorkspaceTabWrapperController/ACTION$getThemeForEntityApiName\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:186,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:0,\&quot;db\&quot;:0,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:8,\&quot;duration\&quot;:3909},{\&quot;ts\&quot;:3374232,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6450;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:177,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:637,\&quot;db\&quot;:108,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3900},{\&quot;ts\&quot;:3374235,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6451;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:174,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:365,\&quot;db\&quot;:43,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3897},{\&quot;ts\&quot;:3374238,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6452;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:171,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:404,\&quot;db\&quot;:95,\&quot;xhrServerTime\&quot;:2914,\&quot;boxCarCount\&quot;:10},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:3894},{\&quot;ts\&quot;:3378155,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6632;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:436,\&quot;db\&quot;:116,\&quot;xhrServerTime\&quot;:452,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:866},{\&quot;ts\&quot;:3378157,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6634;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:390,\&quot;db\&quot;:79,\&quot;xhrServerTime\&quot;:455,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:890},{\&quot;ts\&quot;:3378152,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6631;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:483,\&quot;db\&quot;:125,\&quot;xhrServerTime\&quot;:500,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:914},{\&quot;ts\&quot;:3378155,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6633;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:1,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:491,\&quot;db\&quot;:148,\&quot;xhrServerTime\&quot;:506,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:944},{\&quot;ts\&quot;:3378160,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6635;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:390,\&quot;db\&quot;:42,\&quot;xhrServerTime\&quot;:407,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1082},{\&quot;ts\&quot;:3378161,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6636;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:0,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:415,\&quot;db\&quot;:103,\&quot;xhrServerTime\&quot;:433,\&quot;boxCarCount\&quot;:1},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:1623},{\&quot;ts\&quot;:3378162,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6637;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:859,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:400,\&quot;db\&quot;:76,\&quot;xhrServerTime\&quot;:955,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:1,\&quot;duration\&quot;:2150},{\&quot;ts\&quot;:3378165,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6638;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;none\&quot;,\&quot;def\&quot;:\&quot;aura://ApexActionController/ACTION$execute\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:856,\&quot;enqueueWait\&quot;:0,\&quot;serverTime\&quot;:{\&quot;total\&quot;:537,\&quot;db\&quot;:235,\&quot;xhrServerTime\&quot;:955,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:0,\&quot;duration\&quot;:2147}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:660,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;one:workspace2\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:103},{\&quot;name\&quot;:\&quot;flexipage:tabset\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:88},{\&quot;name\&quot;:\&quot;c:alp360SecurityGuidelinesPelpehoneBA\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:77},{\&quot;name\&quot;:\&quot;c:alp360BillingIndicatorPartTwo\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:102},{\&quot;name\&quot;:\&quot;c:alp360HeaderContainerBA\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:186}]}],\&quot;lds\&quot;:[{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-stats\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:3380380,\&quot;context\&quot;:{\&quot;recordCount\&quot;:208,\&quot;subscriptionCount\&quot;:6,\&quot;snapshotSubscriptionCount\&quot;:4,\&quot;watchSubscriptionCount\&quot;:2}},{\&quot;ns\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;runtime-perf\&quot;,\&quot;phase\&quot;:\&quot;stamp\&quot;,\&quot;ts\&quot;:3380385,\&quot;context\&quot;:{\&quot;storeIngest\&quot;:12,\&quot;storeBroadcast\&quot;:55,\&quot;storeLookup\&quot;:17}}]},\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;ept\&quot;:8594,\&quot;previousPage\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}},\&quot;attributes\&quot;:{\&quot;darkModeEnabled\&quot;:false,\&quot;fieldInstancesEnabled\&quot;:true,\&quot;numTotalLoadedTabs\&quot;:2,\&quot;numTotalWorkspaces\&quot;:2,\&quot;numTotalSubtabs\&quot;:0,\&quot;cores\&quot;:4,\&quot;eptDeviation\&quot;:false,\&quot;density\&quot;:\&quot;COMFY\&quot;,\&quot;totalEpt\&quot;:8594,\&quot;defaultCmp\&quot;:[\&quot;c:alp360HeaderContainerBA\&quot;,\&quot;c:alp360BillingIndicatorPartTwo\&quot;,\&quot;c:alp360SecurityGuidelinesPelpehoneBA\&quot;,\&quot;flexipage:tabset\&quot;,\&quot;c:alp360CommonBillingData\&quot;,\&quot;c:alp360CommonBillingDataRows\&quot;,\&quot;c:alp360ErrorHandling\&quot;],\&quot;gates\&quot;:{\&quot;scenarioTrackerEnabled.instrumentation.ltng\&quot;:true,\&quot;scenarioTrackerMarksEnabled.instrumentation.ltng\&quot;:false,\&quot;browserIdleTime.instrumentation.ltng\&quot;:false,\&quot;clientTelemetry.instrumentation.ltng\&quot;:true,\&quot;rrh.useLWCRelatedLists\&quot;:true,\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true},\&quot;cacheStats\&quot;:{\&quot;AuraStorage_actions\&quot;:{\&quot;hits\&quot;:13,\&quot;misses\&quot;:0},\&quot;AuraStorage_ldsObjectInfo\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:getObjectInfo:storage\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;AuraRecordStore\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;lds:getRecordActions\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:2},\&quot;lds:getObjectInfo\&quot;:{\&quot;hits\&quot;:3,\&quot;misses\&quot;:1},\&quot;lds:getRecord\&quot;:{\&quot;hits\&quot;:4,\&quot;misses\&quot;:1},\&quot;AuraRecordStore_oneConsoleLayoutContainer2\&quot;:{\&quot;hits\&quot;:0,\&quot;misses\&quot;:1},\&quot;total\&quot;:{\&quot;hits\&quot;:20,\&quot;misses\&quot;:8}},\&quot;complexity\&quot;:{\&quot;ADS_fields\&quot;:7},\&quot;sequence\&quot;:4,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3380386,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://one:recordHomeFlexipage2Wrapper\&quot;,\&quot;markup://one:recordHomeFlexipage2\&quot;],\&quot;pageCounter\&quot;:4,\&quot;phase\&quot;:\&quot;EPT\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:76,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060020,\&quot;value\&quot;:[208]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060020,\&quot;value\&quot;:[2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060020,\&quot;value\&quot;:[4]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060017,\&quot;value\&quot;:[217684]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.beforeEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060017,\&quot;value\&quot;:[38208]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;pageview.ept.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060020,\&quot;value\&quot;:[8594]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=75&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">338039600000024e49</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=74&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1-500" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;6640;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.instrumentation.components.beacon.InstrumentationBeaconController/ACTION$sendData&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;batch&quot;:[{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3350652,\&quot;duration\&quot;:2,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-sgdp-request-getGlobalMrus\&quot;,\&quot;attributes\&quot;:{\&quot;tStart\&quot;:1604239030286,\&quot;cacheHit\&quot;:true,\&quot;etCacheGet\&quot;:0,\&quot;tSending\&quot;:1604239030286,\&quot;etDataCopy\&quot;:1,\&quot;tEnd\&quot;:1604239030287,\&quot;name\&quot;:\&quot;DEFAULT\&quot;,\&quot;groupId\&quot;:\&quot;DEFAULT\&quot;,\&quot;requestType\&quot;:\&quot;getGlobalMrus\&quot;,\&quot;etTransaction\&quot;:1,\&quot;requestId\&quot;:\&quot;cacheBridge:9d8686aa-d248-0c71-57be-7433c587ba37\&quot;,\&quot;requestCmp\&quot;:\&quot;cacheBridge\&quot;,\&quot;requestCmpId\&quot;:\&quot;9d8686aa-d248-0c71-57be-7433c587ba37\&quot;,\&quot;params\&quot;:[\&quot;maxResults:200\&quot;,\&quot;term:MASKED_SEARCH_INFO\&quot;,\&quot;limitGlobalRequests:true\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchGDPCacheMrus\&quot;,\&quot;time\&quot;:1604239030287,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:32573,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3350652,\&quot;duration\&quot;:11,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideMruOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;hasScopedMrus\&quot;:false,\&quot;hasGlobalMrus\&quot;:true,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;startTime\&quot;:1604239030286,\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;endTime\&quot;:1604239030293,\&quot;totalTime\&quot;:7,\&quot;numTotalItems\&quot;:0,\&quot;numGlobalItems\&quot;:0,\&quot;numScopedItems\&quot;:0,\&quot;hasSearchTerm\&quot;:true,\&quot;sourceCmp\&quot;:\&quot;forceSearch:mruDataProvider\&quot;,\&quot;time\&quot;:1604239030295,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:32581,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3350723,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:3,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2_3\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239030356,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:58,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3350720,\&quot;duration\&quot;:27,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:12,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:12}]}]},\&quot;owner\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideTypeAheadOptions\&quot;,\&quot;attributes\&quot;:{\&quot;startTime\&quot;:1604239030355,\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;actionId\&quot;:\&quot;5780;a\&quot;,\&quot;isFromStorage\&quot;:true,\&quot;numItems\&quot;:0,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;endTime\&quot;:1604239030379,\&quot;totalTime\&quot;:24,\&quot;sourceCmp\&quot;:\&quot;forceSearch:typeAheadDataProvider\&quot;,\&quot;time\&quot;:1604239030380,\&quot;queryLength\&quot;:5,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:32666,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3350751,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;iteration\&quot;:4,\&quot;numChars\&quot;:5,\&quot;numResults\&quot;:1,\&quot;resultSet\&quot;:[{\&quot;position\&quot;:1,\&quot;resultType\&quot;:\&quot;USER_INPUT\&quot;}],\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2_4\&quot;,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239030384,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-suggestions-list\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:59,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3350644,\&quot;duration\&quot;:120,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:18,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;ui:autocompleteOption\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:18}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideInputOptions\&quot;,\&quot;attributes\&quot;:{\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;crossEntityTypeAheadEnabled\&quot;:true,\&quot;startTime\&quot;:1604239030276,\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;headerActionTime\&quot;:0,\&quot;mruTime\&quot;:7,\&quot;typeAheadTime\&quot;:24,\&quot;typeAheadFromStorage\&quot;:true,\&quot;typeAheadActionId\&quot;:\&quot;5780;a\&quot;,\&quot;endTime\&quot;:1604239030397,\&quot;totalTime\&quot;:121,\&quot;numTotalItems\&quot;:1,\&quot;numGlobalMruItems\&quot;:0,\&quot;numGlobalMruItemsRequested\&quot;:5,\&quot;numScopedMruItems\&quot;:0,\&quot;numScopedMruItemsRequested\&quot;:0,\&quot;numScopedTypeAheadItems\&quot;:0,\&quot;numHeaderActionItems\&quot;:1,\&quot;numFooterActionItems\&quot;:0,\&quot;typeAheadQueryId\&quot;:\&quot;172ba75skvvh9\&quot;,\&quot;hasSearchTerm\&quot;:true,\&quot;records\&quot;:[],\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktopDataProvider\&quot;,\&quot;time\&quot;:1604239030398,\&quot;queryLength\&quot;:5,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;8e4b1fce-074c-9462-811f-5f6c7a7e4e74\&quot;,\&quot;searchId\&quot;:\&quot;8c5481e0-05b5-5455-bc8b-c075b14cfb64\&quot;,\&quot;searchStartTime\&quot;:1604238997714,\&quot;searchElapsedTime\&quot;:32684,\&quot;searchDialogSessionId\&quot;:\&quot;f77d4056-1c3a-90f2-35f2-e75387b1c724\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3354512,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;aura:html\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;context\&quot;:{},\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;},\&quot;sequence\&quot;:60,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3354515,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;method\&quot;:\&quot;click\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;type\&quot;:\&quot;SEARCH_OPTION\&quot;,\&quot;prescoping\&quot;:false,\&quot;suggestionId\&quot;:\&quot;7d5f312d-28ee-16cb-0f03-dc7f5cf400c9\&quot;,\&quot;instantResultListImpressionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2_4\&quot;,\&quot;position\&quot;:1,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;sourceCmp\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;time\&quot;:1604239034148,\&quot;queryLength\&quot;:5,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-mru-action-item\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:61,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354550,\&quot;duration\&quot;:16,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-search\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1604239034199,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;c3b04a77-52bc-2e6e-aa39-6703b26a6cfd\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:48,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354521,\&quot;duration\&quot;:65,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:6,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6}]}]},\&quot;owner\&quot;:\&quot;forceSearch:scopes\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-newSearch\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;time\&quot;:1604239034220,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;c3b04a77-52bc-2e6e-aa39-6703b26a6cfd\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:69,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354594,\&quot;duration\&quot;:3,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-search\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1604239034231,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:80,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354564,\&quot;duration\&quot;:578,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;transport\&quot;:[{\&quot;ts\&quot;:3354600,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:55,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5857;a\&quot;,\&quot;5909;a\&quot;],\&quot;requestId\&quot;:\&quot;3354599000000494a8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5244,\&quot;xhrDuration\&quot;:533,\&quot;xhrStall\&quot;:34,\&quot;startTime\&quot;:3354601,\&quot;fetchStart\&quot;:3354601,\&quot;requestStart\&quot;:3354635,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:34,\&quot;transfer\&quot;:499,\&quot;transferSize\&quot;:6349,\&quot;serverTime\&quot;:155,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:537}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3354585,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5884;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:0,\&quot;enqueueWait\&quot;:14,\&quot;duration\&quot;:14}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-provideResults\&quot;,\&quot;attributes\&quot;:{\&quot;scopeNames\&quot;:[],\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;enableRowActions\&quot;:false,\&quot;withSingleSOSL\&quot;:true,\&quot;withEntityPrediction\&quot;:true,\&quot;batchSize\&quot;:3,\&quot;batchingTimeout\&quot;:2500,\&quot;searchTimes\&quot;:[\&quot;SEU.getSearchableEntitiesName():1\&quot;,\&quot;SEP.getPredictedEntities():45\&quot;,\&quot;TRDP.getScopeMapsToSearch():0\&quot;,\&quot;TRDP.getItems()search:89\&quot;,\&quot;TRDP.getItems():135\&quot;,\&quot;XHR.duration:575\&quot;],\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;time\&quot;:1604239034774,\&quot;queryLength\&quot;:5,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3355301,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;sortBy\&quot;:\&quot;__relevancy__\&quot;,\&quot;queryId\&quot;:\&quot;-vdcv0l8et2xh\&quot;,\&quot;numResults\&quot;:1,\&quot;queryIds\&quot;:[\&quot;-vdcv0l8et2xh\&quot;],\&quot;page\&quot;:1,\&quot;inMultiScope\&quot;:true,\&quot;resultType\&quot;:\&quot;KEYWORD_RESULTS\&quot;,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1604239034934,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:783,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-grid-lvm\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:62,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3355541,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-refresh\&quot;,\&quot;attributes\&quot;:{\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-vdcv0l8et2xh\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:14|RCC.buildSearchRecords():0|RCC.buildScopedResponse():14|RCC.buildSearchRequest():0|SS.runSearch():38|RCC.getRecords():52\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:374,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1ag60io62l0uc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():17|RCC.getRecords():17\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1vxvco4iszajo\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():20|RCC.getRecords():20\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;queryIds\&quot;:[\&quot;-vdcv0l8et2xh\&quot;,\&quot;-1ag60io62l0uc\&quot;,\&quot;-1vxvco4iszajo\&quot;],\&quot;inMultiScope\&quot;:false,\&quot;numResults\&quot;:1,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239035173,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:1022,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-results-multi-scope\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:63,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354555,\&quot;duration\&quot;:987,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:3355160,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:373},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:3355461,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;4665:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:62}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3354600,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:55,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5857;a\&quot;,\&quot;5909;a\&quot;],\&quot;requestId\&quot;:\&quot;3354599000000494a8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5244,\&quot;xhrDuration\&quot;:533,\&quot;xhrStall\&quot;:34,\&quot;startTime\&quot;:3354601,\&quot;fetchStart\&quot;:3354601,\&quot;requestStart\&quot;:3354635,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:34,\&quot;transfer\&quot;:499,\&quot;transferSize\&quot;:6349,\&quot;serverTime\&quot;:155,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:537}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3354585,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5884;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:0,\&quot;enqueueWait\&quot;:14,\&quot;duration\&quot;:14},{\&quot;ts\&quot;:3354564,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5857;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:9,\&quot;enqueueWait\&quot;:27,\&quot;serverTime\&quot;:{\&quot;total\&quot;:135,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:155,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:14,\&quot;duration\&quot;:589},{\&quot;ts\&quot;:3355365,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6036;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:155,\&quot;enqueueWait\&quot;:6,\&quot;duration\&quot;:161}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:194,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:121},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-3855372b6b67703658597934363138664977327332513d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:31},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:27},{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:6,\&quot;createTimeTotal\&quot;:14},{\&quot;name\&quot;:\&quot;search_lightning:searchMoreBox\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:1}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPT\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1604239034188,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:1,\&quot;totalTime\&quot;:985,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:575,\&quot;serverTime\&quot;:135,\&quot;networkTime\&quot;:440,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:89,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:410},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-vdcv0l8et2xh\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:14|RCC.buildSearchRecords():0|RCC.buildScopedResponse():14|RCC.buildSearchRequest():0|SS.runSearch():38|RCC.getRecords():52\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:374,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1ag60io62l0uc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():17|RCC.getRecords():17\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1vxvco4iszajo\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():20|RCC.getRecords():20\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:575,\&quot;serverTime\&quot;:135,\&quot;startTime\&quot;:7,\&quot;networkTime\&quot;:440,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():1|SEP.getPredictedEntities():45|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:89|TRDP.getItems():135|XHR.duration:575|LVS.getListViewDefinition:14|RCC.buildSearchRecords():0|RCC.buildScopedResponse():14|RCC.buildSearchRequest():0|SS.runSearch():75|RCC.getRecords():89\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:89,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;1\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;45\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;89\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;135\&quot;,\&quot;XHR_duration\&quot;:\&quot;575\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;14\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;14\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;75\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;89\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239035175,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:1024,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354517,\&quot;duration\&quot;:1032,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;custom\&quot;:[{\&quot;ns\&quot;:\&quot;ltng\&quot;,\&quot;name\&quot;:\&quot;performance:search-showResultsSection1\&quot;,\&quot;ts\&quot;:3355160,\&quot;context\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;duration\&quot;:373},{\&quot;ns\&quot;:\&quot;UIPERF\&quot;,\&quot;name\&quot;:\&quot;ui:virtualDataTable.createVirtualRows\&quot;,\&quot;ts\&quot;:3355461,\&quot;context\&quot;:{\&quot;auraid\&quot;:\&quot;4665:0\&quot;},\&quot;owner\&quot;:\&quot;ui:virtualDataTable\&quot;,\&quot;duration\&quot;:62}],\&quot;transport\&quot;:[{\&quot;ts\&quot;:3354600,\&quot;context\&quot;:{\&quot;auraXHRId\&quot;:55,\&quot;requestLength\&quot;:4212,\&quot;background\&quot;:false,\&quot;actionDefs\&quot;:[\&quot;5857;a\&quot;,\&quot;5909;a\&quot;],\&quot;requestId\&quot;:\&quot;3354599000000494a8\&quot;,\&quot;status\&quot;:200,\&quot;statusText\&quot;:\&quot;OK\&quot;,\&quot;responseLength\&quot;:5244,\&quot;xhrDuration\&quot;:533,\&quot;xhrStall\&quot;:34,\&quot;startTime\&quot;:3354601,\&quot;fetchStart\&quot;:3354601,\&quot;requestStart\&quot;:3354635,\&quot;dns\&quot;:0,\&quot;tcp\&quot;:1,\&quot;ttfb\&quot;:34,\&quot;transfer\&quot;:499,\&quot;transferSize\&quot;:6349,\&quot;serverTime\&quot;:155,\&quot;xhrDelay\&quot;:4},\&quot;duration\&quot;:537}],\&quot;actions\&quot;:[{\&quot;ts\&quot;:3354585,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5884;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;runtime_search_federated:externalScopesListDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.federated.search.components.federatedsearch.externalscopeslistdataprovider.ExternalScopesListDataProviderController/ACTION$getScopeMaps\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:0,\&quot;enqueueWait\&quot;:14,\&quot;duration\&quot;:14},{\&quot;ts\&quot;:3354564,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;5857;a\&quot;,\&quot;abortable\&quot;:false,\&quot;storable\&quot;:false,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;forceSearch:resultsTopResultsDataProvider\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.search.components.forcesearch.topresultsdataprovider.TopResultsDataProviderController/ACTION$getItems\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:false},\&quot;xhrWait\&quot;:9,\&quot;enqueueWait\&quot;:27,\&quot;serverTime\&quot;:{\&quot;total\&quot;:135,\&quot;db\&quot;:9,\&quot;xhrServerTime\&quot;:155,\&quot;boxCarCount\&quot;:2},\&quot;callbackTime\&quot;:14,\&quot;duration\&quot;:589},{\&quot;ts\&quot;:3355365,\&quot;context\&quot;:{\&quot;id\&quot;:\&quot;6036;a\&quot;,\&quot;abortable\&quot;:true,\&quot;storable\&quot;:true,\&quot;background\&quot;:false,\&quot;cmp\&quot;:\&quot;force:listViewManagerGrid\&quot;,\&quot;def\&quot;:\&quot;serviceComponent://ui.force.components.controllers.lists.listViewManagerGrid.ListViewManagerGridController/ACTION$getRecordLayoutComponent\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cache\&quot;:true},\&quot;callbackTime\&quot;:155,\&quot;enqueueWait\&quot;:6,\&quot;duration\&quot;:161}],\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:200,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:6},{\&quot;name\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:121},{\&quot;name\&quot;:\&quot;rl-Account-VIEW-SEARCH--__SearchResult--force_listViewManagerGrid-_1-0-3855372b6b67703658597934363138664977327332513d3d.c\&quot;,\&quot;createCount\&quot;:1,\&quot;createTimeTotal\&quot;:31},{\&quot;name\&quot;:\&quot;force:listViewManagerGridColumnHeaderMenu\&quot;,\&quot;createCount\&quot;:4,\&quot;createTimeTotal\&quot;:27},{\&quot;name\&quot;:\&quot;force:inlineEditKeyNavCell\&quot;,\&quot;createCount\&quot;:6,\&quot;createTimeTotal\&quot;:14}]}]},\&quot;owner\&quot;:\&quot;forceSearch:inputDesktop\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-showResultsTopResultsEPTE2E\&quot;,\&quot;attributes\&quot;:{\&quot;refreshId\&quot;:1604239034188,\&quot;eptSummary\&quot;:{\&quot;displayedBucketCount\&quot;:1,\&quot;totalTime\&quot;:985,\&quot;xhrCount\&quot;:1,\&quot;xhrTime\&quot;:575,\&quot;serverTime\&quot;:135,\&quot;networkTime\&quot;:440,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false,\&quot;batchingTotalTime\&quot;:89,\&quot;batchingTimeoutReached\&quot;:0,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;buildRecordLayoutsTime\&quot;:0,\&quot;displayTime\&quot;:410},\&quot;buckets\&quot;:[{\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:1,\&quot;queryId\&quot;:\&quot;-vdcv0l8et2xh\&quot;,\&quot;times\&quot;:\&quot;LVS.getListViewDefinition:14|RCC.buildSearchRecords():0|RCC.buildScopedResponse():14|RCC.buildSearchRequest():0|SS.runSearch():38|RCC.getRecords():52\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:0,\&quot;displayTime\&quot;:374,\&quot;fetchRecordLayoutTime\&quot;:0,\&quot;bucketRank\&quot;:1},{\&quot;scopeName\&quot;:\&quot;Contact\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1ag60io62l0uc\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():17|RCC.getRecords():17\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:1,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0},{\&quot;scopeName\&quot;:\&quot;Lead\&quot;,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;pageSize\&quot;:5,\&quot;numResults\&quot;:0,\&quot;queryId\&quot;:\&quot;-1vxvco4iszajo\&quot;,\&quot;times\&quot;:\&quot;RCC.buildSearchRecords():0|RCC.buildScopedResponse():0|RCC.buildSearchRequest():0|SS.runSearch():20|RCC.getRecords():20\&quot;,\&quot;hasError\&quot;:false,\&quot;bucketIdx\&quot;:2,\&quot;displayTime\&quot;:0,\&quot;fetchRecordLayoutTime\&quot;:0}],\&quot;xhrs\&quot;:[{\&quot;xhrTime\&quot;:575,\&quot;serverTime\&quot;:135,\&quot;startTime\&quot;:7,\&quot;networkTime\&quot;:440,\&quot;times\&quot;:\&quot;SEU.getSearchableEntitiesName():1|SEP.getPredictedEntities():45|TRDP.getScopeMapsToSearch():0|TRDP.getItems()search:89|TRDP.getItems():135|XHR.duration:575|LVS.getListViewDefinition:14|RCC.buildSearchRecords():0|RCC.buildScopedResponse():14|RCC.buildSearchRequest():0|SS.runSearch():75|RCC.getRecords():89\&quot;,\&quot;numBucketsRequested\&quot;:3,\&quot;numBucketsProcessed\&quot;:3,\&quot;numBucketsWithResults\&quot;:1,\&quot;numRecordLayoutsCreated\&quot;:0,\&quot;numBucketsWithErrors\&quot;:0,\&quot;batchingTotalTime\&quot;:89,\&quot;batchingTimeoutValue\&quot;:2500,\&quot;batchingTimeoutReached\&quot;:false,\&quot;withSingleSOSL\&quot;:false,\&quot;hasDeprioritizedScopes\&quot;:false}],\&quot;serverTimeDetails\&quot;:{\&quot;SEU_getSearchableEntitiesName__\&quot;:\&quot;1\&quot;,\&quot;SEP_getPredictedEntities__\&quot;:\&quot;45\&quot;,\&quot;TRDP_getScopeMapsToSearch__\&quot;:\&quot;0\&quot;,\&quot;TRDP_getItems__search\&quot;:\&quot;89\&quot;,\&quot;TRDP_getItems__\&quot;:\&quot;135\&quot;,\&quot;XHR_duration\&quot;:\&quot;575\&quot;,\&quot;LVS_getListViewDefinition\&quot;:\&quot;14\&quot;,\&quot;RCC_buildSearchRecords__\&quot;:\&quot;0\&quot;,\&quot;RCC_buildScopedResponse__\&quot;:\&quot;14\&quot;,\&quot;RCC_buildSearchRequest__\&quot;:\&quot;0\&quot;,\&quot;SS_runSearch__\&quot;:\&quot;75\&quot;,\&quot;RCC_getRecords__\&quot;:\&quot;89\&quot;},\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239035182,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:1031,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3355550,\&quot;duration\&quot;:45,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{\&quot;component\&quot;:[{\&quot;totalCreateTime\&quot;:17,\&quot;slowestCreates\&quot;:[{\&quot;name\&quot;:\&quot;force:walkthrough\&quot;,\&quot;createCount\&quot;:2,\&quot;createTimeTotal\&quot;:17}]}]},\&quot;owner\&quot;:\&quot;forceSearch:resultsMultiScope\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-scopesPanel-scopeItemsReorderingOn\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsTopResults\&quot;,\&quot;time\&quot;:1604239035229,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:1078,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3354511,\&quot;duration\&quot;:1184,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;autocomplete-content\&quot;,\&quot;scope\&quot;:\&quot;search-input-desktop\&quot;,\&quot;pageContext\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;pageUrl\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3371738,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;click\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;context\&quot;:{\&quot;additionalContext\&quot;:\&quot;\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;},\&quot;target\&quot;:\&quot;entity-link\&quot;,\&quot;scope\&quot;:\&quot;inline-edit-grid\&quot;},\&quot;sequence\&quot;:64,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3371743,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;user\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-click\&quot;,\&quot;attributes\&quot;:{\&quot;clickSource\&quot;:\&quot;SearchResult\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;isSpellCorrected\&quot;:false,\&quot;destinationRecordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;position\&quot;:1,\&quot;pageNum\&quot;:0,\&quot;numResultsPerPage\&quot;:50,\&quot;numResults\&quot;:1,\&quot;tableEnumOrId\&quot;:\&quot;Account\&quot;,\&quot;queryId\&quot;:\&quot;-vdcv0l8et2xh\&quot;,\&quot;queryIds\&quot;:[\&quot;-vdcv0l8et2xh\&quot;],\&quot;sort\&quot;:null,\&quot;inMultiScope\&quot;:true,\&quot;searchDialogSuggestionsListIteration\&quot;:null,\&quot;entityPredictionRequestId\&quot;:\&quot;-ui8h2lbutrie\&quot;,\&quot;entityRank\&quot;:1,\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsGridLVM\&quot;,\&quot;time\&quot;:1604239051377,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;Account\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:17226,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;search-result-item\&quot;,\&quot;scope\&quot;:\&quot;search-results-container\&quot;,\&quot;context\&quot;:{}},\&quot;sequence\&quot;:65,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;clickSource&quot;:&quot;SearchResult&quot;,&quot;recordId&quot;:&quot;0013M0000059VUrQAM&quot;,&quot;isSpellCorrected&quot;:false,&quot;destinationRecordId&quot;:&quot;0013M0000059VUrQAM&quot;,&quot;position&quot;:1,&quot;pageNum&quot;:0,&quot;numResultsPerPage&quot;:50,&quot;numResults&quot;:1,&quot;tableEnumOrId&quot;:&quot;Account&quot;,&quot;queryId&quot;:&quot;-vdcv0l8et2xh&quot;,&quot;queryIds&quot;:[&quot;-vdcv0l8et2xh&quot;],&quot;sort&quot;:null,&quot;inMultiScope&quot;:true,&quot;searchDialogSuggestionsListIteration&quot;:null,&quot;entityPredictionRequestId&quot;:&quot;-ui8h2lbutrie&quot;,&quot;entityRank&quot;:1,&quot;scrolled&quot;:false,&quot;sourceCmp&quot;:&quot;forceSearch:resultsGridLVM&quot;,&quot;time&quot;:1604239051377,&quot;queryLength&quot;:5,&quot;term&quot;:&quot;MASKED_SEARCH_INFO&quot;,&quot;scopeName&quot;:&quot;Account&quot;,&quot;searchActivity&quot;:{&quot;resultsContainerId&quot;:&quot;0796a34d-7e1e-f02a-3808-5bdbb1998ff6&quot;,&quot;searchId&quot;:&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751&quot;,&quot;searchStartTime&quot;:1604239034151,&quot;searchElapsedTime&quot;:17226,&quot;searchDialogSessionId&quot;:&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2&quot;,&quot;searchSource&quot;:&quot;INPUT_DESKTOP&quot;},&quot;page&quot;:{&quot;appName&quot;:&quot;Alpha_360&quot;,&quot;appType&quot;:&quot;Console&quot;,&quot;appNamespace&quot;:&quot;c&quot;,&quot;location&quot;:&quot;forceSearch:searchPageDesktop&quot;},&quot;cdnEnabled&quot;:true,&quot;uriDefsEnabled&quot;:true,&quot;gates&quot;:{},&quot;topic&quot;:&quot;seclk&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3371784,\&quot;duration\&quot;:2034570,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;pageTracker\&quot;,\&quot;attributes\&quot;:{\&quot;pageId\&quot;:3,\&quot;phase\&quot;:\&quot;END\&quot;,\&quot;defaultCmp\&quot;:[],\&quot;nonDefaultCmp\&quot;:[],\&quot;backgroundTime\&quot;:0,\&quot;trxDeleted\&quot;:{},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3371786,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;defsUsage\&quot;,\&quot;attributes\&quot;:{\&quot;defs\&quot;:[\&quot;markup://ui:outputRichText\&quot;],\&quot;pageCounter\&quot;:3,\&quot;phase\&quot;:\&quot;navFromPage\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;defsUsage\&quot;,\&quot;scope\&quot;:\&quot;defsUsage\&quot;},\&quot;sequence\&quot;:66,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3371787,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;instrumentation:beacon\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;bandwidthUsage\&quot;,\&quot;attributes\&quot;:{\&quot;txTotalSize\&quot;:587599,\&quot;txInstrSize\&quot;:451834,\&quot;txTotalCount\&quot;:27,\&quot;txInstrCount\&quot;:5,\&quot;rxTotalSize\&quot;:112528,\&quot;rxInstrSize\&quot;:12583,\&quot;rxTotalCount\&quot;:27,\&quot;rxInstrCount\&quot;:5,\&quot;pageId\&quot;:3,\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3372246,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;laf:platformPageResolver\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;recordTypeSetInClient\&quot;:true,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;},\&quot;sequence\&quot;:67,\&quot;page\&quot;:{\&quot;context\&quot;:\&quot;forceSearch:searchPageDesktop\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/one/one.app#eyJjb21wb25lbnREZWYiOiJmb3JjZVNlYXJjaDpzZWFyY2hQYWdlRGVza3RvcCIsImF0dHJpYnV0ZXMiOnsidGVybSI6IjIzMjkiLCJzY29wZU1hcCI6eyJ0eXBlIjoiVE9QX1JFU1VMVFMifSwiY29udGV4dCI6eyJkaXNhYmxlU3BlbGxDb3JyZWN0aW9uIjpmYWxzZSwiZGlzYWJsZUludGVudFF1ZXJ5IjpmYWxzZSwicGVybXNBbmRQcmVmcyI6eyJPcmdQZXJtaXNzaW9ucy5VbmlvbkFwcE5hdlNtYXJ0U2NvcGUiOmZhbHNlLCJTZWFyY2hVaS5mZWVkYmFja0NvbXBvbmVudEVuYWJsZWQiOmZhbHNlLCJPcmdQZXJtaXNzaW9ucy5FaW5zdGVpblNlYXJjaEFwcHMiOmZhbHNlLCJPcmdQcmVmZXJlbmNlcy5DaGF0dGVyRW5hYmxlZCI6dHJ1ZSwiU2VhcmNoLmNyb3NzT2JqZWN0c0F1dG9TdWdnZXN0RW5hYmxlZCI6dHJ1ZSwiU2VhcmNoVWkuc2VhcmNoVUlJbnRlcmFjdGlvbkxvZ2dpbmdFbmFibGVkIjpmYWxzZSwiTXlTZWFyY2gudXNlckNhbkhhdmVNeVNlYXJjaEJlc3RSZXN1bHQiOmZhbHNlLCJTZWFyY2hSZXN1bHRzTFZNLmx2bUVuYWJsZWRGb3JUb3BSZXN1bHRzIjpmYWxzZX0sInNlYXJjaERpYWxvZ1Nlc3Npb25JZCI6IjUxYjkwY2RhLTkzNDEtMGQxOC0zYTZlLWQyNWQyMWI3MmM1YSIsInNlYXJjaFNvdXJjZSI6IklOUFVUX0RFU0tUT1AifSwiZ3JvdXBJZCI6IkRFRkFVTFQifSwic3RhdGUiOnt9fQ%3D%3D\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3372471,\&quot;duration\&quot;:6,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-search-results-region-update-scopes-context\&quot;,\&quot;attributes\&quot;:{\&quot;scrolled\&quot;:false,\&quot;sourceCmp\&quot;:\&quot;forceSearch:resultsRegion\&quot;,\&quot;time\&quot;:1604239052105,\&quot;queryLength\&quot;:5,\&quot;term\&quot;:\&quot;MASKED_SEARCH_INFO\&quot;,\&quot;scopeName\&quot;:\&quot;TOP_RESULTS\&quot;,\&quot;searchActivity\&quot;:{\&quot;resultsContainerId\&quot;:\&quot;2157137d-5a5f-5c9e-b6a2-6b66766647f5\&quot;,\&quot;searchId\&quot;:\&quot;4cc9e26b-2c8e-15fc-8539-23f1e85e5751\&quot;,\&quot;searchStartTime\&quot;:1604239034151,\&quot;searchElapsedTime\&quot;:17954,\&quot;searchDialogSessionId\&quot;:\&quot;1097e054-acf2-c9ce-6b9e-85988cd2b0a2\&quot;,\&quot;searchSource\&quot;:\&quot;INPUT_DESKTOP\&quot;},\&quot;page\&quot;:{\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;,\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;location\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;},\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3372522,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab1\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:false}},\&quot;sequence\&quot;:68,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3373070,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-stats\&quot;,\&quot;attributes\&quot;:{\&quot;name\&quot;:\&quot;ldsObjectInfo\&quot;,\&quot;adapter\&quot;:\&quot;crypto\&quot;,\&quot;sizeKB\&quot;:-1,\&quot;maxSizeKB\&quot;:5120,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3374207,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;one:workspace2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-load-workspace-info\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-workspace-addWorkspace\&quot;,\&quot;scope\&quot;:\&quot;one-workspaceCollection\&quot;,\&quot;context\&quot;:{\&quot;object\&quot;:\&quot;Account\&quot;,\&quot;hasPinnedRegions\&quot;:false,\&quot;pinnedRegionTemplateName\&quot;:null}},\&quot;sequence\&quot;:69,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3374278,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab0\&quot;,\&quot;active\&quot;:false}},\&quot;sequence\&quot;:70,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3374280,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;one:consoleTabItem\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-active\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTabItem-toggle-activate\&quot;,\&quot;scope\&quot;:\&quot;one-consoleTabContainer\&quot;,\&quot;context\&quot;:{\&quot;tabId\&quot;:\&quot;ctab1\&quot;,\&quot;active\&quot;:true,\&quot;focused\&quot;:true}},\&quot;sequence\&quot;:71,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3374355,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:\&quot;one:consoleLayoutContainer2\&quot;,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;synthetic-tab-opened\&quot;,\&quot;attributes\&quot;:{\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;one-consoleTab-opened\&quot;,\&quot;scope\&quot;:\&quot;one-consoleLayoutContainer-logTabTransaction\&quot;,\&quot;context\&quot;:{\&quot;numSubtabsInWorkspace\&quot;:0,\&quot;numLoadedSubtabsInWorkspace\&quot;:0,\&quot;numTotalWorkspaces\&quot;:2,\&quot;numTotalSubtabs\&quot;:0,\&quot;numTotalLoadedWorkspaces\&quot;:2,\&quot;numTotalLoadedSubtabs\&quot;:0,\&quot;numTotalPinnedTabs\&quot;:0,\&quot;isIE11\&quot;:false,\&quot;customAppId\&quot;:\&quot;${_appDefinition}\&quot;,\&quot;customAppDevName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;recordKeyPrefix\&quot;:\&quot;001\&quot;,\&quot;isActive\&quot;:true,\&quot;isSubtab\&quot;:false,\&quot;source\&quot;:\&quot;USERACTION\&quot;,\&quot;workspaceId\&quot;:\&quot;ctab1\&quot;,\&quot;numTotalTabs\&quot;:2,\&quot;numTotalLoadedTabs\&quot;:2}},\&quot;sequence\&quot;:72,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3374410,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;crud\&quot;,\&quot;eventSource\&quot;:\&quot;read\&quot;,\&quot;attributes\&quot;:{\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;recordType\&quot;:\&quot;Account\&quot;,\&quot;state\&quot;:\&quot;SUCCESS\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:{\&quot;target\&quot;:\&quot;read\&quot;,\&quot;scope\&quot;:\&quot;force_record\&quot;,\&quot;context\&quot;:null},\&quot;sequence\&quot;:73,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3374530,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-stats\&quot;,\&quot;attributes\&quot;:{\&quot;name\&quot;:\&quot;runtimeServiceOmniChannelStorage\&quot;,\&quot;adapter\&quot;:\&quot;indexeddb\&quot;,\&quot;sizeKB\&quot;:-1,\&quot;maxSizeKB\&quot;:16,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3377475,\&quot;duration\&quot;:0,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;storage-stats\&quot;,\&quot;attributes\&quot;:{\&quot;name\&quot;:\&quot;recordGVP50.0\&quot;,\&quot;adapter\&quot;:\&quot;crypto\&quot;,\&quot;sizeKB\&quot;:-1,\&quot;maxSizeKB\&quot;:5120,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningPerformance&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:performance\&quot;,\&quot;ts\&quot;:3371734,\&quot;duration\&quot;:8644,\&quot;pageStartTime\&quot;:1604235679593,\&quot;marks\&quot;:{},\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;performance\&quot;,\&quot;eventSource\&quot;:\&quot;scenarioTime\&quot;,\&quot;attributes\&quot;:{\&quot;target\&quot;:\&quot;entity-link\&quot;,\&quot;scope\&quot;:\&quot;inline-edit-grid\&quot;,\&quot;additionalContext\&quot;:\&quot;\&quot;,\&quot;recordId\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;pageContext\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;pageUrl\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;,\&quot;entityType\&quot;:\&quot;unknown\&quot;,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{\&quot;forceRecordMarksEnabled\&quot;:false,\&quot;LWCMarksEnabled\&quot;:false,\&quot;scenarioTrackerMarksEnabled\&quot;:false}}}&quot;},{&quot;topic&quot;:&quot;ailtn&quot;,&quot;schemaType&quot;:&quot;LightningInteraction&quot;,&quot;payload&quot;:&quot;{\&quot;id\&quot;:\&quot;ltng:interaction\&quot;,\&quot;ts\&quot;:3380380,\&quot;pageStartTime\&quot;:1604235679593,\&quot;owner\&quot;:null,\&quot;unixTS\&quot;:false,\&quot;eventType\&quot;:\&quot;system\&quot;,\&quot;eventSource\&quot;:\&quot;locker-method-data\&quot;,\&quot;attributes\&quot;:{\&quot;document.querySelector\&quot;:1,\&quot;cdnEnabled\&quot;:true,\&quot;uriDefsEnabled\&quot;:true,\&quot;gates\&quot;:{}},\&quot;locator\&quot;:null,\&quot;sequence\&quot;:74,\&quot;page\&quot;:{\&quot;entity\&quot;:\&quot;0013M0000059VUrQAM\&quot;,\&quot;context\&quot;:\&quot;one:recordHomeFlexipage2Wrapper\&quot;,\&quot;attributes\&quot;:{\&quot;app\&quot;:{\&quot;appNamespace\&quot;:\&quot;c\&quot;,\&quot;appName\&quot;:\&quot;Alpha_360\&quot;,\&quot;appType\&quot;:\&quot;Console\&quot;},\&quot;url\&quot;:\&quot;/lightning/r/Account/0013M0000059VUrQAM/view\&quot;}}}&quot;}],&quot;traces&quot;:&quot;[]&quot;,&quot;metrics&quot;:&quot;[{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053851,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053384,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;get-record-normal-invoke-count\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053378,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-size-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060014,\&quot;value\&quot;:[204,208]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-watch-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060014,\&quot;value\&quot;:[2,2]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-snapshot-subscriptions-count\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060014,\&quot;value\&quot;:[0,4]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-broadcast-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054117,\&quot;value\&quot;:[0,0,55,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-ingest-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054116,\&quot;value\&quot;:[3,3,3,0,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;store-lookup-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239057797,\&quot;value\&quot;:[0,2,0,0,0,2,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;scenarioTime.ms\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239060011,\&quot;value\&quot;:[1183,8644]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageReceived.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239051421,\&quot;value\&quot;:[112528]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsageSent.afterEpt.bytes\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239051421,\&quot;value\&quot;:[587599]},{\&quot;owner\&quot;:\&quot;Instrumentation\&quot;,\&quot;name\&quot;:\&quot;bwUsage.instrSizePct\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239051421,\&quot;value\&quot;:[1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053384,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getRecordActions\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054118,\&quot;value\&quot;:[733,738]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053851,\&quot;value\&quot;:3},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053851,\&quot;value\&quot;:[0,1,0]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239052233,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getObjectInfo\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239052681,\&quot;value\&quot;:[451]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-count.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053844,\&quot;value\&quot;:4},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-hit-duration.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053844,\&quot;value\&quot;:[3,2,1,1]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-count.getRecord\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053379,\&quot;value\&quot;:1},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;cache-miss-duration.getRecord\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054105,\&quot;value\&quot;:[733]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-add-records-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239051884,\&quot;value\&quot;:[4]},{\&quot;owner\&quot;:\&quot;lds\&quot;,\&quot;name\&quot;:\&quot;ads-bridge-emit-record-changed-duration\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054104,\&quot;value\&quot;:[54]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-size\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053676,\&quot;value\&quot;:[37,15]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.root-property-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053676,\&quot;value\&quot;:21},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053677,\&quot;value\&quot;:24},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-type.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053677,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053679,\&quot;value\&quot;:18},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053679,\&quot;value\&quot;:7},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-stopped\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053369,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.conditional-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053679,\&quot;value\&quot;:[0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053680,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getObjectInfo-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053681,\&quot;value\&quot;:[1,1]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-node-resolution.wire-node-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054119,\&quot;value\&quot;:[3,2,3,738,748,750]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053679,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.d-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053680,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.d-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053680,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053680,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.b-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053680,\&quot;value\&quot;:[0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053384,\&quot;value\&quot;:2},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire\&quot;,\&quot;type\&quot;:\&quot;Counter\&quot;,\&quot;ts\&quot;:1604239053681,\&quot;value\&quot;:8},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.c-wire-unresolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239053681,\&quot;value\&quot;:[0,0,0,0,0,0,0,0]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecord-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054105,\&quot;value\&quot;:[1,734]},{\&quot;owner\&quot;:\&quot;lasr\&quot;,\&quot;name\&quot;:\&quot;adg-wire-resolution.getRecordActions-wire-resolved\&quot;,\&quot;type\&quot;:\&quot;PercentileHistogram\&quot;,\&quot;ts\&quot;:1604239054118,\&quot;value\&quot;:[733,738]}]&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;${_appDefinition}&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=74&amp;ui-instrumentation-components-beacon.InstrumentationBeacon.sendData=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M0000059VUrQAM/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">33803940000005afd9</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/aura?r=26&amp;aura.ApexAction.execute=7&amp;aura.RecordUi.getRecordWithFields=1&amp;ui-global-components-one-workspaceTabWrapper.WorkspaceTabWrapper.getThemeForEntityApiName=1-323" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="message" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">message</stringProp>
                  <stringProp name="Argument.value">{&quot;actions&quot;:[{&quot;id&quot;:&quot;999;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;alp360_LeadController&quot;,&quot;method&quot;:&quot;getBaCountLeads&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1000;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_NBOController&quot;,&quot;method&quot;:&quot;retNBOCount&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;,&quot;module&quot;:&quot;Billing&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1001;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;retIndicatorCodeByCompanyList&quot;,&quot;params&quot;:{&quot;module&quot;:&quot;Billing&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1002;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_BillingController&quot;,&quot;method&quot;:&quot;getSecurityGuidelinesPelephone&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;serviceName&quot;:&quot;Security_Guidelines_PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1003;a&quot;,&quot;descriptor&quot;:&quot;aura://RecordUiController/ACTION$getRecordWithFields&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;fields&quot;:[&quot;Account.Id&quot;,&quot;Account.RecordType.DeveloperName&quot;],&quot;optionalFields&quot;:[&quot;Account.Billing_Account_Number__c&quot;,&quot;Account.CreatedDate&quot;,&quot;Account.LastModifiedById&quot;,&quot;Account.LastModifiedDate&quot;,&quot;Account.Name&quot;,&quot;Account.Owner.Id&quot;,&quot;Account.Owner.Name&quot;,&quot;Account.OwnerId&quot;,&quot;Account.Parent_Customer_ID__c&quot;,&quot;Account.Phone&quot;,&quot;Account.RecordType.CreatedDate&quot;,&quot;Account.RecordType.Id&quot;,&quot;Account.RecordType.LastModifiedById&quot;,&quot;Account.RecordType.LastModifiedDate&quot;,&quot;Account.RecordType.Name&quot;,&quot;Account.RecordType.SystemModstamp&quot;,&quot;Account.RecordTypeId&quot;,&quot;Account.SystemModstamp&quot;,&quot;Account.Type&quot;,&quot;Account.vlocity_cmt__Status__c&quot;]}},{&quot;id&quot;:&quot;1008;a&quot;,&quot;descriptor&quot;:&quot;serviceComponent://ui.global.components.one.workspaceTabWrapper.WorkspaceTabWrapperController/ACTION$getThemeForEntityApiName&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;entityApiName&quot;:&quot;Account&quot;,&quot;recordTypeId&quot;:&quot;0123M0000000FKyQAM&quot;},&quot;storable&quot;:true},{&quot;id&quot;:&quot;1009;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_BillingController&quot;,&quot;method&quot;:&quot;retCommonBillingData&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1010;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_BillingController&quot;,&quot;method&quot;:&quot;retCommonBillingDataRows&quot;,&quot;params&quot;:{&quot;recordId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;companyCode&quot;:&quot;PEL&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}},{&quot;id&quot;:&quot;1011;a&quot;,&quot;descriptor&quot;:&quot;aura://ApexActionController/ACTION$execute&quot;,&quot;callingDescriptor&quot;:&quot;UNKNOWN&quot;,&quot;params&quot;:{&quot;namespace&quot;:&quot;&quot;,&quot;classname&quot;:&quot;ALP360_IndicatorController&quot;,&quot;method&quot;:&quot;retErrorFromMDM&quot;,&quot;params&quot;:{&quot;accountId&quot;:&quot;0013M000006LIzdQAG&quot;,&quot;module&quot;:&quot;BILLING&quot;},&quot;cacheable&quot;:false,&quot;isContinuation&quot;:false}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.context" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.context</stringProp>
                  <stringProp name="Argument.value">{&quot;mode&quot;:&quot;PROD&quot;,&quot;fwuid&quot;:&quot;dDIdorNC3N22LalQ5i3slQ&quot;,&quot;app&quot;:&quot;one:one&quot;,&quot;loaded&quot;:{&quot;APPLICATION@markup://one:one&quot;:&quot;Vb1ZsrqgswXUHT9OdA_hBw&quot;},&quot;dn&quot;:[],&quot;globals&quot;:{&quot;density&quot;:&quot;VIEW_ONE&quot;,&quot;appContextId&quot;:&quot;06m3M0000000COoQAM&quot;},&quot;uad&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.pageURI" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.pageURI</stringProp>
                  <stringProp name="Argument.value">/lightning/r/Account/${_recordId}/view</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="aura.token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aura.token</stringProp>
                  <stringProp name="Argument.value">${_token}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">alpha--qaall.lightning.force.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/aura?r=26&amp;aura.ApexAction.execute=7&amp;aura.RecordUi.getRecordWithFields=1&amp;ui-global-components-one-workspaceTabWrapper.WorkspaceTabWrapper.getThemeForEntityApiName=1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com/lightning/r/Account/0013M000006LIzdQAG/view</stringProp>
                </elementProp>
                <elementProp name="X-SFDC-Request-Id" elementType="Header">
                  <stringProp name="Header.name">X-SFDC-Request-Id</stringProp>
                  <stringProp name="Header.value">9822000000db954ac6</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://alpha--qaall.lightning.force.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:82.0) Gecko/20100101 Firefox/82.0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
